{"id":"google/cloud/datastore/dataset/lookupresults","name":"LookupResults","title":["Google","Cloud","Datastore","Dataset","LookupResults"],"description":"<p>LookupResults is a special case Array with additional values.\nA LookupResults object is returned from Dataset#find_all and\ncontains the entities as well as the Keys that were deferred from\nthe results and the Entities that were missing in the dataset.</p>\n\n<p>Please be cautious when treating the QueryResults as an Array.\nMany common Array methods will return a new Array instance.</p>","source":"google-cloud-datastore/lib/google/cloud/datastore/dataset/lookup_results.rb#L55","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/datastore\"\n\ndatastore = Google::Cloud::Datastore.new\n\ntasks = datastore.find_all task_key1, task_key2, task_key3\ntasks.size #=> 3\ntasks.deferred #=> []\ntasks.missing #=> []"},{"caption":"<p>Caution, many Array methods will return a new Array instance:</p>","code":"require \"google/cloud/datastore\"\n\ndatastore = Google::Cloud::Datastore.new\n\ntasks = datastore.find_all task_key1, task_key2, task_key3\ntasks.size #=> 3\ntasks.deferred #=> []\ntasks.missing #=> []\ndescriptions = tasks.map { |task| task[\"description\"] }\ndescriptions.size #=> 3\ndescriptions.deferred #=> raise NoMethodError\ndescriptions.missing #=> raise NoMethodError"}],"methods":[{"id":"deferred-instance","type":"instance","name":"deferred","title":["Google","Cloud","Datastore","Dataset","LookupResults#deferred"],"description":"<p>Keys that were not looked up due to resource constraints.</p>","source":"google-cloud-datastore/lib/google/cloud/datastore/dataset/lookup_results.rb#L58","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"deferred=-instance","type":"instance","name":"deferred=","title":["Google","Cloud","Datastore","Dataset","LookupResults#deferred="],"description":"<p>Keys that were not looked up due to resource constraints.</p>","source":"google-cloud-datastore/lib/google/cloud/datastore/dataset/lookup_results.rb#L58","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"missing-instance","type":"instance","name":"missing","title":["Google","Cloud","Datastore","Dataset","LookupResults#missing"],"description":"<p>Entities not found, with only the key populated.</p>","source":"google-cloud-datastore/lib/google/cloud/datastore/dataset/lookup_results.rb#L62","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"missing=-instance","type":"instance","name":"missing=","title":["Google","Cloud","Datastore","Dataset","LookupResults#missing="],"description":"<p>Entities not found, with only the key populated.</p>","source":"google-cloud-datastore/lib/google/cloud/datastore/dataset/lookup_results.rb#L62","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"next?-instance","type":"instance","name":"next?","title":["Google","Cloud","Datastore","Dataset","LookupResults#next?"],"description":"<p>Whether there are more results available.</p>","source":"google-cloud-datastore/lib/google/cloud/datastore/dataset/lookup_results.rb#L87","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/datastore\"\n\ndatastore = Google::Cloud::Datastore.new\n\ntask_key1 = datastore.key \"Task\", \"sampleTask1\"\ntask_key2 = datastore.key \"Task\", \"sampleTask2\"\ntasks = datastore.find_all task_key1, task_key2\nif tasks.next?\n  next_tasks = tasks.next\nend"}],"params":[],"exceptions":[],"returns":[{"types":["Boolean"],"description":""}]},{"id":"next-instance","type":"instance","name":"next","title":["Google","Cloud","Datastore","Dataset","LookupResults#next"],"description":"<p>Retrieve the next page of results.</p>","source":"google-cloud-datastore/lib/google/cloud/datastore/dataset/lookup_results.rb#L108","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/datastore\"\n\ndatastore = Google::Cloud::Datastore.new\n\ntask_key1 = datastore.key \"Task\", \"sampleTask1\"\ntask_key2 = datastore.key \"Task\", \"sampleTask2\"\ntasks = datastore.find_all task_key1, task_key2\nif tasks.next?\n  next_tasks = tasks.next\nend"}],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/datastore/dataset/lookupresults\">LookupResults</a>"],"description":""}]},{"id":"all-instance","type":"instance","name":"all","title":["Google","Cloud","Datastore","Dataset","LookupResults#all"],"description":"<p>Retrieves all lookup results by repeatedly loading <a data-custom-type=\"google/cloud/datastore/dataset/lookupresults\" data-method=\"next-instance\">#next</a> until\n<a data-custom-type=\"google/cloud/datastore/dataset/lookupresults\" data-method=\"next?-instance\">#next?</a> returns <code>false</code>. Calls the given block once for each\nresult, which is passed as the parameter.</p>\n\n<p>An Enumerator is returned if no block is given.</p>\n\n<p>This method may make several API calls until all lookup results are\nretrieved. Be sure to use as narrow a search criteria as possible.\nPlease use with caution.</p>","source":"google-cloud-datastore/lib/google/cloud/datastore/dataset/lookup_results.rb#L169","resources":[],"examples":[{"caption":"<p>Iterating each result by passing a block:</p>","code":"require \"google/cloud/datastore\"\n\ndatastore = Google::Cloud::Datastore.new\n\ntask_key1 = datastore.key \"Task\", \"sampleTask1\"\ntask_key2 = datastore.key \"Task\", \"sampleTask2\"\ntasks = datastore.find_all task_key1, task_key2\ntasks.all do |task|\n  puts \"Task #{task.key.id} (#cursor)\"\nend"},{"caption":"<p>Using the enumerator by not passing a block:</p>","code":"require \"google/cloud/datastore\"\n\ndatastore = Google::Cloud::Datastore.new\n\ntask_key1 = datastore.key \"Task\", \"sampleTask1\"\ntask_key2 = datastore.key \"Task\", \"sampleTask2\"\ntasks = datastore.find_all task_key1, task_key2\nall_keys = tasks.all.map(&:key)"},{"caption":"<p>Limit the number of API calls made:</p>","code":"require \"google/cloud/datastore\"\n\ndatastore = Google::Cloud::Datastore.new\n\ntask_key1 = datastore.key \"Task\", \"sampleTask1\"\ntask_key2 = datastore.key \"Task\", \"sampleTask2\"\ntasks = datastore.find_all task_key1, task_key2\ntasks.all(request_limit: 10) do |task|\n  puts \"Task #{task.key.id} (#cursor)\"\nend"}],"params":[{"name":"request_limit","types":["Integer"],"description":"The upper limit of API requests to\nmake to load all lookup results. Default is no limit.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"The block for accessing each lookup result.","optional":true,"nullable":false},{"name":"yield.result","types":["Entity"],"description":"The lookup result object.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["Enumerator"],"description":""}]}]}