{"id":"google/cloud/resourcemanager","name":"ResourceManager","title":["Google","Cloud","ResourceManager"],"description":"<h1 id=\"google-cloud-resource-manager\">Google Cloud Resource Manager</h1>\n\n<p>The Resource Manager API provides methods that you can use to\nprogrammatically manage your projects in the Google Cloud Platform. You\nmay be familiar with managing projects in the <a href=\"https://developers.google.com/console/help/new/\">Developers\nConsole</a>. With this API\nyou can do the following:</p>\n\n<ul>\n  <li>Get a list of all projects associated with an account</li>\n  <li>Create new projects</li>\n  <li>Update existing projects</li>\n  <li>Delete projects</li>\n  <li>Undelete, or recover, projects that you don’t want to delete</li>\n</ul>\n\n<h2 id=\"authentication\">Authentication</h2>\n\n<p>The Resource Manager API currently requires authentication of a <a href=\"https://developers.google.com/identity/protocols/OAuth2\">User\nAccount</a>, and\ncannot currently be accessed with a <a href=\"https://developers.google.com/identity/protocols/OAuth2ServiceAccount\">Service\nAccount</a>.\nTo use a User Account install the <a href=\"http://cloud.google.com/sdk\">Google Cloud\nSDK</a> and authenticate with the following:</p>\n\n<pre><code>$ gcloud auth login\n</code></pre>\n\n<p>Also make sure all <code>GCLOUD</code> environment variables are cleared of any\nservice accounts. Then google-cloud will be able to detect the user\nauthentication and connect with those credentials.</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud/resource_manager\"\n\nresource_manager = Google::Cloud::ResourceManager.new\n</code></pre>\n\n<h2 id=\"listing-projects\">Listing Projects</h2>\n\n<p>Project is a collection of settings, credentials, and metadata about the\napplication or applications you’re working on. You can retrieve and\ninspect all projects that you have permissions to. (See\n<a data-custom-type=\"google/cloud/resourcemanager/manager\" data-method=\"projects-instance\">Google::Cloud::ResourceManager::Manager#projects</a>)</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud/resource_manager\"\n\nresource_manager = Google::Cloud::ResourceManager.new\nresource_manager.projects.each do |project|\n  puts projects.project_id\nend\n</code></pre>\n\n<h2 id=\"managing-projects-with-labels\">Managing Projects with Labels</h2>\n\n<p>Labels can be added to or removed from projects. (See\n<a data-custom-type=\"google/cloud/resourcemanager/project\" data-method=\"labels-instance\">Google::Cloud::ResourceManager::Project#labels</a>)</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud/resource_manager\"\n\nresource_manager = Google::Cloud::ResourceManager.new\nproject = resource_manager.project \"tokyo-rain-123\"\n# Label the project as production\nproject.update do |p|\n  p.labels[\"env\"] = \"production\"\nend\n</code></pre>\n\n<p>Projects can then be filtered by labels. (See\n<a data-custom-type=\"google/cloud/resourcemanager/manager\" data-method=\"projects-instance\">Google::Cloud::ResourceManager::Manager#projects</a>)</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud/resource_manager\"\n\nresource_manager = Google::Cloud::ResourceManager.new\n# Find only the productions projects\nprojects = resource_manager.projects filter: \"labels.env:production\"\nprojects.each do |project|\n  puts project.project_id\nend\n</code></pre>\n\n<h2 id=\"creating-a-project\">Creating a Project</h2>\n\n<p>You can also use the API to create new projects. (See\n<a data-custom-type=\"google/cloud/resourcemanager/manager\" data-method=\"create_project-instance\">Google::Cloud::ResourceManager::Manager#create_project</a>)</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud/resource_manager\"\n\nresource_manager = Google::Cloud::ResourceManager.new\nproject = resource_manager.create_project \"tokyo-rain-123\",\n                                          name: \"Todos Development\",\n                                          labels: {env: :development}\n</code></pre>\n\n<h2 id=\"deleting-a-project\">Deleting a Project</h2>\n\n<p>You can delete projects when they are no longer needed. (See\n<a data-custom-type=\"google/cloud/resourcemanager/manager\" data-method=\"delete-instance\">Google::Cloud::ResourceManager::Manager#delete</a> and\n<a data-custom-type=\"google/cloud/resourcemanager/project\" data-method=\"delete-instance\">Google::Cloud::ResourceManager::Project#delete</a>)</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud/resource_manager\"\n\nresource_manager = Google::Cloud::ResourceManager.new\nresource_manager.delete \"tokyo-rain-123\"\n</code></pre>\n\n<h2 id=\"undeleting-a-project\">Undeleting a Project</h2>\n\n<p>You can also restore a deleted project within the waiting period that\nstarts when the project was deleted. Restoring a project returns it to the\nstate it was in prior to being deleted. (See\n<a data-custom-type=\"google/cloud/resourcemanager/manager\" data-method=\"undelete-instance\">Google::Cloud::ResourceManager::Manager#undelete</a> and\n<a data-custom-type=\"google/cloud/resourcemanager/project\" data-method=\"undelete-instance\">Google::Cloud::ResourceManager::Project#undelete</a>)</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud/resource_manager\"\n\nresource_manager = Google::Cloud::ResourceManager.new\nresource_manager.undelete \"tokyo-rain-123\"\n</code></pre>\n\n<h2 id=\"configuring-retries-and-timeout\">Configuring retries and timeout</h2>\n\n<p>You can configure how many times API requests may be automatically\nretried. When an API request fails, the response will be inspected to see\nif the request meets criteria indicating that it may succeed on retry,\nsuch as <code>500</code> and <code>503</code> status codes or a specific internal error code\nsuch as <code>rateLimitExceeded</code>. If it meets the criteria, the request will be\nretried after a delay. If another error occurs, the delay will be\nincreased before a subsequent attempt, until the <code>retries</code> limit is\nreached.</p>\n\n<p>You can also set the request <code>timeout</code> value in seconds.</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud/resource_manager\"\n\nresource_manager = Google::Cloud::ResourceManager.new retries: 10,\n                                                      timeout: 120\n</code></pre>\n\n<p>See the <a href=\"https://cloud.google.com/resource-manager/docs/core_errors\">Resource Manager error\nmessages</a>\nfor a list of error conditions.</p>\n\n<h2 id=\"managing-iam-policies\">Managing IAM Policies</h2>\n\n<p>Google Cloud Identity and Access Management (<a href=\"https://cloud.google.com/iam/\">Cloud\nIAM</a>) access control policies can be\nmanaged on projects. These policies allow project owners to manage <em>who</em>\n(identity) has access to <em>what</em> (role). See <a href=\"https://cloud.google.com/iam/docs/overview\">Cloud IAM\nOverview</a> for more\ninformation.</p>\n\n<p>A project’s access control policy can be retrieved. (See\n<a data-custom-type=\"google/cloud/resourcemanager/project\" data-method=\"policy-instance\">Google::Cloud::ResourceManager::Project#policy</a> and\n<a data-custom-type=\"google/cloud/resourcemanager/policy\">Google::Cloud::ResourceManager::Policy</a>.)</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud/resource_manager\"\n\nresource_manager = Google::Cloud::ResourceManager.new\nproject = resource_manager.project \"tokyo-rain-123\"\npolicy = project.policy\n</code></pre>\n\n<p>A project’s access control policy can also be updated:</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud/resource_manager\"\n\nresource_manager = Google::Cloud::ResourceManager.new\nproject = resource_manager.project \"tokyo-rain-123\"\n\npolicy = project.policy do |p|\n  p.add \"roles/viewer\", \"serviceAccount:your-service-account\"\nend\n</code></pre>\n\n<p>And permissions can be tested on a project. (See\n<a data-custom-type=\"google/cloud/resourcemanager/project\" data-method=\"test_permissions-instance\">Google::Cloud::ResourceManager::Project#test_permissions</a>)</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud/resource_manager\"\n\nresource_manager = Google::Cloud::ResourceManager.new\nproject = resource_manager.project \"tokyo-rain-123\"\nperms = project.test_permissions \"resourcemanager.projects.get\",\n                                 \"resourcemanager.projects.delete\"\nperms.include? \"resourcemanager.projects.get\"    #=&gt; true\nperms.include? \"resourcemanager.projects.delete\" #=&gt; false\n</code></pre>\n\n<p>For more information about using access control policies see <a href=\"https://cloud.google.com/iam/docs/managing-policies\">Managing\nPolicies</a>.</p>","source":"google-cloud-resource_manager/lib/google/cloud/resource_manager.rb#L222","resources":[],"examples":[],"methods":[{"id":"new-class","type":"class","name":"new","title":["Google","Cloud","ResourceManager.new"],"description":"<p>Creates a new <code>Project</code> instance connected to the Resource Manager\nservice. Each call creates a new connection.</p>\n\n<p>For more information on connecting to Google Cloud see the\n<a href=\"https://googlecloudplatform.github.io/google-cloud-ruby/#/docs/guides/authentication\">Authentication\nGuide</a>.</p>","source":"google-cloud-resource_manager/lib/google/cloud/resource_manager.rb#L255","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/resource_manager\"\n\nresource_manager = Google::Cloud::ResourceManager.new\nresource_manager.projects.each do |project|\n  puts projects.project_id\nend"}],"params":[{"name":"keyfile","types":["String","Hash"],"description":"Keyfile downloaded from Google Cloud. If\nfile path the file must be readable.","optional":true,"default":"nil","nullable":true},{"name":"scope","types":["String","Array<String>"],"description":"The OAuth 2.0 scopes controlling\nthe set of resources and operations that the connection can access.\nSee <a href=\"https://developers.google.com/identity/protocols/OAuth2\">Using OAuth 2.0 to Access Google\nAPIs</a>.</p>\n\n<p>The default scope is:</p>\n\n<ul>\n  <li><code>https://www.googleapis.com/auth/cloud-platform</code></li>\n</ul>","optional":true,"default":"nil","nullable":true},{"name":"retries","types":["Integer"],"description":"Number of times to retry requests on server\nerror. The default value is <code>3</code>. Optional.","optional":true,"default":"nil","nullable":true},{"name":"timeout","types":["Integer"],"description":"Default timeout to use in requests. Optional.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/resourcemanager/manager\">Google::Cloud::ResourceManager::Manager</a>"],"description":""}]}]}