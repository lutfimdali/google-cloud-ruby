{"id":"google/cloud/vision","name":"Vision","title":["Google","Cloud","Vision"],"description":"<h1 id=\"google-cloud-vision\">Google Cloud Vision</h1>\n\n<p>Google Cloud Vision allows easy integration of vision detection features\ndeveloper applications, including image labeling, face and landmark\ndetection, optical character recognition (OCR), and tagging of explicit\ncontent.</p>\n\n<p>For more information about Cloud Vision, read the <a href=\"https://cloud.google.com/vision/docs/\">Google Cloud Vision API\nDocumentation</a>.</p>\n\n<p>The goal of google-cloud is to provide an API that is comfortable to\nRubyists. Authentication is handled by <a data-custom-type=\"google/cloud\" data-method=\"vision-instance\">Google::Cloud#vision</a>. You can\nprovide the project and credential information to connect to the Cloud\nVision service, or if you are running on Google Compute Engine this\nconfiguration is taken care of for you. You can read more about the\noptions for connecting in the <a href=\"https://googlecloudplatform.github.io/google-cloud-ruby/#/docs/guides/authentication\">Authentication\nGuide</a>.</p>\n\n<h2 id=\"creating-images\">Creating images</h2>\n\n<p>The Cloud Vision API supports UTF-8, UTF-16, and UTF-32 text encodings.\n(Ruby uses UTF-8 natively, which is the default sent to the API, so unless\nyou’re working with text processed in different platform, you should not\nneed to set the encoding type.)\na ). Be aware that Cloud Vision sets upper\nlimits on file size as well as on the total combined size of all images in\na request. Reducing your file size can significantly improve throughput;\nhowever, be careful not to reduce image quality in the process. See <a href=\"https://cloud.google.com/vision/docs/image-best-practices#image_sizing\">Best\nPractices - Image\nSizing</a>\nfor current file size limits.</p>\n\n<p>Use <a data-custom-type=\"google/cloud/vision/project\" data-method=\"image-instance\">Vision::Project#image</a> to create images for the Cloud Vision service.\nYou can provide a file path:</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\nimage = vision.image \"path/to/landmark.jpg\"\n</code></pre>\n\n<p>Or, you can initialize the image with a Google Cloud Storage URI:</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\nimage = vision.image \"gs://bucket-name/path_to_image_object\"\n</code></pre>\n\n<p>Creating an Image instance does not perform an API request.</p>\n\n<h2 id=\"annotating-images\">Annotating images</h2>\n\n<p>The instance methods on <a data-custom-type=\"google/cloud/vision/image\">Vision::Image</a> invoke Cloud Vision’s detection\nfeatures individually. Each method call makes an API request. (If you want\nto run multiple features in a single request, see the examples for\n<a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Vision::Project#annotate</a>, below.)</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\nimage = vision.image \"path/to/face.jpg\"\n\nface = image.face\n\nface.features.to_h.count #=&gt; 9\nface.features.eyes.left.pupil\n#=&gt; #&lt;Landmark (x: 190.41544, y: 84.4557, z: -1.3682901)&gt;\nface.features.chin.center\n#=&gt; #&lt;Landmark (x: 233.21977, y: 189.47475, z: 19.487228)&gt;\n</code></pre>\n\n<p>To run multiple features on an image in a single request, pass the image\n(or a string file path or Storage URI) to <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Vision::Project#annotate</a>:</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\nimage = vision.image \"path/to/face.jpg\"\n\nannotation = vision.annotate image, faces: true, labels: true\nannotation.faces.count #=&gt; 1\nannotation.labels.count #=&gt; 4\n</code></pre>\n\n<p>You can also perform detection tasks on multiple images in a single\nrequest:</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\nface_image = vision.image \"path/to/face.jpg\"\nlandmark_image = vision.image \"path/to/landmark.jpg\"\n\nannotations = vision.annotate face_image,\n                              landmark_image,\n                              faces: true,\n                              landmarks: true,\n                              labels: true\n\nannotations[0].faces.count #=&gt; 1\nannotations[0].landmarks.count #=&gt; 0\nannotations[0].labels.count #=&gt; 4\nannotations[1].faces.count #=&gt; 1\nannotations[1].landmarks.count #=&gt; 1\nannotations[1].labels.count #=&gt; 6\n</code></pre>\n\n<p>It is even possible to configure different features for multiple images in\na single call using a block. The following example results in a single\nrequest to the Cloud Vision API:</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\nface_image = vision.image \"path/to/face.jpg\"\nlandmark_image = vision.image \"path/to/landmark.jpg\"\ntext_image = vision.image \"path/to/text.png\"\n\nannotations = vision.annotate do |annotate|\n   annotate.annotate face_image, faces: true, labels: true\n   annotate.annotate landmark_image, landmarks: true\n   annotate.annotate text_image, text: true\nend\n\nannotations[0].faces.count #=&gt; 1\nannotations[0].labels.count #=&gt; 4\nannotations[1].landmarks.count #=&gt; 1\nannotations[2].text.words.count #=&gt; 28\n</code></pre>\n\n<p>The maximum number of results returned when performing face, landmark,\nlogo, and label detection are defined by\n<a data-custom-type=\"google/cloud/vision\" data-method=\"default_max_faces-class\">Google::Cloud::Vision.default_max_faces</a>,\n<a data-custom-type=\"google/cloud/vision\" data-method=\"default_max_landmarks-class\">Google::Cloud::Vision.default_max_landmarks</a>,\n<a data-custom-type=\"google/cloud/vision\" data-method=\"default_max_logos-class\">Google::Cloud::Vision.default_max_logos</a>, and\n<a data-custom-type=\"google/cloud/vision\" data-method=\"default_max_labels-class\">Google::Cloud::Vision.default_max_labels</a>, respectively. To change the\nglobal defaults, you can update the configuration:</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\nGoogle::Cloud::Vision.default_max_faces = 1\n\nannotation = vision.annotate \"path/to/face.jpg\", faces: true\nannotation.faces.count #=&gt; 1\n</code></pre>\n\n<p>Or, to override a default for a single method call, simply pass an\ninteger instead of a flag:</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\nimage = vision.image \"path/to/face.jpg\"\n\n# Return just one face.\nannotation = vision.annotate image, faces: 1\n# Return up to 5 faces.\nannotation = vision.annotate image, faces: 5\n</code></pre>\n\n<h2 id=\"configuring-retries-and-timeout\">Configuring retries and timeout</h2>\n\n<p>You can configure how many times API requests may be automatically\nretried. When an API request fails, the response will be inspected to see\nif the request meets criteria indicating that it may succeed on retry,\nsuch as <code>500</code> and <code>503</code> status codes or a specific internal error code\nsuch as <code>rateLimitExceeded</code>. If it meets the criteria, the request will be\nretried after a delay. If another error occurs, the delay will be\nincreased before a subsequent attempt, until the <code>retries</code> limit is\nreached.</p>\n\n<p>You can also set the request <code>timeout</code> value in seconds.</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision retries: 10, timeout: 120\n</code></pre>","source":"lib/google/cloud/vision.rb#L228","resources":[],"examples":[],"methods":[{"id":"default_max_faces-class","type":"class","name":"default_max_faces","title":["Google","Cloud","Vision.default_max_faces"],"description":"<p>The default max results to return for facial detection requests. This\nis used on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a> as well as <a data-custom-type=\"google/cloud/vision/image\" data-method=\"faces-instance\">Image#faces</a>.</p>\n\n<p>The default value is <code>100</code>.</p>","source":"lib/google/cloud/vision.rb#L287","resources":[],"examples":[{"caption":"<p>Using the default setting on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a>:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\nGoogle::Cloud::Vision.default_max_faces #=> 100\n\nannotation = vision.annotate \"path/to/faces.jpg\", faces: true\n# This is the same as calling\n# annotation = vision.annotate \"path/to/faces.jpg\", faces: 100"},{"caption":"<p>Updating the default setting on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a>:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\n# Set a new default\nGoogle::Cloud::Vision.default_max_faces = 5\n\nannotation = vision.annotate \"path/to/faces.jpg\", faces: true\n# This is the same as calling\n# annotation = vision.annotate \"path/to/faces.jpg\", faces: 5"},{"caption":"<p>Using the default setting on <a data-custom-type=\"google/cloud/vision/image\" data-method=\"faces-instance\">Image#faces</a>:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\nGoogle::Cloud::Vision.default_max_faces #=> 100\n\nfaces = vision.image(\"path/to/faces.jpg\").faces\n# This is the same as calling\n# faces = vision.image(\"path/to/faces.jpg\").faces 100"},{"caption":"<p>Updating the default setting on <a data-custom-type=\"google/cloud/vision/image\" data-method=\"faces-instance\">Image#faces</a>:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\n# Set a new default\nGoogle::Cloud::Vision.default_max_faces = 5\n\nfaces = vision.image(\"path/to/faces.jpg\").faces\n# This is the same as calling\n# faces = vision.image(\"path/to/faces.jpg\").faces 5"}],"params":[],"exceptions":[],"returns":[]},{"id":"default_max_faces=-class","type":"class","name":"default_max_faces=","title":["Google","Cloud","Vision.default_max_faces="],"description":"<p>The default max results to return for facial detection requests. This\nis used on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a> as well as <a data-custom-type=\"google/cloud/vision/image\" data-method=\"faces-instance\">Image#faces</a>.</p>\n\n<p>The default value is <code>100</code>.</p>","source":"lib/google/cloud/vision.rb#L287","resources":[],"examples":[{"caption":"<p>Using the default setting on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a>:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\nGoogle::Cloud::Vision.default_max_faces #=> 100\n\nannotation = vision.annotate \"path/to/faces.jpg\", faces: true\n# This is the same as calling\n# annotation = vision.annotate \"path/to/faces.jpg\", faces: 100"},{"caption":"<p>Updating the default setting on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a>:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\n# Set a new default\nGoogle::Cloud::Vision.default_max_faces = 5\n\nannotation = vision.annotate \"path/to/faces.jpg\", faces: true\n# This is the same as calling\n# annotation = vision.annotate \"path/to/faces.jpg\", faces: 5"},{"caption":"<p>Using the default setting on <a data-custom-type=\"google/cloud/vision/image\" data-method=\"faces-instance\">Image#faces</a>:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\nGoogle::Cloud::Vision.default_max_faces #=> 100\n\nfaces = vision.image(\"path/to/faces.jpg\").faces\n# This is the same as calling\n# faces = vision.image(\"path/to/faces.jpg\").faces 100"},{"caption":"<p>Updating the default setting on <a data-custom-type=\"google/cloud/vision/image\" data-method=\"faces-instance\">Image#faces</a>:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\n# Set a new default\nGoogle::Cloud::Vision.default_max_faces = 5\n\nfaces = vision.image(\"path/to/faces.jpg\").faces\n# This is the same as calling\n# faces = vision.image(\"path/to/faces.jpg\").faces 5"}],"params":[],"exceptions":[],"returns":[]},{"id":"default_max_landmarks-class","type":"class","name":"default_max_landmarks","title":["Google","Cloud","Vision.default_max_landmarks"],"description":"<p>The default max results to return for landmark detection requests.\nThis is used on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a> as well as <a data-custom-type=\"google/cloud/vision/image\" data-method=\"landmarks-instance\">Image#landmarks</a>.</p>\n\n<p>The default value is 100.</p>","source":"lib/google/cloud/vision.rb#L348","resources":[],"examples":[{"caption":"<p>Using the default setting on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a>:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\nGoogle::Cloud::Vision.default_max_landmarks #=> 100\n\nimg = \"path/to/landmarks.jpg\"\nannotation = vision.annotate img, landmarks: true\n# This is the same as calling\n# annotation = vision.annotate img, landmarks: 100"},{"caption":"<p>Updating the default setting on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a>:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\n# Set a new default\nGoogle::Cloud::Vision.default_max_landmarks = 5\n\nimg = \"path/to/landmarks.jpg\"\nannotation = vision.annotate img, landmarks: true\n# This is the same as calling\n# annotation = vision.annotate img, landmarks: 5"},{"caption":"<p>Using the default setting on <a data-custom-type=\"google/cloud/vision/image\" data-method=\"landmarks-instance\">Image#landmarks</a>:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\nGoogle::Cloud::Vision.default_max_landmarks #=> 100\n\nlandmarks = vision.image(\"path/to/landmarks.jpg\").landmarks\n# This is the same as calling\n# landmarks = vision.image(\"path/to/landmarks.jpg\").landmarks 100"},{"caption":"<p>Updating the default setting on <a data-custom-type=\"google/cloud/vision/image\" data-method=\"landmarks-instance\">Image#landmarks</a>:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\n# Set a new default\nGoogle::Cloud::Vision.default_max_landmarks = 5\n\nlandmarks = vision.image(\"path/to/landmarks.jpg\").landmarks\n# This is the same as calling\n# landmarks = vision.image(\"path/to/landmarks.jpg\").landmarks 5"}],"params":[],"exceptions":[],"returns":[]},{"id":"default_max_landmarks=-class","type":"class","name":"default_max_landmarks=","title":["Google","Cloud","Vision.default_max_landmarks="],"description":"<p>The default max results to return for landmark detection requests.\nThis is used on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a> as well as <a data-custom-type=\"google/cloud/vision/image\" data-method=\"landmarks-instance\">Image#landmarks</a>.</p>\n\n<p>The default value is 100.</p>","source":"lib/google/cloud/vision.rb#L348","resources":[],"examples":[{"caption":"<p>Using the default setting on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a>:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\nGoogle::Cloud::Vision.default_max_landmarks #=> 100\n\nimg = \"path/to/landmarks.jpg\"\nannotation = vision.annotate img, landmarks: true\n# This is the same as calling\n# annotation = vision.annotate img, landmarks: 100"},{"caption":"<p>Updating the default setting on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a>:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\n# Set a new default\nGoogle::Cloud::Vision.default_max_landmarks = 5\n\nimg = \"path/to/landmarks.jpg\"\nannotation = vision.annotate img, landmarks: true\n# This is the same as calling\n# annotation = vision.annotate img, landmarks: 5"},{"caption":"<p>Using the default setting on <a data-custom-type=\"google/cloud/vision/image\" data-method=\"landmarks-instance\">Image#landmarks</a>:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\nGoogle::Cloud::Vision.default_max_landmarks #=> 100\n\nlandmarks = vision.image(\"path/to/landmarks.jpg\").landmarks\n# This is the same as calling\n# landmarks = vision.image(\"path/to/landmarks.jpg\").landmarks 100"},{"caption":"<p>Updating the default setting on <a data-custom-type=\"google/cloud/vision/image\" data-method=\"landmarks-instance\">Image#landmarks</a>:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\n# Set a new default\nGoogle::Cloud::Vision.default_max_landmarks = 5\n\nlandmarks = vision.image(\"path/to/landmarks.jpg\").landmarks\n# This is the same as calling\n# landmarks = vision.image(\"path/to/landmarks.jpg\").landmarks 5"}],"params":[],"exceptions":[],"returns":[]},{"id":"default_max_logos-class","type":"class","name":"default_max_logos","title":["Google","Cloud","Vision.default_max_logos"],"description":"<p>The default max results to return for logo detection requests. This is\nused on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a> as well as <a data-custom-type=\"google/cloud/vision/image\" data-method=\"logos-instance\">Image#logos</a>.</p>\n\n<p>The default value is 100.</p>","source":"lib/google/cloud/vision.rb#L407","resources":[],"examples":[{"caption":"<p>Using the default setting on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a>:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\nGoogle::Cloud::Vision.default_max_logos #=> 100\n\nannotation = vision.annotate \"path/to/logos.jpg\", logos: true\n# This is the same as calling\n# annotation = vision.annotate \"path/to/logos.jpg\", logos: 100"},{"caption":"<p>Updating the default setting on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a>:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\n# Set a new default\nGoogle::Cloud::Vision.default_max_logos = 5\n\nannotation = vision.annotate \"path/to/logos.jpg\", logos: true\n# This is the same as calling\n# annotation = vision.annotate \"path/to/logos.jpg\", logos: 5"},{"caption":"<p>Using the default setting on <a data-custom-type=\"google/cloud/vision/image\" data-method=\"logos-instance\">Image#logos</a>:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\nGoogle::Cloud::Vision.default_max_logos #=> 100\n\nlogos = vision.image(\"path/to/logos.jpg\").logos\n# This is the same as calling\n# logos = vision.image(\"path/to/logos.jpg\").logos 100"},{"caption":"<p>Updating the default setting on <a data-custom-type=\"google/cloud/vision/image\" data-method=\"logos-instance\">Image#logos</a>:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\n# Set a new default\nGoogle::Cloud::Vision.default_max_logos = 5\n\nlogos = vision.image(\"path/to/logos.jpg\").logos\n# This is the same as calling\n# logos = vision.image(\"path/to/logos.jpg\").logos 5"}],"params":[],"exceptions":[],"returns":[]},{"id":"default_max_logos=-class","type":"class","name":"default_max_logos=","title":["Google","Cloud","Vision.default_max_logos="],"description":"<p>The default max results to return for logo detection requests. This is\nused on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a> as well as <a data-custom-type=\"google/cloud/vision/image\" data-method=\"logos-instance\">Image#logos</a>.</p>\n\n<p>The default value is 100.</p>","source":"lib/google/cloud/vision.rb#L407","resources":[],"examples":[{"caption":"<p>Using the default setting on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a>:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\nGoogle::Cloud::Vision.default_max_logos #=> 100\n\nannotation = vision.annotate \"path/to/logos.jpg\", logos: true\n# This is the same as calling\n# annotation = vision.annotate \"path/to/logos.jpg\", logos: 100"},{"caption":"<p>Updating the default setting on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a>:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\n# Set a new default\nGoogle::Cloud::Vision.default_max_logos = 5\n\nannotation = vision.annotate \"path/to/logos.jpg\", logos: true\n# This is the same as calling\n# annotation = vision.annotate \"path/to/logos.jpg\", logos: 5"},{"caption":"<p>Using the default setting on <a data-custom-type=\"google/cloud/vision/image\" data-method=\"logos-instance\">Image#logos</a>:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\nGoogle::Cloud::Vision.default_max_logos #=> 100\n\nlogos = vision.image(\"path/to/logos.jpg\").logos\n# This is the same as calling\n# logos = vision.image(\"path/to/logos.jpg\").logos 100"},{"caption":"<p>Updating the default setting on <a data-custom-type=\"google/cloud/vision/image\" data-method=\"logos-instance\">Image#logos</a>:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\n# Set a new default\nGoogle::Cloud::Vision.default_max_logos = 5\n\nlogos = vision.image(\"path/to/logos.jpg\").logos\n# This is the same as calling\n# logos = vision.image(\"path/to/logos.jpg\").logos 5"}],"params":[],"exceptions":[],"returns":[]},{"id":"default_max_labels-class","type":"class","name":"default_max_labels","title":["Google","Cloud","Vision.default_max_labels"],"description":"<p>The default max results to return for label detection requests. This\nis used on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a> as well as <a data-custom-type=\"google/cloud/vision/image\" data-method=\"labels-instance\">Image#labels</a>.</p>\n\n<p>The default value is 100.</p>","source":"lib/google/cloud/vision.rb#L466","resources":[],"examples":[{"caption":"<p>Using the default setting on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a>:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\nGoogle::Cloud::Vision.default_max_labels #=> 100\n\nannotation = vision.annotate \"path/to/labels.jpg\", labels: true\n# This is the same as calling\n# annotation = vision.annotate \"path/to/labels.jpg\", labels: 100"},{"caption":"<p>Updating the default setting on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a>:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\n# Set a new default\nGoogle::Cloud::Vision.default_max_labels = 5\n\nannotation = vision.annotate \"path/to/labels.jpg\", labels: true\n# This is the same as calling\n# annotation = vision.annotate \"path/to/labels.jpg\", labels: 5"},{"caption":"<p>Using the default setting on <a data-custom-type=\"google/cloud/vision/image\" data-method=\"labels-instance\">Image#labels</a>:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\nGoogle::Cloud::Vision.default_max_labels #=> 100\n\nlabels = vision.image(\"path/to/labels.jpg\").labels\n# This is the same as calling\n# labels = vision.image(\"path/to/labels.jpg\").labels 100"},{"caption":"<p>Updating the default setting on <a data-custom-type=\"google/cloud/vision/image\" data-method=\"labels-instance\">Image#labels</a>:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\n# Set a new default\nGoogle::Cloud::Vision.default_max_labels = 5\n\nlabels = vision.image(\"path/to/labels.jpg\").labels\n# This is the same as calling\n# labels = vision.image(\"path/to/labels.jpg\").labels 5"}],"params":[],"exceptions":[],"returns":[]},{"id":"default_max_labels=-class","type":"class","name":"default_max_labels=","title":["Google","Cloud","Vision.default_max_labels="],"description":"<p>The default max results to return for label detection requests. This\nis used on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a> as well as <a data-custom-type=\"google/cloud/vision/image\" data-method=\"labels-instance\">Image#labels</a>.</p>\n\n<p>The default value is 100.</p>","source":"lib/google/cloud/vision.rb#L466","resources":[],"examples":[{"caption":"<p>Using the default setting on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a>:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\nGoogle::Cloud::Vision.default_max_labels #=> 100\n\nannotation = vision.annotate \"path/to/labels.jpg\", labels: true\n# This is the same as calling\n# annotation = vision.annotate \"path/to/labels.jpg\", labels: 100"},{"caption":"<p>Updating the default setting on <a data-custom-type=\"google/cloud/vision/project\" data-method=\"annotate-instance\">Project#annotate</a>:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\n# Set a new default\nGoogle::Cloud::Vision.default_max_labels = 5\n\nannotation = vision.annotate \"path/to/labels.jpg\", labels: true\n# This is the same as calling\n# annotation = vision.annotate \"path/to/labels.jpg\", labels: 5"},{"caption":"<p>Using the default setting on <a data-custom-type=\"google/cloud/vision/image\" data-method=\"labels-instance\">Image#labels</a>:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\nGoogle::Cloud::Vision.default_max_labels #=> 100\n\nlabels = vision.image(\"path/to/labels.jpg\").labels\n# This is the same as calling\n# labels = vision.image(\"path/to/labels.jpg\").labels 100"},{"caption":"<p>Updating the default setting on <a data-custom-type=\"google/cloud/vision/image\" data-method=\"labels-instance\">Image#labels</a>:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nvision = gcloud.vision\n\n# Set a new default\nGoogle::Cloud::Vision.default_max_labels = 5\n\nlabels = vision.image(\"path/to/labels.jpg\").labels\n# This is the same as calling\n# labels = vision.image(\"path/to/labels.jpg\").labels 5"}],"params":[],"exceptions":[],"returns":[]}]}