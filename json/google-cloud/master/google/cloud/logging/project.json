{"id":"google/cloud/logging/project","name":"Project","title":["Google","Cloud","Logging","Project"],"description":"<h1 id=\"project\">Project</h1>\n\n<p>Projects are top-level containers in Google Cloud Platform. They store\ninformation about billing and authorized users, and they control access\nto Stackdriver Logging resources. Each project has a friendly name and a\nunique ID. Projects can be created only in the <a href=\"https://console.developers.google.com\">Google Developers\nConsole</a>. See\n<a data-custom-type=\"google/cloud\" data-method=\"logging-instance\">Google::Cloud#logging</a>.</p>\n\n<p>See Google::Cloud#logging</p>","source":"google-cloud-logging/lib/google/cloud/logging/project.rb#L48","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/logging\"\n\nlogging = Google::Cloud::Logging.new\nentries = logging.entries"}],"methods":[{"id":"project-instance","type":"instance","name":"project","title":["Google","Cloud","Logging","Project#project"],"description":"<p>The ID of the current project.</p>","source":"google-cloud-logging/lib/google/cloud/logging/project.rb#L74","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/logging\"\n\nlogging = Google::Cloud::Logging.new(\n  project: \"my-project\",\n  keyfile: \"/path/to/keyfile.json\"\n)\n\nlogging.project #=> \"my-project\""}],"params":[],"exceptions":[],"returns":[{"types":["String"],"description":"the Google Cloud project ID"}]},{"id":"entries-instance","type":"instance","name":"entries","title":["Google","Cloud","Logging","Project#entries"],"description":"<p>Lists log entries. Use this method to retrieve log entries from Cloud\nLogging.</p>","source":"google-cloud-logging/lib/google/cloud/logging/project.rb#L154","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/logging\"\n\nlogging = Google::Cloud::Logging.new\nentries = logging.entries\nentries.each do |e|\n  puts \"[#{e.timestamp}] #{e.log_name} #{e.payload.inspect}\"\nend"},{"caption":"<p>You can use a filter to narrow results to a single log.</p>","code":"require \"google/cloud/logging\"\n\nlogging = Google::Cloud::Logging.new\nentries = logging.entries filter: \"log:syslog\"\nentries.each do |e|\n  puts \"[#{e.timestamp}] #{e.payload.inspect}\"\nend"},{"caption":"<p>You can also order the results by timestamp.</p>","code":"require \"google/cloud/logging\"\n\nlogging = Google::Cloud::Logging.new\nentries = logging.entries order: \"timestamp desc\"\nentries.each do |e|\n  puts \"[#{e.timestamp}] #{e.log_name} #{e.payload.inspect}\"\nend"},{"caption":"<p>Retrieve all log entries: (See <a data-custom-type=\"google/cloud/logging/entry/list\" data-method=\"all-instance\">Entry::List#all</a>)</p>","code":"require \"google/cloud/logging\"\n\nlogging = Google::Cloud::Logging.new\nentries = logging.entries\n\nentries.all do |e|\n  puts \"[#{e.timestamp}] #{e.log_name} #{e.payload.inspect}\"\nend"}],"params":[{"name":"resources","types":["String","Array<String>"],"description":"One or more cloud resources\nfrom which to retrieve log entries. If both <code>resources</code> and\n<code>projects</code> are <code>nil</code>, the ID of the receiving project instance will\nbe used. Examples: <code>\"projects/my-project-1A\"</code>,\n<code>\"projects/1234567890\"</code>.","optional":true,"default":"nil","nullable":true},{"name":"filter","types":["String"],"description":"An <a href=\"https://cloud.google.com/logging/docs/view/advanced_filters\">advanced logs\nfilter</a>.\nThe filter is compared against all log entries in the projects\nspecified by <code>projects</code>. Only entries that match the filter are\nretrieved. An empty filter matches all log entries.","optional":true,"default":"nil","nullable":true},{"name":"order","types":["String"],"description":"How the results should be sorted. Presently, the\nonly permitted values are “timestamp” (default) and “timestamp\ndesc”.","optional":true,"default":"nil","nullable":true},{"name":"token","types":["String"],"description":"A previously-returned page token representing\npart of the larger set of results to view.","optional":true,"default":"nil","nullable":true},{"name":"max","types":["Integer"],"description":"Maximum number of entries to return.","optional":true,"default":"nil","nullable":true},{"name":"projects","types":["String","Array<String>"],"description":"One or more project IDs or\nproject numbers from which to retrieve log entries. Each value will\nbe formatted as a project resource name and added to any values\npassed to <code>resources</code>. If both <code>resources</code> and <code>projects</code> are <code>nil</code>,\nthe ID of the receiving project instance will be used. This is\ndeprecated in favor of <code>resources</code>.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["Array&lt;<a data-custom-type=\"google/cloud/logging/entry\">Google::Cloud::Logging::Entry</a>&gt;"],"description":"(See\n<a data-custom-type=\"google/cloud/logging/entry/list\">Google::Cloud::Logging::Entry::List</a>)"}]},{"id":"entry-instance","type":"instance","name":"entry","title":["Google","Cloud","Logging","Project#entry"],"description":"<p>Creates an new Entry instance that may be populated and written to the\nStackdriver Logging service. The <a data-custom-type=\"google/cloud/logging/entry\" data-method=\"resource-instance\">Entry#resource</a> attribute is\npre-populated with a new <a data-custom-type=\"google/cloud/logging/resource\">Google::Cloud::Logging::Resource</a> instance.\nEquivalent to calling <code>Google::Cloud::Logging::Entry.new</code>.</p>","source":"google-cloud-logging/lib/google/cloud/logging/project.rb#L205","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/logging\"\n\nlogging = Google::Cloud::Logging.new\n\nentry = logging.entry severity: :INFO, payload: \"Job started.\"\n\nlogging.write_entries entry"}],"params":[{"name":"log_name","types":["String"],"description":"The resource name of the log to which this\nlog entry belongs. See also <a data-custom-type=\"google/cloud/logging/entry\" data-method=\"log_name=-instance\">Entry#log_name=</a>.","optional":true,"default":"nil","nullable":true},{"name":"resource","types":["Resource"],"description":"The monitored resource associated with this\nlog entry. See also <a data-custom-type=\"google/cloud/logging/entry\" data-method=\"resource-instance\">Entry#resource</a>.","optional":true,"default":"nil","nullable":true},{"name":"timestamp","types":["Time"],"description":"The time the event described by the log entry\noccurred. If omitted, Stackdriver Logging will use the time the log\nentry is written. See also <a data-custom-type=\"google/cloud/logging/entry\" data-method=\"timestamp-instance\">Entry#timestamp</a>.","optional":true,"default":"nil","nullable":true},{"name":"severity","types":["Symbol"],"description":"The severity level of the log entry. The\ndefault value is <code>DEFAULT</code>. See also <a data-custom-type=\"google/cloud/logging/entry\" data-method=\"severity-instance\">Entry#severity</a>.","optional":true,"default":"nil","nullable":true},{"name":"insert_id","types":["String"],"description":"A unique ID for the log entry. If you\nprovide this field, the logging service considers other log entries\nin the same log with the same ID as duplicates which can be removed.\nIf omitted, Stackdriver Logging will generate a unique ID for this\nlog entry. See also <a data-custom-type=\"google/cloud/logging/entry\" data-method=\"insert_id-instance\">Entry#insert_id</a>.","optional":true,"default":"nil","nullable":true},{"name":"labels","types":["Hash{Symbol,String => String}"],"description":"A hash of user-defined\n<code>key:value</code> pairs that provide additional information about the log\nentry. See also <a data-custom-type=\"google/cloud/logging/entry\" data-method=\"labels=-instance\">Entry#labels=</a>.","optional":true,"default":"nil","nullable":true},{"name":"payload","types":["String","Hash"],"description":"The log entry payload, represented as\neither a string, a hash (JSON), or a hash (protocol buffer). See\nalso <a data-custom-type=\"google/cloud/logging/entry\" data-method=\"payload-instance\">Entry#payload</a>.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/logging/entry\">Google::Cloud::Logging::Entry</a>"],"description":"a new Entry instance"}]},{"id":"write_entries-instance","type":"instance","name":"write_entries","title":["Google","Cloud","Logging","Project#write_entries"],"description":"<p>Writes log entries to the Stackdriver Logging service.</p>\n\n<p>If you write a collection of log entries, you can provide the log\nname, resource, and/or labels hash to be used for all of the entries,\nand omit these values from the individual entries.</p>","source":"google-cloud-logging/lib/google/cloud/logging/project.rb#L274","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/logging\"\n\nlogging = Google::Cloud::Logging.new\n\nentry = logging.entry payload: \"Job started.\",\n                      log_name: \"my_app_log\"\nentry.resource.type = \"gae_app\"\nentry.resource.labels[:module_id] = \"1\"\nentry.resource.labels[:version_id] = \"20150925t173233\"\n\nlogging.write_entries entry"},{"caption":"<p>Optionally pass log name, resource, and labels for entries.</p>","code":"require \"google/cloud/logging\"\n\nlogging = Google::Cloud::Logging.new\n\nentry1 = logging.entry payload: \"Job started.\"\nentry2 = logging.entry payload: \"Job completed.\"\n\nlabels = { job_size: \"large\", job_code: \"red\" }\nresource = logging.resource \"gae_app\",\n                            \"module_id\" => \"1\",\n                            \"version_id\" => \"20150925t173233\"\n\nlogging.write_entries [entry1, entry2],\n                      log_name: \"my_app_log\",\n                      resource: resource,\n                      labels: labels"}],"params":[{"name":"entries","types":["Google::Cloud::Logging::Entry","Array<Google::Cloud::Logging::Entry>"],"description":"One or more entry\nobjects to write. The log entries must have values for all required\nfields.","optional":false,"nullable":false},{"name":"log_name","types":["String"],"description":"A default log ID for those log entries in\n<code>entries</code> that do not specify their own <code>log_name</code>. See also\n<a data-custom-type=\"google/cloud/logging/entry\" data-method=\"log_name=-instance\">Entry#log_name=</a>.","optional":true,"default":"nil","nullable":true},{"name":"resource","types":["Resource"],"description":"A default monitored resource for those log\nentries in entries that do not specify their own resource. See also\n<a data-custom-type=\"google/cloud/logging/entry\" data-method=\"resource-instance\">Entry#resource</a>.","optional":true,"default":"nil","nullable":true},{"name":"labels","types":["Hash{Symbol,String => String}"],"description":"User-defined <code>key:value</code>\nitems that are added to the <code>labels</code> field of each log entry in\n<code>entries</code>, except when a log entry specifies its own <code>key:value</code>\nitem with the same key. See also <a data-custom-type=\"google/cloud/logging/entry\" data-method=\"labels=-instance\">Entry#labels=</a>.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["Boolean"],"description":"Returns <code>true</code> if the entries were written."}]},{"id":"async_writer-instance","type":"instance","name":"async_writer","title":["Google","Cloud","Logging","Project#async_writer"],"description":"<p>Creates an object that batches and transmits log entries\nasynchronously.</p>\n\n<p>Use this object to transmit log entries efficiently. It keeps a queue\nof log entries, and runs a background thread that transmits them to\nthe logging service in batches. Generally, adding to the queue will\nnot block.</p>\n\n<p>This object is thread-safe; it may accept write requests from\nmultiple threads simultaneously, and will serialize them when\nexecuting in the background thread.</p>","source":"google-cloud-logging/lib/google/cloud/logging/project.rb#L320","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/logging\"\n\nlogging = Google::Cloud::Logging.new\n\nasync = logging.async_writer\n\nentry1 = logging.entry payload: \"Job started.\"\nentry2 = logging.entry payload: \"Job completed.\"\n\nlabels = { job_size: \"large\", job_code: \"red\" }\nresource = logging.resource \"gae_app\",\n                            \"module_id\" => \"1\",\n                            \"version_id\" => \"20150925t173233\"\n\nasync.write_entries [entry1, entry2],\n                    log_name: \"my_app_log\",\n                    resource: resource,\n                    labels: labels"}],"params":[{"name":"max_queue_size","types":["Integer"],"description":"The maximum number of log entries\nthat may be queued before write requests will begin to block.\nThis provides back pressure in case the transmitting thread cannot\nkeep up with requests.","optional":true,"default":"AsyncWriter::DEFAULT_MAX_QUEUE_SIZE","nullable":false}],"exceptions":[],"returns":[]},{"id":"shared_async_writer-instance","type":"instance","name":"shared_async_writer","title":["Google","Cloud","Logging","Project#shared_async_writer"],"description":"<p>Returns a shared AsyncWriter for this Project. If this method is\ncalled multiple times, it will return the same object.</p>","source":"google-cloud-logging/lib/google/cloud/logging/project.rb#L348","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/logging\"\n\nlogging = Google::Cloud::Logging.new\n\nasync = logging.shared_async_writer\n\nentry1 = logging.entry payload: \"Job started.\"\nentry2 = logging.entry payload: \"Job completed.\"\n\nlabels = { job_size: \"large\", job_code: \"red\" }\nresource = logging.resource \"gae_app\",\n                            \"module_id\" => \"1\",\n                            \"version_id\" => \"20150925t173233\"\n\nasync.write_entries [entry1, entry2],\n                    log_name: \"my_app_log\",\n                    resource: resource,\n                    labels: labels"}],"params":[],"exceptions":[],"returns":[]},{"id":"logger-instance","type":"instance","name":"logger","title":["Google","Cloud","Logging","Project#logger"],"description":"<p>Creates a logger instance that is API-compatible with Ruby’s standard\nlibrary <a href=\"http://ruby-doc.org/stdlib/libdoc/logger/rdoc\">Logger</a>.</p>\n\n<p>The logger will create a new AsyncWriter object to transmit log\nentries on a background thread.</p>","source":"google-cloud-logging/lib/google/cloud/logging/project.rb#L381","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/logging\"\n\nlogging = Google::Cloud::Logging.new\n\nresource = logging.resource \"gae_app\",\n                            module_id: \"1\",\n                            version_id: \"20150925t173233\"\n\nlogger = logging.logger \"my_app_log\", resource, env: :production\nlogger.info \"Job started.\""}],"params":[{"name":"log_name","types":["String"],"description":"A log resource name to be associated with the\nwritten log entries.","optional":false,"nullable":false},{"name":"resource","types":["Google::Cloud::Logging::Resource"],"description":"The monitored\nresource to be associated with written log entries.","optional":false,"nullable":false},{"name":"labels","types":["Hash"],"description":"A set of user-defined data to be associated with\nwritten log entries.","optional":true,"default":"{}","nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/logging/logger\">Google::Cloud::Logging::Logger</a>"],"description":"a Logger object that can be\nused in place of a ruby standard library logger object."}]},{"id":"delete_log-instance","type":"instance","name":"delete_log","title":["Google","Cloud","Logging","Project#delete_log"],"description":"<p>Deletes a log and all its log entries. The log will reappear if it\nreceives new entries.</p>","source":"google-cloud-logging/lib/google/cloud/logging/project.rb#L404","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/logging\"\n\nlogging = Google::Cloud::Logging.new\nlogging.delete_log \"my_app_log\""}],"params":[{"name":"name","types":["String"],"description":"The name of the log, which may be the full path\nincluding the project ID (<code>projects/&lt;project-id&gt;/logs/&lt;log-id&gt;</code>), or\njust the short name (<code>&lt;log-id&gt;</code>), in which case the beginning of the\npath will be automatically prepended, using the ID of the current\nproject.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["Boolean"],"description":"Returns <code>true</code> if the log and all its log entries\nwere deleted."}]},{"id":"resource_descriptors-instance","type":"instance","name":"resource_descriptors","title":["Google","Cloud","Logging","Project#resource_descriptors"],"description":"<p>Retrieves the list of monitored resource descriptors that are used by\nStackdriver Logging.</p>","source":"google-cloud-logging/lib/google/cloud/logging/project.rb#L444","resources":[{"title":"Monitored Resources","link":"https://cloud.google.com/logging/docs/api/introduction_v2#monitored_resources"}],"examples":[{"caption":"","code":"require \"google/cloud/logging\"\n\nlogging = Google::Cloud::Logging.new\nresource_descriptors = logging.resource_descriptors\nresource_descriptors.each do |rd|\n  label_keys = rd.labels.map(&:key).join(\", \")\n  puts \"#{rd.type} (#{label_keys})\"\nend"},{"caption":"<p>Pagination:</p>","code":"require \"google/cloud/logging\"\n\nlogging = Google::Cloud::Logging.new\nresource_descriptors = logging.resource_descriptors\n\nresource_descriptors.all do |rd|\n  puts rd.type\nend"}],"params":[{"name":"token","types":["String"],"description":"A previously-returned page token representing\npart of the larger set of results to view.","optional":true,"default":"nil","nullable":true},{"name":"max","types":["Integer"],"description":"Maximum number of resource descriptors to return.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["Array&lt;<a data-custom-type=\"google/cloud/logging/resourcedescriptor\">Google::Cloud::Logging::ResourceDescriptor</a>&gt;"],"description":"(See\n<a data-custom-type=\"google/cloud/logging/resourcedescriptor/list\">Google::Cloud::Logging::ResourceDescriptor::List</a>)"}]},{"id":"resource-instance","type":"instance","name":"resource","title":["Google","Cloud","Logging","Project#resource"],"description":"<p>Creates a new monitored resource instance.</p>","source":"google-cloud-logging/lib/google/cloud/logging/project.rb#L470","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/logging\"\n\nlogging = Google::Cloud::Logging.new\n\nresource = logging.resource \"gae_app\",\n                            \"module_id\" => \"1\",\n                            \"version_id\" => \"20150925t173233\""}],"params":[{"name":"type","types":["String"],"description":"The type of resource, as represented by a\n<a data-custom-type=\"google/cloud/logging/resourcedescriptor\">ResourceDescriptor</a>.","optional":false,"nullable":false},{"name":"labels","types":["Hash"],"description":"A set of labels that can be used to describe\ninstances of this monitored resource type.","optional":true,"default":"{}","nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/logging/resource\">Google::Cloud::Logging::Resource</a>"],"description":""}]},{"id":"sinks-instance","type":"instance","name":"sinks","title":["Google","Cloud","Logging","Project#sinks"],"description":"<p>Retrieves the list of sinks belonging to the project.</p>","source":"google-cloud-logging/lib/google/cloud/logging/project.rb#L507","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/logging\"\n\nlogging = Google::Cloud::Logging.new\nsinks = logging.sinks\nsinks.each do |s|\n  puts \"#{s.name}: #{s.filter} -> #{s.destination}\"\nend"},{"caption":"<p>Retrieve all sinks: (See <a data-custom-type=\"google/cloud/logging/sink/list\" data-method=\"all-instance\">Sink::List#all</a>)</p>","code":"require \"google/cloud/logging\"\n\nlogging = Google::Cloud::Logging.new\nsinks = logging.sinks\n\nsinks.all do |s|\n  puts \"#{s.name}: #{s.filter} -> #{s.destination}\"\nend"}],"params":[{"name":"token","types":["String"],"description":"A previously-returned page token representing\npart of the larger set of results to view.","optional":true,"default":"nil","nullable":true},{"name":"max","types":["Integer"],"description":"Maximum number of sinks to return.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["Array&lt;<a data-custom-type=\"google/cloud/logging/sink\">Google::Cloud::Logging::Sink</a>&gt;"],"description":"(See\n<a data-custom-type=\"google/cloud/logging/sink/list\">Google::Cloud::Logging::Sink::List</a>)"}]},{"id":"create_sink-instance","type":"instance","name":"create_sink","title":["Google","Cloud","Logging","Project#create_sink"],"description":"<p>Creates a new project sink. When you create a sink, only new log\nentries that match the sink’s filter are exported. Stackdriver Logging\ndoes not send previously-ingested log entries to the sink’s\ndestination.</p>\n\n<p>Before creating the sink, ensure that you have granted\n<code>cloud-logs@google.com</code> permission to write logs to the destination.\nSee <a href=\"https://cloud.google.com/logging/docs/export/configure_export#setting_product_name_short_permissions_for_writing_exported_logs\">Permissions for writing exported\nlogs</a>.</p>","source":"google-cloud-logging/lib/google/cloud/logging/project.rb#L588","resources":[{"title":"Exporting Logs With Sinks","link":"https://cloud.google.com/logging/docs/api/tasks/exporting-logs"},{"title":"Kinds of log sinks (API V2)","link":"https://cloud.google.com/logging/docs/api/introduction_v2#kinds_of_log_sinks"},{"title":"Sinks (API V1)","link":"https://cloud.google.com/logging/docs/api/#sinks"},{"title":"Permissions for writing exported logs","link":"https://cloud.google.com/logging/docs/export/configure_export#setting_product_name_short_permissions_for_writing_exported_logs"}],"examples":[{"caption":"","code":"require \"google/cloud/storage\"\n\nstorage = Google::Cloud::Storage.new\n\nbucket = storage.create_bucket \"my-logs-bucket\"\n\n# Grant owner permission to Stackdriver Logging service\nemail = \"cloud-logs@google.com\"\nbucket.acl.add_owner \"group-#{email}\"\n\nrequire \"google/cloud/logging\"\n\nlogging = Google::Cloud::Logging.new\n\nsink = logging.create_sink \"my-sink\",\n                           \"storage.googleapis.com/#{bucket.id}\""}],"params":[{"name":"name","types":["String"],"description":"The client-assigned sink identifier. Sink\nidentifiers are limited to 1000 characters and can include only the\nfollowing characters: <code>A-Z</code>, <code>a-z</code>, <code>0-9</code>, and the special\ncharacters <code>_-.</code>.","optional":false,"nullable":false},{"name":"destination","types":["String"],"description":"The resource name of the export\ndestination. See <a href=\"https://cloud.google.com/logging/docs/api/tasks/exporting-logs#about_sinks\">About\nsinks</a>\nfor examples.","optional":false,"nullable":false},{"name":"filter","types":["String","nil"],"description":"An <a href=\"https://cloud.google.com/logging/docs/view/advanced_filters\">advanced logs\nfilter</a>\nthat defines the log entries to be exported. The filter must be\nconsistent with the log entry format designed by the <code>version</code>\nparameter, regardless of the format of the log entry that was\noriginally written to Stackdriver Logging.","optional":true,"default":"nil","nullable":true},{"name":"start_at","types":["Time","nil"],"description":"The time at which this sink will begin\nexporting log entries. If this value is present, then log entries\nare exported only if <code>start_at</code> is less than the log entry’s\ntimestamp. Optional.","optional":true,"default":"nil","nullable":true},{"name":"end_at","types":["Time","nil"],"description":"Time at which this sink will stop exporting\nlog entries. If this value is present, then log entries are exported\nonly if the log entry’s timestamp is less than <code>end_at</code>. Optional.","optional":true,"default":"nil","nullable":true},{"name":"version","types":["Symbol"],"description":"The log entry version used when exporting log\nentries from this sink. This version does not have to correspond to\nthe version of the log entry when it was written to Stackdriver\nLogging. Accepted values are <code>:unspecified</code>, <code>:v2</code>, and <code>:v1</code>.\nVersion 2 is currently the preferred format. An unspecified version\nformat currently defaults to V2 in the service. The default value is\n<code>:unspecified</code>.","optional":true,"default":":unspecified","nullable":false},{"name":"unique_writer_identity","types":["Boolean"],"description":"Whether the sink will have a\ndedicated service account returned in the sink’s <code>writer_identity</code>.\nSet this field to be true to export logs from one project to a\ndifferent project. This field is ignored for non-project sinks\n(e.g. organization sinks) because those sinks are required to have\ndedicated service accounts. Optional.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/logging/sink\">Google::Cloud::Logging::Sink</a>"],"description":"a project sink"}]},{"id":"sink-instance","type":"instance","name":"sink","title":["Google","Cloud","Logging","Project#sink"],"description":"<p>Retrieves a sink by name.</p>","source":"google-cloud-logging/lib/google/cloud/logging/project.rb#L621","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/logging\"\n\nlogging = Google::Cloud::Logging.new\nsink = logging.sink \"existing-sink\""},{"caption":"<p>By default <code>nil</code> will be returned if the sink does not exist.</p>","code":"require \"google/cloud/logging\"\n\nlogging = Google::Cloud::Logging.new\nsink = logging.sink \"non-existing-sink\" # nil"}],"params":[{"name":"sink_name","types":["String"],"description":"Name of a sink.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/logging/sink\">Google::Cloud::Logging::Sink</a>","nil"],"description":"Returns <code>nil</code> if the sink\ndoes not exist."}]},{"id":"metrics-instance","type":"instance","name":"metrics","title":["Google","Cloud","Logging","Project#metrics"],"description":"<p>Retrieves the list of metrics belonging to the project.</p>","source":"google-cloud-logging/lib/google/cloud/logging/project.rb#L660","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/logging\"\n\nlogging = Google::Cloud::Logging.new\nmetrics = logging.metrics\nmetrics.each do |m|\n  puts \"#{m.name}: #{m.filter}\"\nend"},{"caption":"<p>Retrieve all metrics: (See <a data-custom-type=\"google/cloud/logging/metric/list\" data-method=\"all-instance\">Metric::List#all</a>)</p>","code":"require \"google/cloud/logging\"\n\nlogging = Google::Cloud::Logging.new\nmetrics = logging.metrics\n\nmetrics.all do |m|\n  puts \"#{m.name}: #{m.filter}\"\nend"}],"params":[{"name":"token","types":["String"],"description":"A previously-returned page token representing\npart of the larger set of results to view.","optional":true,"default":"nil","nullable":true},{"name":"max","types":["Integer"],"description":"Maximum number of metrics to return.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["Array&lt;<a data-custom-type=\"google/cloud/logging/metric\">Google::Cloud::Logging::Metric</a>&gt;"],"description":"(See\n<a data-custom-type=\"google/cloud/logging/metric/list\">Google::Cloud::Logging::Metric::List</a>)"}]},{"id":"create_metric-instance","type":"instance","name":"create_metric","title":["Google","Cloud","Logging","Project#create_metric"],"description":"<p>Creates a new logs-based metric for Google Cloud Monitoring.</p>","source":"google-cloud-logging/lib/google/cloud/logging/project.rb#L693","resources":[{"title":"Logs-based Metrics","link":"https://cloud.google.com/logging/docs/view/logs_based_metrics"},{"title":"Google Cloud Monitoring","link":"https://cloud.google.com/monitoring/docs"}],"examples":[{"caption":"","code":"require \"google/cloud/logging\"\n\nlogging = Google::Cloud::Logging.new\nmetric = logging.create_metric \"errors\", \"severity>=ERROR\""}],"params":[{"name":"name","types":["String"],"description":"The client-assigned metric identifier. Metric\nidentifiers are limited to 1000 characters and can include only the\nfollowing characters: <code>A-Z</code>, <code>a-z</code>, <code>0-9</code>, and the special\ncharacters <code>_-.,+!*',()%/\\</code>. The forward-slash character (<code>/</code>)\ndenotes a hierarchy of name pieces, and it cannot be the first\ncharacter of the name.","optional":false,"nullable":false},{"name":"filter","types":["String"],"description":"An <a href=\"https://cloud.google.com/logging/docs/view/advanced_filters\">advanced logs\nfilter</a>.","optional":false,"nullable":false},{"name":"description","types":["String","nil"],"description":"A description of this metric, which\nis used in documentation.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/logging/metric\">Google::Cloud::Logging::Metric</a>"],"description":""}]},{"id":"metric-instance","type":"instance","name":"metric","title":["Google","Cloud","Logging","Project#metric"],"description":"<p>Retrieves metric by name.</p>","source":"google-cloud-logging/lib/google/cloud/logging/project.rb#L720","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/logging\"\n\nlogging = Google::Cloud::Logging.new\nmetric = logging.metric \"existing_metric\""},{"caption":"<p>By default <code>nil</code> will be returned if metric does not exist.</p>","code":"require \"google/cloud/logging\"\n\nlogging = Google::Cloud::Logging.new\nmetric = logging.metric \"non_existing_metric\" # nil"}],"params":[{"name":"name","types":["String"],"description":"Name of a metric.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/logging/metric\">Google::Cloud::Logging::Metric</a>","nil"],"description":"Returns <code>nil</code> if metric\ndoes not exist."}]}]}