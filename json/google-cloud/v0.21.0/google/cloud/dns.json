{"id":"google/cloud/dns","name":"Dns","title":["Google","Cloud","Dns"],"description":"<h1 id=\"google-cloud-dns\">Google Cloud DNS</h1>\n\n<p>Google Cloud DNS is a high-performance, resilient, global DNS service that\nprovides a cost-effective way to make your applications and services\navailable to your users. This programmable, authoritative DNS service can\nbe used to easily publish and manage DNS records using the same\ninfrastructure relied upon by Google. To learn more, read <a href=\"https://cloud.google.com/dns/what-is-cloud-dns\">What is Google\nCloud DNS?</a>.</p>\n\n<p>The goal of google-cloud is to provide an API that is comfortable to\nRubyists. Authentication is handled by <a data-custom-type=\"google/cloud\" data-method=\"dns-instance\">Google::Cloud#dns</a>. You can\nprovide the project and credential information to connect to the Cloud DNS\nservice, or if you are running on Google Compute Engine this configuration\nis taken care of for you. You can read more about the options for\nconnecting in the <a href=\"https://googlecloudplatform.github.io/google-cloud-ruby/#/docs/guides/authentication\">Authentication\nGuide</a>.</p>\n\n<h2 id=\"creating-zones\">Creating Zones</h2>\n\n<p>To get started with Google Cloud DNS, use your DNS Project to create a new\nZone. The second argument to <a data-custom-type=\"google/cloud/dns/project\" data-method=\"create_zone-instance\">Google::Cloud::Dns::Project#create_zone</a>\nmust be a unique domain name for which you can <a href=\"https://www.google.com/webmasters/verification/home\">verify\nownership</a>.\nSubstitute a domain name of your own (ending with a dot to signify that it\nis <a href=\"https://en.wikipedia.org/wiki/Fully_qualified_domain_name\">fully\nqualified</a>) as\nyou follow along with these examples.</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud/dns\"\n\ndns = Google::Cloud::Dns.new\nzone = dns.create_zone \"example-com\", \"example.com.\"\nputs zone.id # unique identifier defined by the server\n</code></pre>\n\n<p>For more information, see <a href=\"https://cloud.google.com/dns/zones/\">Managing\nZones</a>.</p>\n\n<h2 id=\"listing-zones\">Listing Zones</h2>\n\n<p>You can retrieve all the zones in your project.</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud/dns\"\n\ndns = Google::Cloud::Dns.new\nzones = dns.zones\nzones.each do |zone|\n  puts \"#{zone.name} - #{zone.dns}\"\nend\n</code></pre>\n\n<p>You can also retrieve a single zone by either name or id.</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud/dns\"\n\ndns = Google::Cloud::Dns.new\nzone = dns.zone \"example-com\"\n</code></pre>\n\n<h2 id=\"listing-records\">Listing Records</h2>\n\n<p>When you create a zone, the Cloud DNS service automatically creates two\nRecord instances for it, providing configuration for Cloud DNS\nnameservers. Let’s take a look at these records.</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud/dns\"\n\ndns = Google::Cloud::Dns.new\nzone = dns.zone \"example-com\"\nrecords = zone.records\nrecords.count #=&gt; 2\nrecords.map &amp;:type #=&gt; [\"NS\", \"SOA\"]\nzone.records.first.data.count #=&gt; 4\nzone.records.first.data #=&gt; [\"ns-cloud-d1.googledomains.com.\", ...]\n</code></pre>\n\n<p>Note that <a data-custom-type=\"google/cloud/dns/record\" data-method=\"data-instance\">Google::Cloud::Dns::Record#data</a> returns an array. The Cloud\nDNS service only allows the zone to have one Record instance for each name\nand type combination. It supports multiple “resource records” (in this\ncase, the four nameserver addresses) via this <code>data</code> collection.</p>\n\n<h2 id=\"managing-records\">Managing Records</h2>\n\n<p>You can easily add your own records to the zone. Each call to\n<a data-custom-type=\"google/cloud/dns/zone\" data-method=\"add-instance\">Google::Cloud::Dns::Zone#add</a> results in a new Cloud DNS Change instance.</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud/dns\"\n\ndns = Google::Cloud::Dns.new\nzone = dns.zone \"example-com\"\nchange = zone.add \"www\", \"A\", 86400, [\"1.2.3.4\"]\nchange.additions.map &amp;:type #=&gt; [\"A\", \"SOA\"]\nchange.deletions.map &amp;:type #=&gt; [\"SOA\"]\n</code></pre>\n\n<p>Whenever you change the set of records belonging to a zone, the zone’s\nstart of authority (SOA) record should be updated with a higher serial\nnumber. The google-cloud library automates this update for you, deleting\nthe old SOA record and adding an updated one, as shown in the example\nabove. You can disable or modify this behavior, of course. See\n<a data-custom-type=\"google/cloud/dns/zone\" data-method=\"update-instance\">Google::Cloud::Dns::Zone#update</a> for details.</p>\n\n<p>You can retrieve records by name and type. The name argument can be a\nsubdomain (e.g., <code>www</code>) fragment for convenience, but notice that the\nretrieved record’s domain name is always fully-qualified.</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud/dns\"\n\ndns = Google::Cloud::Dns.new\nzone = dns.zone \"example-com\"\nrecords = zone.records \"www\", \"A\"\nrecords.first.name #=&gt; \"www.example.com.\"\n</code></pre>\n\n<p>You can use <a data-custom-type=\"google/cloud/dns/zone\" data-method=\"replace-instance\">Google::Cloud::Dns::Zone#replace</a> to update the <code>ttl</code> and\n<code>data</code> for a record.</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud/dns\"\n\ndns = Google::Cloud::Dns.new\nzone = dns.zone \"example-com\"\nchange = zone.replace \"www\", \"A\", 86400, [\"5.6.7.8\"]\n</code></pre>\n\n<p>Or, you can use <a data-custom-type=\"google/cloud/dns/zone\" data-method=\"modify-instance\">Google::Cloud::Dns::Zone#modify</a> to update just the <code>ttl</code>\nor <code>data</code>, without the risk of inadvertently changing values that you wish\nto leave unchanged.</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud/dns\"\n\ndns = Google::Cloud::Dns.new\nzone = dns.zone \"example-com\"\nchange = zone.modify \"www\", \"A\" do |r|\n  r.ttl = 3600 # change only the TTL\nend\n</code></pre>\n\n<p>You can also delete records by name and type.</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud/dns\"\n\ndns = Google::Cloud::Dns.new\nzone = dns.zone \"example-com\"\nchange = zone.remove \"www\", \"A\"\nrecord = change.deletions.first\n</code></pre>\n\n<p>The best way to add, remove, and update multiple records in a single\n<a href=\"https://cloud.google.com/dns/records\">transaction</a> is to call\n<a data-custom-type=\"google/cloud/dns/zone\" data-method=\"update-instance\">Google::Cloud::Dns::Zone#update</a> with a block. See\n<a data-custom-type=\"google/cloud/dns/zone/transaction\">Google::Cloud::Dns::Zone::Transaction</a>.</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud/dns\"\n\ndns = Google::Cloud::Dns.new\nzone = dns.zone \"example-com\"\nchange = zone.update do |tx|\n  tx.add     \"www\", \"A\",  86400, \"1.2.3.4\"\n  tx.remove  \"example.com.\", \"TXT\"\n  tx.replace \"example.com.\", \"MX\", 86400, [\"10 mail1.example.com.\",\n                                           \"20 mail2.example.com.\"]\n  tx.modify \"www.example.com.\", \"CNAME\" do |r|\n    r.ttl = 86400 # only change the TTL\n  end\nend\n</code></pre>\n\n<p>Finally, you can add and delete records by reference, using\n<a data-custom-type=\"google/cloud/dns/zone\" data-method=\"update-instance\">Google::Cloud::Dns::Zone#update</a>.</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud/dns\"\n\ndns = Google::Cloud::Dns.new\nzone = dns.zone \"example-com\"\nto_add = zone.record \"www\", \"AAAA\", 86400, [\"2607:f8b0:400a:801::1005\"]\nto_delete = zone.records \"www\", \"A\"\nchange = zone.update to_add, to_delete\n</code></pre>\n\n<h2 id=\"listing-changes\">Listing Changes</h2>\n\n<p>Because the transactions you execute against your zone do not always\ncomplete immediately, you can retrieve and inspect changes.</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud/dns\"\n\ndns = Google::Cloud::Dns.new\nzone = dns.zone \"example-com\"\nchanges = zone.changes\nchanges.each do |change|\n  puts \"#{change.id} - #{change.started_at} - #{change.status}\"\nend\n</code></pre>\n\n<h2 id=\"importing-and-exporting-zone-files\">Importing and exporting zone files</h2>\n\n<p>You can import from a zone file. Because the Cloud DNS service only allows\nthe zone to have one Record instance for each name and type combination,\nlines may be merged as needed into records with multiple <code>data</code> values.</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud/dns\"\n\ndns = Google::Cloud::Dns.new\nzone = dns.zone \"example-com\"\nchange = zone.import \"path/to/db.example.com\"\n</code></pre>\n\n<p>You can also export to a zone file.</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud/dns\"\n\ndns = Google::Cloud::Dns.new\nzone = dns.zone \"example-com\"\n\nzone.export \"path/to/db.example.com\"\n</code></pre>\n\n<h2 id=\"configuring-retries-and-timeout\">Configuring retries and timeout</h2>\n\n<p>You can configure how many times API requests may be automatically\nretried. When an API request fails, the response will be inspected to see\nif the request meets criteria indicating that it may succeed on retry,\nsuch as <code>500</code> and <code>503</code> status codes or a specific internal error code\nsuch as <code>rateLimitExceeded</code>. If it meets the criteria, the request will be\nretried after a delay. If another error occurs, the delay will be\nincreased before a subsequent attempt, until the <code>retries</code> limit is\nreached.</p>\n\n<p>You can also set the request <code>timeout</code> value in seconds.</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud/dns\"\n\ndns = Google::Cloud::Dns.new retries: 10, timeout: 120\n</code></pre>","source":"google-cloud-dns/lib/google/cloud/dns.rb#L272","resources":[],"examples":[],"methods":[{"id":"new-class","type":"class","name":"new","title":["Google","Cloud","Dns.new"],"description":"<p>Creates a new <code>Project</code> instance connected to the DNS service.\nEach call creates a new connection.</p>\n\n<p>For more information on connecting to Google Cloud see the\n<a href=\"https://googlecloudplatform.github.io/google-cloud-ruby/#/docs/guides/authentication\">Authentication\nGuide</a>.</p>","source":"google-cloud-dns/lib/google/cloud/dns.rb#L309","resources":[],"examples":[{"caption":"","code":"require \"google/cloud/dns\"\n\ndns = Google::Cloud::Dns.new(\n        project: \"my-dns-project\",\n        keyfile: \"/path/to/keyfile.json\"\n      )\n\nzone = dns.zone \"example-com\""}],"params":[{"name":"project","types":["String"],"description":"Identifier for a DNS project. If not present,\nthe default project for the credentials is used.","optional":true,"default":"nil","nullable":true},{"name":"keyfile","types":["String","Hash"],"description":"Keyfile downloaded from Google Cloud. If\nfile path the file must be readable.","optional":true,"default":"nil","nullable":true},{"name":"scope","types":["String","Array<String>"],"description":"The OAuth 2.0 scopes controlling\nthe set of resources and operations that the connection can access.\nSee <a href=\"https://developers.google.com/identity/protocols/OAuth2\">Using OAuth 2.0 to Access Google\nAPIs</a>.</p>\n\n<p>The default scope is:</p>\n\n<ul>\n  <li><code>https://www.googleapis.com/auth/ndev.clouddns.readwrite</code></li>\n</ul>","optional":true,"default":"nil","nullable":true},{"name":"retries","types":["Integer"],"description":"Number of times to retry requests on server\nerror. The default value is <code>3</code>. Optional.","optional":true,"default":"nil","nullable":true},{"name":"timeout","types":["Integer"],"description":"Default timeout to use in requests. Optional.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/dns/project\">Google::Cloud::Dns::Project</a>"],"description":""}]}]}