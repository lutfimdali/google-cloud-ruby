{"id":"google/cloud/language","name":"Language","title":["Google","Cloud","Language"],"description":"<h1 id=\"google-cloud-natural-language-api\">Google Cloud Natural Language API</h1>\n\n<p>Google Cloud Natural Language API reveals the structure and meaning of\ntext by offering powerful machine learning models in an easy to use REST\nAPI. You can use it to extract information about people, places, events\nand much more, mentioned in text documents, news articles or blog posts.\nYou can use it to understand sentiment about your product on social media\nor parse intent from customer conversations happening in a call center or\na messaging app. You can analyze text uploaded in your request or\nintegrate with your document storage on Google Cloud Storage. Combine the\nAPI with the Google Cloud Speech API and extract insights from audio\nconversations. Use with Vision API OCR to understand scanned documents.\nExtract entities and understand sentiments in multiple languages by\ntranslating text first with Translate API.</p>\n\n<p>The Google Cloud Natural Language API is currently a beta release, and\nmight be changed in backward-incompatible ways. It is not subject to any\nSLA or deprecation policy and is not intended for real-time usage in\ncritical applications.</p>\n\n<p>For more information about Cloud Natural Language API, read the <a href=\"https://cloud.google.com/natural-language/docs/\">Google\nCloud Natural Language API\nDocumentation</a>.</p>\n\n<p>The goal of google-cloud is to provide an API that is comfortable to\nRubyists. Authentication is handled by <a data-custom-type=\"google/cloud\" data-method=\"language-instance\">Google::Cloud#language</a>. You can\nprovide the project and credential information to connect to the Cloud\nNatural Language API, or if you are running on Google Compute Engine this\nconfiguration is taken care of for you. You can read more about the\noptions for connecting in the <a href=\"https://googlecloudplatform.github.io/gcloud-ruby/#/docs/guides/authentication\">Authentication\nGuide</a>.</p>\n\n<h2 id=\"creating-documents\">Creating documents</h2>\n\n<p>Cloud Natural Language API supports UTF-8, UTF-16, and UTF-32 encodings.\n(Ruby uses UTF-8 natively, which is the default sent to the API, so unless\nyou’re working with text processed in different platform, you should not\nneed to set the encoding type.) Be aware that only English, Spanish, and\nJapanese language content are supported, and <code>sentiment</code> analysis only\nsupports English text.</p>\n\n<p>Use <a data-custom-type=\"google/cloud/language/project\" data-method=\"document-instance\">Language::Project#document</a> to create documents for the Cloud Natural\nLanguage service. You can provide text or HTML content as a string:</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nlanguage = gcloud.language\n\ndocument = language.document \"It was the best of times, it was...\"\n</code></pre>\n\n<p>Or, you can pass a Google Cloud Storage URI for a text or HTML file:</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nlanguage = gcloud.language\n\ndocument = language.document \"gs://bucket-name/path/to/document\"\n</code></pre>\n\n<p>Or, you can initialize it with a Google Cloud Storage File object:</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nstorage = gcloud.storage\n\nbucket = storage.bucket \"bucket-name\"\nfile = bucket.file \"path/to/document\"\n\nlanguage = gcloud.language\n\ndocument = language.document file\n</code></pre>\n\n<p>You can specify the format and language of the content:</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nlanguage = gcloud.language\n\ndocument = language.document \"&lt;p&gt;El viejo y el mar&lt;/p&gt;\",\n                             format: :html, language: \"es\"\n</code></pre>\n\n<p>Creating a Document instance does not perform an API request.</p>\n\n<h2 id=\"annotating-documents\">Annotating documents</h2>\n\n<p>The instance methods on <a data-custom-type=\"google/cloud/language/document\">Language::Document</a> invoke Cloud Natural\nLanguage’s detection features individually. Each method call makes an API\nrequest. If you want to run multiple features in a single request, see\nthe examples for <a data-custom-type=\"google/cloud/language/document\" data-method=\"annotate-instance\">Language::Document#annotate</a>, below. Calling <code>annotate</code>\nwith no arguments will perform <strong>all</strong> analysis features. Each feature\nis priced separately. See <a href=\"https://cloud.google.com/natural-language/pricing\">Pricing</a>\nfor details.</p>\n\n<p>Sentiment analysis inspects the given text and identifies the prevailing\nemotional opinion within the text, especially to determine a writer’s\nattitude as positive, negative, or neutral. Sentiment analysis can be\nperformed with the <a data-custom-type=\"google/cloud/language/document\" data-method=\"sentiment-instance\">Language::Document#sentiment</a> method. Currently, only\nEnglish is supported for sentiment analysis.</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nlanguage = gcloud.language\n\ncontent = \"Darth Vader is the best villain in Star Wars.\"\ndocument = language.document content\nsentiment = document.sentiment # API call\n\nsentiment.polarity #=&gt; 1.0\nsentiment.magnitude #=&gt; 0.8999999761581421\n</code></pre>\n\n<p>Entity analysis inspects the given text for known entities (proper nouns\nsuch as public figures, landmarks, etc.) and returns information about\nthose entities. Entity analysis can be performed with the\n<a data-custom-type=\"google/cloud/language/document\" data-method=\"entities-instance\">Language::Document#entities</a> method.</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nlanguage = gcloud.language\n\ncontent = \"Darth Vader is the best villain in Star Wars.\"\ndocument = language.document content\nentities = document.entities # API call\n\nentities.count #=&gt; 2\nentities.first.name #=&gt; \"Darth Vader\"\nentities.first.type #=&gt; :PERSON\nentities.first.name #=&gt; \"Star Wars\"\nentities.first.type #=&gt; :WORK_OF_ART\n</code></pre>\n\n<p>Syntactic analysis extracts linguistic information, breaking up the given\ntext into a series of sentences and tokens (generally, word boundaries),\nproviding further analysis on those tokens. Syntactic analysis can be\nperformed with the <a data-custom-type=\"google/cloud/language/document\" data-method=\"syntax-instance\">Language::Document#syntax</a> method.</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nlanguage = gcloud.language\n\ncontent = \"Darth Vader is the best villain in Star Wars.\"\ndocument = language.document content\nsyntax = document.syntax # API call\n\nsyntax.sentences.count #=&gt; 1\nsyntax.tokens.count #=&gt; 10\n</code></pre>\n\n<p>To run multiple features on a document in a single request, pass the flag\nfor each desired feature to <a data-custom-type=\"google/cloud/language/document\" data-method=\"annotate-instance\">Language::Document#annotate</a>:</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nlanguage = gcloud.language\n\ncontent = \"Darth Vader is the best villain in Star Wars.\"\ndocument = language.document content\nannotation = document.annotate entities: true, text: true\n\nannotation.sentiment #=&gt; nil\nannotation.entities.count #=&gt; 2\nannotation.sentences.count #=&gt; 1\nannotation.tokens.count #=&gt; 10\n</code></pre>\n\n<p>Or, simply call <a data-custom-type=\"google/cloud/language/document\" data-method=\"annotate-instance\">Language::Document#annotate</a> with no arguments to process\nthe document with <strong>all</strong> features:</p>\n\n<pre><code class=\"language-ruby\">require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nlanguage = gcloud.language\n\ncontent = \"Darth Vader is the best villain in Star Wars.\"\ndocument = language.document content\nannotation = document.annotate\n\nannotation.sentiment.polarity #=&gt; 1.0\nannotation.sentiment.magnitude #=&gt; 0.8999999761581421\nannotation.entities.count #=&gt; 2\nannotation.sentences.count #=&gt; 1\nannotation.tokens.count #=&gt; 10\n</code></pre>","source":"google-cloud-language/lib/google/cloud/language.rb#L226","resources":[],"examples":[],"methods":[]}