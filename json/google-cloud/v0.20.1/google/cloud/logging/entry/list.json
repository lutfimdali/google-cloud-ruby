{"id":"google/cloud/logging/entry/list","name":"List","title":["Google","Cloud","Logging","Entry","List"],"description":"<p>Entry::List is a special case Array with additional values.</p>","source":"google-cloud-logging/lib/google/cloud/logging/entry/list.rb#L24","resources":[],"examples":[],"methods":[{"id":"token-instance","type":"instance","name":"token","title":["Google","Cloud","Logging","Entry","List#token"],"description":"<p>If not empty, indicates that there are more records that match\nthe request and this value should be passed to continue.</p>","source":"google-cloud-logging/lib/google/cloud/logging/entry/list.rb#L28","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"token=-instance","type":"instance","name":"token=","title":["Google","Cloud","Logging","Entry","List#token="],"description":"<p>If not empty, indicates that there are more records that match\nthe request and this value should be passed to continue.</p>","source":"google-cloud-logging/lib/google/cloud/logging/entry/list.rb#L28","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"next?-instance","type":"instance","name":"next?","title":["Google","Cloud","Logging","Entry","List#next?"],"description":"<p>Whether there is a next page of entries.</p>","source":"google-cloud-logging/lib/google/cloud/logging/entry/list.rb#L52","resources":[],"examples":[{"caption":"","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nlogging = gcloud.logging\n\nentries = logging.entries\nif entries.next?\n  next_entries = entries.next\nend"}],"params":[],"exceptions":[],"returns":[{"types":["Boolean"],"description":""}]},{"id":"next-instance","type":"instance","name":"next","title":["Google","Cloud","Logging","Entry","List#next"],"description":"<p>Retrieve the next page of entries.</p>","source":"google-cloud-logging/lib/google/cloud/logging/entry/list.rb#L72","resources":[],"examples":[{"caption":"","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nlogging = gcloud.logging\n\nentries = dataset.entries\nif entries.next?\n  next_entries = entries.next\nend"}],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/logging/sink/list\">Sink::List</a>"],"description":""}]},{"id":"all-instance","type":"instance","name":"all","title":["Google","Cloud","Logging","Entry","List#all"],"description":"<p>Retrieves all log entries by repeatedly loading <a data-custom-type=\"google/cloud/logging/entry/list\" data-method=\"next-instance\">#next</a> until\n<a data-custom-type=\"google/cloud/logging/entry/list\" data-method=\"next?-instance\">#next?</a> returns <code>false</code>. Calls the given block once for each log\nentry, which is passed as the parameter.</p>\n\n<p>An Enumerator is returned if no block is given.</p>\n\n<p>This method may make several API calls until all log entries are\nretrieved. Be sure to use as narrow a search criteria as possible.\nPlease use with caution.</p>","source":"google-cloud-logging/lib/google/cloud/logging/entry/list.rb#L132","resources":[],"examples":[{"caption":"<p>Iterating each log entry by passing a block:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nlogging = gcloud.logging\nentries = logging.entries order: \"timestamp desc\"\n\nentries.all do |entry|\n  puts \"[#{e.timestamp}] #{e.log_name} #{e.payload.inspect}\"\nend"},{"caption":"<p>Using the enumerator by not passing a block:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nlogging = gcloud.logging\nentries = logging.entries order: \"timestamp desc\"\n\nall_payloads = entries.all.map do |entry|\n  entry.payload\nend"},{"caption":"<p>Limit the number of API calls made:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\nlogging = gcloud.logging\nentries = logging.entries order: \"timestamp desc\"\n\nentries.all(request_limit: 10) do |entry|\n  puts \"[#{e.timestamp}] #{e.log_name} #{e.payload.inspect}\"\nend"}],"params":[{"name":"request_limit","types":["Integer"],"description":"The upper limit of API requests to\nmake to load all log entries. Default is no limit.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"The block for accessing each log entry.","optional":true,"nullable":false},{"name":"yield.entry","types":["Entry"],"description":"The log entry object.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["Enumerator"],"description":""}]}]}