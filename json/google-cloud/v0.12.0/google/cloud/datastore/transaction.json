{"id":"google/cloud/datastore/transaction","name":"Transaction","title":["Google","Cloud","Datastore","Transaction"],"description":"<h1 id=\"transaction\">Transaction</h1>\n\n<p>Special Connection instance for running transactions.</p>\n\n<p>See <a data-custom-type=\"google/cloud/datastore/dataset\" data-method=\"transaction-instance\">Google::Cloud::Datastore::Dataset#transaction</a></p>","source":"lib/google/cloud/datastore/transaction.rb#L57","resources":[{"title":"Transactions","link":"https://cloud.google.com/datastore/docs/concepts/transactions"}],"examples":[{"caption":"<p>Transactional update:</p>","code":"def transfer_funds from_key, to_key, amount\n  datastore.transaction do |tx|\n    from = tx.find from_key\n    from[\"balance\"] -= amount\n    to = tx.find to_key\n    to[\"balance\"] += amount\n    tx.save from, to\n  end\nend"},{"caption":"<p>Retry logic using the transactional update example above:</p>","code":"(1..5).each do |i|\n  begin\n    return transfer_funds from_key, to_key, amount\n  rescue Google::Cloud::Error => e\n    raise e if i == 5\n  end\nend"},{"caption":"<p>Transactional read:</p>","code":"task_list_key = datastore.key \"TaskList\", \"default\"\ndatastore.transaction do |tx|\n  task_list = tx.find task_list_key\n  query = tx.query(\"Task\").ancestor(task_list)\n  tasks_in_list = tx.run query\nend"}],"methods":[{"id":"id-instance","type":"instance","name":"id","title":["Google","Cloud","Datastore","Transaction#id"],"description":"<p>Returns the value of attribute id</p>","source":"lib/google/cloud/datastore/transaction.rb#L58","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"save-instance","type":"instance","name":"save","title":["Google","Cloud","Datastore","Transaction#save"],"description":"<p>Persist entities in a transaction.</p>","source":"lib/google/cloud/datastore/transaction.rb#L89","resources":[],"examples":[{"caption":"<p>Transactional get or create:</p>","code":"task_key = datastore.key \"Task\", \"sampleTask\"\n\ntask = nil\ndatastore.transaction do |tx|\n  task = tx.find task_key\n  if task.nil?\n    task = datastore.entity task_key do |t|\n      t[\"type\"] = \"Personal\"\n      t[\"done\"] = false\n      t[\"priority\"] = 4\n      t[\"description\"] = \"Learn Cloud Datastore\"\n    end\n    tx.save task\n  end\nend"}],"params":[],"exceptions":[],"returns":[]},{"id":"insert-instance","type":"instance","name":"insert","title":["Google","Cloud","Datastore","Transaction#insert"],"description":"<p>Insert entities in a transaction. An InvalidArgumentError will raised\nif the entities cannot be inserted.</p>","source":"lib/google/cloud/datastore/transaction.rb#L117","resources":[],"examples":[{"caption":"<p>Transactional insert:</p>","code":"task_key = datastore.key \"Task\", \"sampleTask\"\n\ntask = nil\ndatastore.transaction do |tx|\n  task = tx.find task_key\n  if task.nil?\n    task = datastore.entity task_key do |t|\n      t[\"type\"] = \"Personal\"\n      t[\"done\"] = false\n      t[\"priority\"] = 4\n      t[\"description\"] = \"Learn Cloud Datastore\"\n    end\n    tx.insert task\n  end\nend"}],"params":[],"exceptions":[],"returns":[]},{"id":"update-instance","type":"instance","name":"update","title":["Google","Cloud","Datastore","Transaction#update"],"description":"<p>Update entities in a transaction. An InvalidArgumentError will raised\nif the entities cannot be updated.</p>","source":"lib/google/cloud/datastore/transaction.rb#L139","resources":[],"examples":[{"caption":"<p>Transactional update:</p>","code":"task_key = datastore.key \"Task\", \"sampleTask\"\n\ntask = nil\ndatastore.transaction do |tx|\n  task = tx.find task_key\n  if task\n    task[\"done\"] = true\n    tx.update task\n  end\nend"}],"params":[],"exceptions":[],"returns":[]},{"id":"delete-instance","type":"instance","name":"delete","title":["Google","Cloud","Datastore","Transaction#delete"],"description":"<p>Remove entities in a transaction.</p>","source":"lib/google/cloud/datastore/transaction.rb#L155","resources":[],"examples":[{"caption":"","code":"datastore.transaction do |tx|\n  if tx.find(task_list.key).nil?\n    tx.delete task1, task2\n  end\nend"}],"params":[],"exceptions":[],"returns":[]},{"id":"find-instance","type":"instance","name":"find","title":["Google","Cloud","Datastore","Transaction#find"],"description":"<p>Retrieve an entity by providing key information. The lookup is run\nwithin the transaction.</p>","source":"lib/google/cloud/datastore/transaction.rb#L176","resources":[],"examples":[{"caption":"<p>Finding an entity with a key:</p>","code":"task_key = datastore.key \"Task\", \"sampleTask\"\ntask = datastore.find task_key"},{"caption":"<p>Finding an entity with a <code>kind</code> and <code>id</code>/<code>name</code>:</p>","code":"task = datastore.find \"Task\", \"sampleTask\""}],"params":[{"name":"key_or_kind","types":["Key","String"],"description":"A Key object or <code>kind</code> string value.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/datastore/entity\">Google::Cloud::Datastore::Entity</a>","nil"],"description":""}]},{"id":"find_all-instance","type":"instance","name":"find_all","title":["Google","Cloud","Datastore","Transaction#find_all"],"description":"<p>Retrieve the entities for the provided keys. The lookup is run within\nthe transaction.</p>","source":"lib/google/cloud/datastore/transaction.rb#L200","resources":[],"examples":[{"caption":"","code":"gcloud = Google::Cloud.new\ndatastore = gcloud.datastore\ntask_key1 = datastore.key \"Task\", 123456\ntask_key2 = datastore.key \"Task\", 987654\ntasks = datastore.find_all task_key1, task_key2"}],"params":[{"name":"keys","types":["Key"],"description":"One or more Key objects to find records for.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/datastore/dataset/lookupresults\">Google::Cloud::Datastore::Dataset::LookupResults</a>"],"description":""}]},{"id":"run-instance","type":"instance","name":"run","title":["Google","Cloud","Datastore","Transaction#run"],"description":"<p>Retrieve entities specified by a Query. The query is run within the\ntransaction.</p>","source":"lib/google/cloud/datastore/transaction.rb#L231","resources":[],"examples":[{"caption":"","code":"query = datastore.query(\"Task\").\n  where(\"done\", \"=\", false)\ndatastore.transaction do |tx|\n  tasks = tx.run query\nend"},{"caption":"<p>Run the query within a namespace with the <code>namespace</code> option:</p>","code":"query = Google::Cloud::Datastore::Query.new.kind(\"Task\").\n  where(\"done\", \"=\", false)\ndatastore.transaction do |tx|\n  tasks = tx.run query, namespace: \"ns~todo-project\"\nend"}],"params":[{"name":"query","types":["Query"],"description":"The Query object with the search criteria.","optional":false,"nullable":false},{"name":"namespace","types":["String"],"description":"The namespace the query is to run within.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/datastore/dataset/queryresults\">Google::Cloud::Datastore::Dataset::QueryResults</a>"],"description":""}]},{"id":"start-instance","type":"instance","name":"start","title":["Google","Cloud","Datastore","Transaction#start"],"description":"<p>Begins a transaction.\nThis method is run when a new Transaction is created.</p>","source":"lib/google/cloud/datastore/transaction.rb#L246","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"commit-instance","type":"instance","name":"commit","title":["Google","Cloud","Datastore","Transaction#commit"],"description":"<p>Commits a transaction.</p>","source":"lib/google/cloud/datastore/transaction.rb#L300","resources":[],"examples":[{"caption":"","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\ndatastore = gcloud.datastore\n\ntask = datastore.entity \"Task\" do |t|\n  t[\"type\"] = \"Personal\"\n  t[\"done\"] = false\n  t[\"priority\"] = 4\n  t[\"description\"] = \"Learn Cloud Datastore\"\nend\n\ntx = datastore.transaction\nbegin\n  if tx.find(task.key).nil?\n    tx.save task\n  end\n  tx.commit\nrescue\n  tx.rollback\nend"},{"caption":"<p>Commit can be passed a block, same as <a data-custom-type=\"google/cloud/datastore/dataset\" data-method=\"commit-instance\">Dataset#commit</a>:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\ndatastore = gcloud.datastore\n\ntx = datastore.transaction\nbegin\n  tx.commit do |c|\n    c.save task1, task2\n    c.delete entity1, entity2\n  end\nrescue\n  tx.rollback\nend"}],"params":[{"name":"yield","types":["block"],"description":"an optional block for making changes","optional":true,"nullable":false},{"name":"yield.commit","types":["Commit"],"description":"The object that changes are made on","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"rollback-instance","type":"instance","name":"rollback","title":["Google","Cloud","Datastore","Transaction#rollback"],"description":"<p>Rolls a transaction back.</p>","source":"lib/google/cloud/datastore/transaction.rb#L345","resources":[],"examples":[{"caption":"","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\ndatastore = gcloud.datastore\n\ntask = datastore.entity \"Task\" do |t|\n  t[\"type\"] = \"Personal\"\n  t[\"done\"] = false\n  t[\"priority\"] = 4\n  t[\"description\"] = \"Learn Cloud Datastore\"\nend\n\ntx = datastore.transaction\nbegin\n  if tx.find(task.key).nil?\n    tx.save task\n  end\n  tx.commit\nrescue\n  tx.rollback\nend"}],"params":[],"exceptions":[],"returns":[]},{"id":"reset!-instance","type":"instance","name":"reset!","title":["Google","Cloud","Datastore","Transaction#reset!"],"description":"<p>Reset the transaction.\n<a data-custom-type=\"google/cloud/datastore/transaction\" data-method=\"start-instance\">Transaction#start</a> must be called afterwards.</p>","source":"lib/google/cloud/datastore/transaction.rb#L358","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]}]}