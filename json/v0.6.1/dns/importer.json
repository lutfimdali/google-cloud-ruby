{"id":"importer","metadata":{"name":"Importer","title":["Gcloud","Dns","Importer"],"description":"<h1 id=\"dns-importer\">DNS Importer</h1>\n\n<p>Reads a <a href=\"https://en.wikipedia.org/wiki/Zone_file\">DNS zone\nfile</a> and parses it, creating a\ncollection of Record instances. The returned records are unsaved,\nas they are not yet associated with a Zone. Use <a data-custom-type=\"dns/zone#import\">Zone#import</a> to add zone\nfile records to a Zone.</p>\n\n<p>Because the Google Cloud DNS API only accepts a single resource record for\neach <code class=\"highlighter-rouge\">name</code> and <code class=\"highlighter-rouge\">type</code> combination (with multiple <code class=\"highlighter-rouge\">data</code> elements), the\nzone file’s records are merged as necessary. During this merge, the lowest\n<code class=\"highlighter-rouge\">ttl</code> of the merged records is used. If none of the merged records have a\n<code class=\"highlighter-rouge\">ttl</code> value, the zone file’s global TTL is used for the record.</p>\n\n<p>The following record types are supported: A, AAAA, CNAME, MX, NAPTR, NS,\nPTR, SOA, SPF, SRV, and TXT.</p>","source":"lib/gcloud/dns/importer.rb#L39","resources":[],"examples":[]},"methods":[{"metadata":{"name":"initialize","title":["Gcloud","Dns","Importer#initialize"],"description":"<p>Creates a new Importer that immediately parses the provided zone file\ndata and creates Record instances.</p>","source":"lib/gcloud/dns/importer.rb#L47","resources":[],"examples":[]},"params":[{"name":"path_or_io","types":["String","IO"],"description":"The path to a zone file on the\nfilesystem, or an IO instance from which zone file data can be read.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"dns/importer\">Importer</a>"],"description":"a new instance of Importer"}]},{"metadata":{"name":"records","title":["Gcloud","Dns","Importer#records"],"description":"<p>Returns the Record instances created from the zone file.</p>","source":"lib/gcloud/dns/importer.rb#L67","resources":[],"examples":[]},"params":[{"name":"only","types":["String","Array<String>"],"description":"Include only records of this type or\ntypes.","optional":true,"default":"nil","nullable":true},{"name":"except","types":["String","Array<String>"],"description":"Exclude records of this type or\ntypes.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["Array&lt;<a data-custom-type=\"dns/record\">Record</a>&gt;"],"description":"An array of unsaved <a data-custom-type=\"dns/record\">Record</a> instances"}]},{"metadata":{"name":"merge_zonefile_records","title":["Gcloud","Dns","Importer#merge_zonefile_records"],"description":"<p>The zonefile library returns a two-element array in which the first\nelement is a symbol type (:a, :mx, and so on), and the second element\nis an array containing the records of that type. Group the records by\nname and type instead.</p>","source":"lib/gcloud/dns/importer.rb#L81","resources":[],"examples":[]},"params":[],"exceptions":[],"returns":[]},{"metadata":{"name":"from_zonefile_records","title":["Gcloud","Dns","Importer#from_zonefile_records"],"description":"<p>Convert the grouped records to single array of records, merging records\nof the same name and type into a single record with an array of rrdatas.</p>","source":"lib/gcloud/dns/importer.rb#L96","resources":[],"examples":[]},"params":[],"exceptions":[],"returns":[]},{"metadata":{"name":"soa_record","title":["Gcloud","Dns","Importer#soa_record"],"description":"","source":"lib/gcloud/dns/importer.rb#L106","resources":[],"examples":[]},"params":[],"exceptions":[],"returns":[]},{"metadata":{"name":"ttl_from_zonefile_records","title":["Gcloud","Dns","Importer#ttl_from_zonefile_records"],"description":"<p>From a collection of records, take the lowest ttl</p>","source":"lib/gcloud/dns/importer.rb#L115","resources":[],"examples":[]},"params":[],"exceptions":[],"returns":[]},{"metadata":{"name":"data_from_zonefile_record","title":["Gcloud","Dns","Importer#data_from_zonefile_record"],"description":"<p>rubocop:disable all\nRubocop’s line-length and branch condition restrictions prevent\nthe most straightforward approach to converting zonefile’s records\nto our own. So disable rubocop for this operation.</p>","source":"lib/gcloud/dns/importer.rb#L128","resources":[],"examples":[]},"params":[],"exceptions":[],"returns":[]},{"metadata":{"name":"ttl_to_i","title":["Gcloud","Dns","Importer#ttl_to_i"],"description":"","source":"lib/gcloud/dns/importer.rb#L165","resources":[],"examples":[]},"params":[],"exceptions":[],"returns":[]},{"metadata":{"name":"create_zonefile","title":["Gcloud","Dns","Importer#create_zonefile"],"description":"<p>:nodoc:</p>","source":"lib/gcloud/dns/importer.rb#L174","resources":[],"examples":[]},"params":[],"exceptions":[],"returns":[]}]}