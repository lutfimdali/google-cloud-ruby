{"id":"gcloud/datastore/dataset/queryresults","name":"QueryResults","title":["Gcloud","Datastore","Dataset","QueryResults"],"description":"<p>QueryResults is a special case Array with additional values.\nA QueryResults object is returned from Dataset#run and contains\nthe Entities from the query as well as the queryâ€™s cursor and\nmore_results value.</p>\n\n<p>Please be cautious when treating the QueryResults as an Array.\nMany common Array methods will return a new Array instance.</p>","source":"lib/gcloud/datastore/dataset/query_results.rb#L57","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\ndatastore = gcloud.datastore\n\nquery = datastore.query(\"Task\")\ntasks = datastore.run query\n\ntasks.size #=> 3\ntasks.cursor #=> Gcloud::Datastore::Cursor(c3VwZXJhd2Vzb21lIQ)"},{"caption":"<p>Caution, many Array methods will return a new Array instance:</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\ndatastore = gcloud.datastore\n\nquery = datastore.query(\"Task\")\ntasks = datastore.run query\n\ntasks.size #=> 3\ntasks.end_cursor #=> Gcloud::Datastore::Cursor(c3VwZXJhd2Vzb21lIQ)\ndescriptions = tasks.map { |task| task[\"description\"] }\ndescriptions.size #=> 3\ndescriptions.cursor #=> NoMethodError"}],"methods":[{"id":"end_cursor-instance","type":"instance","name":"end_cursor","title":["Gcloud","Datastore","Dataset","QueryResults#end_cursor"],"description":"<p>The end_cursor of the QueryResults.</p>","source":"lib/gcloud/datastore/dataset/query_results.rb#L62","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"gcloud/datastore/cursor\">Gcloud::Datastore::Cursor</a>"],"description":""}]},{"id":"more_results-instance","type":"instance","name":"more_results","title":["Gcloud","Datastore","Dataset","QueryResults#more_results"],"description":"<p>The state of the query after the current batch.</p>\n\n<p>Expected values are:</p>\n\n<ul>\n  <li><code>:NOT_FINISHED</code></li>\n  <li><code>:MORE_RESULTS_AFTER_LIMIT</code></li>\n  <li><code>:MORE_RESULTS_AFTER_CURSOR</code></li>\n  <li><code>:NO_MORE_RESULTS</code></li>\n</ul>","source":"lib/gcloud/datastore/dataset/query_results.rb#L74","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"not_finished?-instance","type":"instance","name":"not_finished?","title":["Gcloud","Datastore","Dataset","QueryResults#not_finished?"],"description":"<p>Convenience method for determining if the <code>more_results</code> value\nis <code>:NOT_FINISHED</code></p>","source":"lib/gcloud/datastore/dataset/query_results.rb#L87","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Boolean"],"description":""}]},{"id":"more_after_limit?-instance","type":"instance","name":"more_after_limit?","title":["Gcloud","Datastore","Dataset","QueryResults#more_after_limit?"],"description":"<p>Convenience method for determining if the <code>more_results</code> value\nis <code>:MORE_RESULTS_AFTER_LIMIT</code></p>","source":"lib/gcloud/datastore/dataset/query_results.rb#L94","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Boolean"],"description":""}]},{"id":"more_after_cursor?-instance","type":"instance","name":"more_after_cursor?","title":["Gcloud","Datastore","Dataset","QueryResults#more_after_cursor?"],"description":"<p>Convenience method for determining if the <code>more_results</code> value\nis <code>:MORE_RESULTS_AFTER_CURSOR</code></p>","source":"lib/gcloud/datastore/dataset/query_results.rb#L101","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Boolean"],"description":""}]},{"id":"no_more?-instance","type":"instance","name":"no_more?","title":["Gcloud","Datastore","Dataset","QueryResults#no_more?"],"description":"<p>Convenience method for determining if the <code>more_results</code> value\nis <code>:NO_MORE_RESULTS</code></p>","source":"lib/gcloud/datastore/dataset/query_results.rb#L108","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["Boolean"],"description":""}]},{"id":"next?-instance","type":"instance","name":"next?","title":["Gcloud","Datastore","Dataset","QueryResults#next?"],"description":"<p>Whether there are more results available.</p>","source":"lib/gcloud/datastore/dataset/query_results.rb#L135","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\ndatastore = gcloud.datastore\nquery = datastore.query \"Task\"\ntasks = datastore.run query\n\nif tasks.next?\n  next_tasks = tasks.next\nend"}],"params":[],"exceptions":[],"returns":[{"types":["Boolean"],"description":""}]},{"id":"next-instance","type":"instance","name":"next","title":["Gcloud","Datastore","Dataset","QueryResults#next"],"description":"<p>Retrieve the next page of results.</p>","source":"lib/gcloud/datastore/dataset/query_results.rb#L156","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\ndatastore = gcloud.datastore\nquery = datastore.query \"Task\"\ntasks = datastore.run query\n\nif tasks.next?\n  next_tasks = tasks.next\nend"}],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"gcloud/datastore/dataset/queryresults\">QueryResults</a>"],"description":""}]},{"id":"cursor_for-instance","type":"instance","name":"cursor_for","title":["Gcloud","Datastore","Dataset","QueryResults#cursor_for"],"description":"<p>Retrieve the <a data-custom-type=\"gcloud/datastore/cursor\">Cursor</a> for the provided result.</p>","source":"lib/gcloud/datastore/dataset/query_results.rb#L183","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\ndatastore = gcloud.datastore\nquery = datastore.query \"Task\"\ntasks = datastore.run query\n\nfirst_task = tasks.first\nfirst_cursor = tasks.cursor_for first_task"}],"params":[{"name":"result","types":["Entity"],"description":"The entity object to get a cursor for.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"gcloud/datastore/cursor\">Cursor</a>"],"description":""}]},{"id":"each_with_cursor-instance","type":"instance","name":"each_with_cursor","title":["Gcloud","Datastore","Dataset","QueryResults#each_with_cursor"],"description":"<p>Calls the given block once for each result and cursor combination,\nwhich are passed as parameters.</p>\n\n<p>An Enumerator is returned if no block is given.</p>","source":"lib/gcloud/datastore/dataset/query_results.rb#L213","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\ndatastore = gcloud.datastore\nquery = datastore.query \"Task\"\ntasks = datastore.run query\ntasks.each_with_cursor do |task, cursor|\n  puts \"Task #{task.key.id} (#cursor)\"\nend"}],"params":[{"name":"yield","types":["block"],"description":"The block for accessing each query result and\ncursor.","optional":true,"nullable":false},{"name":"yield.result","types":["Entity"],"description":"The query result object.","optional":false,"nullable":false},{"name":"yield.cursor","types":["Cursor"],"description":"The cursor object.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["Enumerator"],"description":""}]},{"id":"all-instance","type":"instance","name":"all","title":["Gcloud","Datastore","Dataset","QueryResults#all"],"description":"<p>Retrieves all query results by repeatedly loading <a data-custom-type=\"gcloud/datastore/dataset/queryresults\" data-method=\"next-instance\">#next</a> until\n<a data-custom-type=\"gcloud/datastore/dataset/queryresults\" data-method=\"next?-instance\">#next?</a> returns <code>false</code>. Calls the given block once for each query\nresult, which is passed as the parameter.</p>\n\n<p>An Enumerator is returned if no block is given.</p>\n\n<p>This method may make several API calls until all query results are\nretrieved. Be sure to use as narrow a search criteria as possible.\nPlease use with caution.</p>","source":"lib/gcloud/datastore/dataset/query_results.rb#L269","resources":[],"examples":[{"caption":"<p>Iterating each query result by passing a block:</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\ndatastore = gcloud.datastore\nquery = datastore.query \"Task\"\ntasks = datastore.run query\ntasks.all do |task|\n  puts \"Task #{task.key.id} (#cursor)\"\nend"},{"caption":"<p>Using the enumerator by not passing a block:</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\ndatastore = gcloud.datastore\nquery = datastore.query \"Task\"\ntasks = datastore.run query\ntasks.all.map(&:key).each do |key|\n  puts \"Key #{key.id}\"\nend"},{"caption":"<p>Limit the number of API calls made:</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\ndatastore = gcloud.datastore\nquery = datastore.query \"Task\"\ntasks = datastore.run query\ntasks.all(request_limit: 10) do |task|\n  puts \"Task #{task.key.id} (#cursor)\"\nend"}],"params":[{"name":"request_limit","types":["Integer"],"description":"The upper limit of API requests to make\nto load all query results. Default is no limit.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"The block for accessing each query result.","optional":true,"nullable":false},{"name":"yield.result","types":["Entity"],"description":"The query result object.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["Enumerator"],"description":""}]},{"id":"all_with_cursor-instance","type":"instance","name":"all_with_cursor","title":["Gcloud","Datastore","Dataset","QueryResults#all_with_cursor"],"description":"<p>Retrieves all query results and cursors by repeatedly loading <a data-custom-type=\"gcloud/datastore/dataset/queryresults\" data-method=\"next-instance\">#next</a>\nuntil <a data-custom-type=\"gcloud/datastore/dataset/queryresults\" data-method=\"next?-instance\">#next?</a> returns <code>false</code>. Calls the given block once for each\nresult and cursor combination, which are passed as parameters.</p>\n\n<p>An Enumerator is returned if no block is given.</p>\n\n<p>This method may make several API calls until all query results are\nretrieved. Be sure to use as narrow a search criteria as possible.\nPlease use with caution.</p>","source":"lib/gcloud/datastore/dataset/query_results.rb#L337","resources":[],"examples":[{"caption":"<p>Iterating all results and cursors by passing a block:</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\ndatastore = gcloud.datastore\nquery = datastore.query \"Task\"\ntasks = datastore.run query\ntasks.all_with_cursor do |task, cursor|\n  puts \"Task #{task.key.id} (#cursor)\"\nend"},{"caption":"<p>Using the enumerator by not passing a block:</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\ndatastore = gcloud.datastore\nquery = datastore.query \"Task\"\ntasks = datastore.run query\ntasks.all_with_cursor.count #=> number of result/cursor pairs"},{"caption":"<p>Limit the number of API calls made:</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\ndatastore = gcloud.datastore\nquery = datastore.query \"Task\"\ntasks = datastore.run query\ntasks.all_with_cursor(request_limit: 10) do |task, cursor|\n  puts \"Task #{task.key.id} (#cursor)\"\nend"}],"params":[{"name":"request_limit","types":["Integer"],"description":"The upper limit of API requests to make\nto load all tables. Default is no limit.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"The block for accessing each query result and\ncursor.","optional":true,"nullable":false},{"name":"yield.result","types":["Entity"],"description":"The query result object.","optional":false,"nullable":false},{"name":"yield.cursor","types":["Cursor"],"description":"The cursor object.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["Enumerator"],"description":""}]}]}