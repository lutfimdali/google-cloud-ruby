{"id":"gcloud/logging/sink/list","name":"List","title":["Gcloud","Logging","Sink","List"],"description":"<p>Sink::List is a special case Array with additional values.</p>","source":"lib/gcloud/logging/sink/list.rb#L23","resources":[],"examples":[],"methods":[{"id":"token-instance","type":"instance","name":"token","title":["Gcloud","Logging","Sink","List#token"],"description":"<p>If not empty, indicates that there are more records that match\nthe request and this value should be passed to continue.</p>","source":"lib/gcloud/logging/sink/list.rb#L27","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"token=-instance","type":"instance","name":"token=","title":["Gcloud","Logging","Sink","List#token="],"description":"<p>If not empty, indicates that there are more records that match\nthe request and this value should be passed to continue.</p>","source":"lib/gcloud/logging/sink/list.rb#L27","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"next?-instance","type":"instance","name":"next?","title":["Gcloud","Logging","Sink","List#next?"],"description":"<p>Whether there is a next page of sinks.</p>","source":"lib/gcloud/logging/sink/list.rb#L51","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\nlogging = gcloud.logging\n\nsinks = logging.sinks\nif sinks.next?\n  next_sinks = sinks.next\nend"}],"params":[],"exceptions":[],"returns":[{"types":["Boolean"],"description":""}]},{"id":"next-instance","type":"instance","name":"next","title":["Gcloud","Logging","Sink","List#next"],"description":"<p>Retrieve the next page of sinks.</p>","source":"lib/gcloud/logging/sink/list.rb#L71","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\nlogging = gcloud.logging\n\nsinks = dataset.sinks\nif sinks.next?\n  next_sinks = sinks.next\nend"}],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"gcloud/logging/sink/list\">Sink::List</a>"],"description":""}]},{"id":"all-instance","type":"instance","name":"all","title":["Gcloud","Logging","Sink","List#all"],"description":"<p>Retrieves all sinks by repeatedly loading <a data-custom-type=\"gcloud/logging/sink/list\" data-method=\"next-instance\">#next</a> until <a data-custom-type=\"gcloud/logging/sink/list\" data-method=\"next?-instance\">#next?</a>\nreturns <code>false</code>. Calls the given block once for each sink, which is\npassed as the parameter.</p>\n\n<p>An Enumerator is returned if no block is given.</p>\n\n<p>This method may make several API calls until all sinks are retrieved.\nBe sure to use as narrow a search criteria as possible. Please use\nwith caution.</p>","source":"lib/gcloud/logging/sink/list.rb#L131","resources":[],"examples":[{"caption":"<p>Iterating each sink by passing a block:</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\nlogging = gcloud.logging\nsinks = logging.sinks\n\nsinks.all do |sink|\n  puts \"#{sink.name}: #{sink.filter} -> #{sink.destination}\"\nend"},{"caption":"<p>Using the enumerator by not passing a block:</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\nlogging = gcloud.logging\nsinks = logging.sinks\n\nall_names = sinks.all.map do |sink|\n  sink.name\nend"},{"caption":"<p>Limit the number of API calls made:</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\nlogging = gcloud.logging\nsinks = logging.sinks\n\nsinks.all(request_limit: 10) do |sink|\n  puts \"#{sink.name}: #{sink.filter} -> #{sink.destination}\"\nend"}],"params":[{"name":"request_limit","types":["Integer"],"description":"The upper limit of API requests to make\nto load all sinks. Default is no limit.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"The block for accessing each sink.","optional":true,"nullable":false},{"name":"yield.sink","types":["Sink"],"description":"The sink object.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["Enumerator"],"description":""}]}]}