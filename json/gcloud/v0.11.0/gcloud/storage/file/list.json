{"id":"gcloud/storage/file/list","name":"List","title":["Gcloud","Storage","File","List"],"description":"<p>File::List is a special case Array with additional values.</p>","source":"lib/gcloud/storage/file/list.rb#L23","resources":[],"examples":[],"methods":[{"id":"token-instance","type":"instance","name":"token","title":["Gcloud","Storage","File","List#token"],"description":"<p>If not empty, indicates that there are more files that match the\nrequest and this value should be passed to the next\n<a data-custom-type=\"gcloud/storage/bucket\" data-method=\"files-instance\">Gcloud::Storage::Bucket#files</a> to continue.</p>","source":"lib/gcloud/storage/file/list.rb#L28","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"token=-instance","type":"instance","name":"token=","title":["Gcloud","Storage","File","List#token="],"description":"<p>If not empty, indicates that there are more files that match the\nrequest and this value should be passed to the next\n<a data-custom-type=\"gcloud/storage/bucket\" data-method=\"files-instance\">Gcloud::Storage::Bucket#files</a> to continue.</p>","source":"lib/gcloud/storage/file/list.rb#L28","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"prefixes-instance","type":"instance","name":"prefixes","title":["Gcloud","Storage","File","List#prefixes"],"description":"<p>The list of prefixes of objects matching-but-not-listed up to and\nincluding the requested delimiter.</p>","source":"lib/gcloud/storage/file/list.rb#L32","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"prefixes=-instance","type":"instance","name":"prefixes=","title":["Gcloud","Storage","File","List#prefixes="],"description":"<p>The list of prefixes of objects matching-but-not-listed up to and\nincluding the requested delimiter.</p>","source":"lib/gcloud/storage/file/list.rb#L32","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"next?-instance","type":"instance","name":"next?","title":["Gcloud","Storage","File","List#next?"],"description":"<p>Whether there is a next page of files.</p>","source":"lib/gcloud/storage/file/list.rb#L57","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\nstorage = gcloud.storage\n\nbucket = storage.bucket \"my-bucket\"\nfiles = bucket.files\nif files.next?\n  next_files = files.next\nend"}],"params":[],"exceptions":[],"returns":[{"types":["Boolean"],"description":""}]},{"id":"next-instance","type":"instance","name":"next","title":["Gcloud","Storage","File","List#next"],"description":"<p>Retrieve the next page of files.</p>","source":"lib/gcloud/storage/file/list.rb#L78","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\nstorage = gcloud.storage\n\nbucket = storage.bucket \"my-bucket\"\nfiles = bucket.files\nif files.next?\n  next_files = files.next\nend"}],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"gcloud/storage/file/list\">File::List</a>"],"description":""}]},{"id":"all-instance","type":"instance","name":"all","title":["Gcloud","Storage","File","List#all"],"description":"<p>Retrieves all files by repeatedly loading <a data-custom-type=\"gcloud/storage/file/list\" data-method=\"next-instance\">#next</a> until <a data-custom-type=\"gcloud/storage/file/list\" data-method=\"next?-instance\">#next?</a>\nreturns <code>false</code>. Calls the given block once for each file, which is\npassed as the parameter.</p>\n\n<p>An Enumerator is returned if no block is given.</p>\n\n<p>This method may make several API calls until all files are retrieved.\nBe sure to use as narrow a search criteria as possible. Please use\nwith caution.</p>","source":"lib/gcloud/storage/file/list.rb#L146","resources":[],"examples":[{"caption":"<p>Iterating each file by passing a block:</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\nstorage = gcloud.storage\n\nbucket = storage.bucket \"my-bucket\"\nfiles = bucket.files\nfiles.all do |file|\n  puts file.name\nend"},{"caption":"<p>Using the enumerator by not passing a block:</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\nstorage = gcloud.storage\n\nbucket = storage.bucket \"my-bucket\"\nfiles = bucket.files\n\nall_names = files.all.map do |file|\n  file.name\nend"},{"caption":"<p>Limit the number of API calls made:</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\nstorage = gcloud.storage\n\nbucket = storage.bucket \"my-bucket\"\nfiles = bucket.files\nfiles.all(request_limit: 10) do |file|\n  puts file.name\nend"}],"params":[{"name":"request_limit","types":["Integer"],"description":"The upper limit of API requests to make\nto load all files. Default is no limit.","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"The block for accessing each file.","optional":true,"nullable":false},{"name":"yield.file","types":["File"],"description":"The file object.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["Enumerator"],"description":""}]}]}