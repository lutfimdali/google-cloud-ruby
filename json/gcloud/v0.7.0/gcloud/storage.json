{"id":"gcloud/storage","name":"Storage","title":["Gcloud","Storage"],"description":"<h1 id=\"google-cloud-storage\">Google Cloud Storage</h1>\n\n<p>Google Cloud Storage is an Internet service to store data in Google’s cloud.\nIt allows world-wide storage and retrieval of any amount of data and at any\ntime, taking advantage of Google’s own reliable and fast networking\ninfrastructure to perform data operations in a cost effective manner.</p>\n\n<p>Gcloud’s goal is to provide a API that is familiar and comfortable to\nRubyists. Authentication is handled by <a data-custom-type=\"gcloud\" data-method=\"storage-instance\">Gcloud#storage</a>. You can provide the\nproject and credential information to connect to the Storage service, or if\nyou are running on Google Compute Engine this configuration is taken care\nof for you.</p>\n\n<pre><code class=\"language-ruby\">require \"gcloud\"\n\ngcloud = Gcloud.new \"my-todo-project\",\n                    \"/path/to/keyfile.json\"\nstorage = gcloud.storage\n\nbucket = storage.bucket \"my-bucket\"\nfile = bucket.file \"path/to/my-file.ext\"\n</code></pre>\n\n<p>You can learn more about various options for connection on the\n<a href=\"https://googlecloudplatform.github.io/gcloud-ruby/#/docs/guides/authentication\">Authentication\nGuide</a>.</p>\n\n<p>To learn more about Cloud Storage, read the\n<a href=\"https://cloud.google.com/storage/docs/overview\">Google Cloud Storage Overview\n</a>.</p>\n\n<h2 id=\"retrieving-buckets\">Retrieving Buckets</h2>\n\n<p>A Bucket is the container for your data. There is no limit on the number of\nbuckets that you can create in a project. You can use buckets to organize\nand control access to your data. Each bucket has a unique name, which is how\nthey are retrieved: (See <a data-custom-type=\"gcloud/storage/project\" data-method=\"bucket-instance\">Gcloud::Storage::Project#bucket</a>)</p>\n\n<pre><code class=\"language-ruby\">require \"gcloud\"\n\ngcloud = Gcloud.new\nstorage = gcloud.storage\n\nbucket = storage.bucket \"my-todo-app\"\n</code></pre>\n\n<p>You can also retrieve all buckets on a project: (See\n<a data-custom-type=\"gcloud/storage/project\" data-method=\"buckets-instance\">Gcloud::Storage::Project#buckets</a>)</p>\n\n<pre><code class=\"language-ruby\">require \"gcloud\"\n\ngcloud = Gcloud.new\nstorage = gcloud.storage\n\nall_buckets = storage.buckets\n</code></pre>\n\n<p>If you have a significant number of buckets, you may need to paginate\nthrough them: (See <a data-custom-type=\"gcloud/storage/bucket/list\" data-method=\"token-instance\">Gcloud::Storage::Bucket::List#token</a>)</p>\n\n<pre><code class=\"language-ruby\">require \"gcloud\"\n\ngcloud = Gcloud.new\nstorage = gcloud.storage\n\nall_buckets = []\ntmp_buckets = storage.buckets\nwhile tmp_buckets.any? do\n  tmp_buckets.each do |bucket|\n    all_buckets &lt;&lt; bucket\n  end\n  # break loop if no more buckets available\n  break if tmp_buckets.token.nil?\n  # get the next group of buckets\n  tmp_buckets = storage.buckets token: tmp_buckets.token\nend\n</code></pre>\n\n<h2 id=\"creating-a-bucket\">Creating a Bucket</h2>\n\n<p>A unique name is all that is needed to create a new bucket: (See\n<a data-custom-type=\"gcloud/storage/project\" data-method=\"create_bucket-instance\">Gcloud::Storage::Project#create_bucket</a>)</p>\n\n<pre><code class=\"language-ruby\">require \"gcloud\"\n\ngcloud = Gcloud.new\nstorage = gcloud.storage\n\nbucket = storage.create_bucket \"my-todo-app-attachments\"\n</code></pre>\n\n<h2 id=\"retrieving-files\">Retrieving Files</h2>\n\n<p>A File is an individual pieces of data that you store in Google Cloud\nStorage. Files contain the data stored as well as metadata describing the\ndata. Files belong to a bucket and cannot be shared among buckets. There is\nno limit on the number of objects that you can create in a bucket.</p>\n\n<p>Files are retrieved by their name, which is the path of the file in the\nbucket: (See <a data-custom-type=\"gcloud/storage/bucket\" data-method=\"file-instance\">Gcloud::Storage::Bucket#file</a>)</p>\n\n<pre><code class=\"language-ruby\">require \"gcloud\"\n\ngcloud = Gcloud.new\nstorage = gcloud.storage\n\nbucket = storage.bucket \"my-todo-app\"\nfile = bucket.file \"avatars/heidi/400x400.png\"\n</code></pre>\n\n<p>You can also retrieve all files in a bucket: (See Bucket#files)</p>\n\n<pre><code class=\"language-ruby\">require \"gcloud\"\n\ngcloud = Gcloud.new\nstorage = gcloud.storage\n\nbucket = storage.bucket \"my-todo-app\"\nall_files = bucket.files\n</code></pre>\n\n<p>Or you can retrieve all files in a specified path:</p>\n\n<pre><code class=\"language-ruby\">require \"gcloud\"\n\ngcloud = Gcloud.new\nstorage = gcloud.storage\n\nbucket = storage.bucket \"my-todo-app\"\navatar_files = bucket.files prefix: \"avatars/\"\n</code></pre>\n\n<p>If you have a significant number of files, you may need to paginate through\nthem: (See <a data-custom-type=\"gcloud/storage/file/list\" data-method=\"token-instance\">Gcloud::Storage::File::List#token</a>)</p>\n\n<pre><code class=\"language-ruby\">require \"gcloud\"\n\ngcloud = Gcloud.new\nstorage = gcloud.storage\n\nbucket = storage.bucket \"my-todo-app\"\n\nall_files = []\ntmp_files = bucket.files\nwhile tmp_files.any? do\n  tmp_files.each do |file|\n    all_files &lt;&lt; file\n  end\n  # break loop if no more files available\n  break if tmp_files.token.nil?\n  # get the next group of files\n  tmp_files = bucket.files token: tmp_files.token\nend\n</code></pre>\n\n<h2 id=\"creating-a-file\">Creating a File</h2>\n\n<p>A new File can be uploaded by specifying the location of a file on the local\nfile system, and the name/path that the file should be stored in the bucket.\n(See <a data-custom-type=\"gcloud/storage/bucket\" data-method=\"create_file-instance\">Gcloud::Storage::Bucket#create_file</a>)</p>\n\n<pre><code class=\"language-ruby\">require \"gcloud\"\n\ngcloud = Gcloud.new\nstorage = gcloud.storage\n\nbucket = storage.bucket \"my-todo-app\"\nbucket.create_file \"/var/todo-app/avatars/heidi/400x400.png\",\n                   \"avatars/heidi/400x400.png\"\n</code></pre>\n\n<h3 id=\"a-note-about-large-uploads\">A note about large uploads</h3>\n\n<p>You may encounter a Broken pipe (Errno::EPIPE) error when attempting to\nupload large files. To avoid this problem, add the\n<a href=\"https://rubygems.org/gems/httpclient\">httpclient</a> gem to your project, and\nthe line (or lines) of configuration shown below. These lines must execute\nafter you require gcloud but before you make your first gcloud connection.\nThe first statement configures <a href=\"https://rubygems.org/gems/faraday\">Faraday</a>\nto use httpclient. The second statement, which should only be added if you\nare using a version of Faraday at or above 0.9.2, is a workaround for <a href=\"https://github.com/GoogleCloudPlatform/gcloud-ruby/issues/367\">this\ngzip issue</a>.</p>\n\n<pre><code class=\"language-ruby\">require \"gcloud\"\n\n# Use httpclient to avoid broken pipe errors with large uploads\nFaraday.default_adapter = :httpclient\n\n# Only add the following statement if using Faraday &gt;= 0.9.2\n# Override gzip middleware with no-op for httpclient\nFaraday::Response.register_middleware :gzip =&gt;\n                                        Faraday::Response::Middleware\n\ngcloud = Gcloud.new\nstorage = gcloud.storage\n</code></pre>\n\n<h2 id=\"downloading-a-file\">Downloading a File</h2>\n\n<p>Files can be downloaded to the local file system. (See\n<a data-custom-type=\"gcloud/storage/file\" data-method=\"download-instance\">Gcloud::Storage::File#download</a>)</p>\n\n<pre><code class=\"language-ruby\">require \"gcloud\"\n\ngcloud = Gcloud.new\nstorage = gcloud.storage\n\nbucket = storage.bucket \"my-todo-app\"\nfile = bucket.file \"avatars/heidi/400x400.png\"\nfile.download \"/var/todo-app/avatars/heidi/400x400.png\"\n</code></pre>\n\n<h2 id=\"using-signed-urls\">Using Signed URLs</h2>\n\n<p>Access without authentication can be granted to a File for a specified\nperiod of time. This URL uses a cryptographic signature of your credentials\nto access the file. (See <a data-custom-type=\"gcloud/storage/file\" data-method=\"signed_url-instance\">Gcloud::Storage::File#signed_url</a>)</p>\n\n<pre><code class=\"language-ruby\">require \"gcloud\"\n\ngcloud = Gcloud.new\nstorage = gcloud.storage\n\nbucket = storage.bucket \"my-todo-app\"\nfile = bucket.file \"avatars/heidi/400x400.png\"\nshared_url = file.signed_url method: \"GET\",\n                             expires: 300 # 5 minutes from now\n</code></pre>\n\n<h2 id=\"controlling-access-to-a-bucket\">Controlling Access to a Bucket</h2>\n\n<p>Access to a bucket is controlled with <a data-custom-type=\"gcloud/storage/bucket\" data-method=\"acl-instance\">Gcloud::Storage::Bucket#acl</a>. A\nbucket has owners, writers, and readers. Permissions can be granted to an\nindividual user’s email address, a group’s email address, as well as many\npredefined lists. See the <a href=\"https://cloud.google.com/storage/docs/access-control\">Access Control\nguide</a> for more.</p>\n\n<p>Access to a bucket can be granted to a user by appending <code>\"user-\"</code> to the\nemail address:</p>\n\n<pre><code class=\"language-ruby\">require \"gcloud\"\n\ngcloud = Gcloud.new\nstorage = gcloud.storage\n\nbucket = storage.bucket \"my-todo-app\"\n\nemail = \"heidi@example.net\"\nbucket.acl.add_reader \"user-#{email}\"\n</code></pre>\n\n<p>Access to a bucket can be granted to a group by appending <code>\"group-\"</code> to the\nemail address:</p>\n\n<pre><code class=\"language-ruby\">require \"gcloud\"\n\ngcloud = Gcloud.new\nstorage = gcloud.storage\n\nbucket = storage.bucket \"my-todo-app\"\n\nemail = \"authors@example.net\"\nbucket.acl.add_reader \"group-#{email}\"\n</code></pre>\n\n<p>Access to a bucket can also be granted to a predefined list of permissions:</p>\n\n<pre><code class=\"language-ruby\">require \"gcloud\"\n\ngcloud = Gcloud.new\nstorage = gcloud.storage\n\nbucket = storage.bucket \"my-todo-app\"\n\nbucket.acl.public!\n</code></pre>\n\n<h2 id=\"controlling-access-to-a-file\">Controlling Access to a File</h2>\n\n<p>Access to a file is controlled in two ways, either by the setting the\ndefault permissions to all files in a bucket with\n<a data-custom-type=\"gcloud/storage/bucket\" data-method=\"default_acl-instance\">Gcloud::Storage::Bucket#default_acl</a>, or by setting permissions to an\nindividual file with <a data-custom-type=\"gcloud/storage/file\" data-method=\"acl-instance\">Gcloud::Storage::File#acl</a>.</p>\n\n<p>Access to a file can be granted to a user by appending <code>\"user-\"</code> to the\nemail address:</p>\n\n<pre><code class=\"language-ruby\">require \"gcloud\"\n\ngcloud = Gcloud.new\nstorage = gcloud.storage\n\nbucket = storage.bucket \"my-todo-app\"\nfile = bucket.file \"avatars/heidi/400x400.png\"\n\nemail = \"heidi@example.net\"\nfile.acl.add_reader \"user-#{email}\"\n</code></pre>\n\n<p>Access to a file can be granted to a group by appending <code>\"group-\"</code> to the\nemail address:</p>\n\n<pre><code class=\"language-ruby\">require \"gcloud\"\n\ngcloud = Gcloud.new\nstorage = gcloud.storage\n\nbucket = storage.bucket \"my-todo-app\"\nfile = bucket.file \"avatars/heidi/400x400.png\"\n\nemail = \"authors@example.net\"\nfile.acl.add_reader \"group-#{email}\"\n</code></pre>\n\n<p>Access to a file can also be granted to a predefined list of permissions:</p>\n\n<pre><code class=\"language-ruby\">require \"gcloud\"\n\ngcloud = Gcloud.new\nstorage = gcloud.storage\n\nbucket = storage.bucket \"my-todo-app\"\nfile = bucket.file \"avatars/heidi/400x400.png\"\n\nfile.acl.public!\n</code></pre>","source":"lib/gcloud/storage.rb#L408","resources":[],"examples":[],"methods":[]}