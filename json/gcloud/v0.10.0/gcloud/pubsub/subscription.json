{"id":"gcloud/pubsub/subscription","name":"Subscription","title":["Gcloud","Pubsub","Subscription"],"description":"<h1 id=\"subscription\">Subscription</h1>\n\n<p>A named resource representing the stream of messages from a single,\nspecific <a data-custom-type=\"gcloud/pubsub/topic\">Topic</a>, to be delivered to the subscribing application.</p>","source":"lib/gcloud/pubsub/subscription.rb#L38","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nsub = pubsub.subscription \"my-topic-sub\"\nmsgs = sub.pull\nmsgs.each { |msg| msg.acknowledge! }"}],"methods":[{"id":"name-instance","type":"instance","name":"name","title":["Gcloud","Pubsub","Subscription#name"],"description":"<p>The name of the subscription.</p>","source":"lib/gcloud/pubsub/subscription.rb#L69","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"topic-instance","type":"instance","name":"topic","title":["Gcloud","Pubsub","Subscription#topic"],"description":"<p>The <a data-custom-type=\"gcloud/pubsub/topic\">Topic</a> from which this subscription receives messages.</p>","source":"lib/gcloud/pubsub/subscription.rb#L87","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nsub = pubsub.subscription \"my-topic-sub\"\nsub.topic.name #=> \"projects/my-project/topics/my-topic\""}],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"gcloud/pubsub/topic\">Topic</a>"],"description":""}]},{"id":"deadline-instance","type":"instance","name":"deadline","title":["Gcloud","Pubsub","Subscription#deadline"],"description":"<p>This value is the maximum number of seconds after a subscriber receives\na message before the subscriber should acknowledge the message.</p>","source":"lib/gcloud/pubsub/subscription.rb#L95","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"endpoint-instance","type":"instance","name":"endpoint","title":["Gcloud","Pubsub","Subscription#endpoint"],"description":"<p>Returns the URL locating the endpoint to which messages should be\npushed.</p>","source":"lib/gcloud/pubsub/subscription.rb#L103","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"endpoint=-instance","type":"instance","name":"endpoint=","title":["Gcloud","Pubsub","Subscription#endpoint="],"description":"<p>Sets the URL locating the endpoint to which messages should be pushed.</p>","source":"lib/gcloud/pubsub/subscription.rb#L110","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"exists?-instance","type":"instance","name":"exists?","title":["Gcloud","Pubsub","Subscription#exists?"],"description":"<p>Determines whether the subscription exists in the Pub/Sub service.</p>","source":"lib/gcloud/pubsub/subscription.rb#L133","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nsub = pubsub.subscription \"my-topic-sub\"\nsub.exists? #=> true"}],"params":[],"exceptions":[],"returns":[{"types":["Boolean"],"description":""}]},{"id":"delete-instance","type":"instance","name":"delete","title":["Gcloud","Pubsub","Subscription#delete"],"description":"<p>Deletes an existing subscription.\nAll pending messages in the subscription are immediately dropped.</p>","source":"lib/gcloud/pubsub/subscription.rb#L177","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nsub = pubsub.subscription \"my-topic-sub\"\nsub.delete"}],"params":[],"exceptions":[],"returns":[{"types":["Boolean"],"description":"Returns <code>true</code> if the subscription was deleted."}]},{"id":"pull-instance","type":"instance","name":"pull","title":["Gcloud","Pubsub","Subscription#pull"],"description":"<p>Pulls messages from the server. Returns an empty list if there are no\nmessages available in the backlog. Raises an ApiError with status\n<code>UNAVAILABLE</code> if there are too many concurrent pull requests pending\nfor the given subscription.</p>","source":"lib/gcloud/pubsub/subscription.rb#L232","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nsub = pubsub.subscription \"my-topic-sub\"\nsub.pull.each { |msg| msg.acknowledge! }"},{"caption":"<p>A maximum number of messages returned can also be specified:</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nsub = pubsub.subscription \"my-topic-sub\", max: 10\nsub.pull.each { |msg| msg.acknowledge! }"},{"caption":"<p>The call can block until messages are available:</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nsub = pubsub.subscription \"my-topic-sub\"\nmsgs = sub.pull immediate: false\nmsgs.each { |msg| msg.acknowledge! }"}],"params":[{"name":"immediate","types":["Boolean"],"description":"When <code>true</code> the system will respond\nimmediately even if it is not able to return messages. When <code>false</code>\nthe system is allowed to wait until it can return least one message.\nNo messages are returned when a request times out. The default value\nis <code>true</code>.","optional":true,"default":"true","nullable":false},{"name":"max","types":["Integer"],"description":"The maximum number of messages to return for this\nrequest. The Pub/Sub system may return fewer than the number\nspecified. The default value is <code>100</code>, the maximum value is <code>1000</code>.","optional":true,"default":"100","nullable":false},{"name":"autoack","types":["Boolean"],"description":"Automatically acknowledge the message as it is\npulled. The default value is <code>false</code>.","optional":true,"default":"false","nullable":false}],"exceptions":[],"returns":[{"types":["Array&lt;<a data-custom-type=\"gcloud/pubsub/receivedmessage\">Gcloud::Pubsub::ReceivedMessage</a>&gt;"],"description":""}]},{"id":"wait_for_messages-instance","type":"instance","name":"wait_for_messages","title":["Gcloud","Pubsub","Subscription#wait_for_messages"],"description":"<p>Pulls from the server while waiting for messages to become available.\nThis is the same as:</p>\n\n<p>subscription.pull immediate: false</p>","source":"lib/gcloud/pubsub/subscription.rb#L271","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nsub = pubsub.subscription \"my-topic-sub\"\nmsgs = sub.wait_for_messages\nmsgs.each { |msg| msg.acknowledge! }"}],"params":[{"name":"max","types":["Integer"],"description":"The maximum number of messages to return for this\nrequest. The Pub/Sub system may return fewer than the number\nspecified. The default value is <code>100</code>, the maximum value is <code>1000</code>.","optional":true,"default":"100","nullable":false},{"name":"autoack","types":["Boolean"],"description":"Automatically acknowledge the message as it is\npulled. The default value is <code>false</code>.","optional":true,"default":"false","nullable":false}],"exceptions":[],"returns":[{"types":["Array&lt;<a data-custom-type=\"gcloud/pubsub/receivedmessage\">Gcloud::Pubsub::ReceivedMessage</a>&gt;"],"description":""}]},{"id":"listen-instance","type":"instance","name":"listen","title":["Gcloud","Pubsub","Subscription#listen"],"description":"<p>Poll the backend for new messages. This runs a loop to ping the API,\nblocking indefinitely, yielding retrieved messages as they are received.</p>","source":"lib/gcloud/pubsub/subscription.rb#L323","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nsub = pubsub.subscription \"my-topic-sub\"\nsub.listen do |msg|\n  # process msg\nend"},{"caption":"<p>Limit the number of messages pulled per batch with <code>max</code>:</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nsub = pubsub.subscription \"my-topic-sub\"\nsub.listen max: 20 do |msg|\n  # process msg\nend"},{"caption":"<p>Automatically acknowledge messages with <code>autoack</code>:</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nsub = pubsub.subscription \"my-topic-sub\"\nsub.listen autoack: true do |msg|\n  # process msg\nend"}],"params":[{"name":"max","types":["Integer"],"description":"The maximum number of messages to return for this\nrequest. The Pub/Sub system may return fewer than the number\nspecified. The default value is <code>100</code>, the maximum value is <code>1000</code>.","optional":true,"default":"100","nullable":false},{"name":"autoack","types":["Boolean"],"description":"Automatically acknowledge the message as it is\npulled. The default value is <code>false</code>.","optional":true,"default":"false","nullable":false},{"name":"delay","types":["Number"],"description":"The number of seconds to pause between requests\nwhen the Google Cloud service has no messages to return. The default\nvalue is <code>1</code>.","optional":true,"default":"1","nullable":false},{"name":"yield","types":["block"],"description":"a block for processing new messages","optional":true,"nullable":false},{"name":"yield.msg","types":["ReceivedMessage"],"description":"the newly received message","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"acknowledge-instance","type":"instance","name":"acknowledge","title":["Gcloud","Pubsub","Subscription#acknowledge"],"description":"<p>Acknowledges receipt of a message. After an ack,\nthe Pub/Sub system can remove the message from the subscription.\nAcknowledging a message whose ack deadline has expired may succeed,\nalthough the message may have been sent again.\nAcknowledging a message more than once will not result in an error.\nThis is only used for messages received via pull.</p>","source":"lib/gcloud/pubsub/subscription.rb#L355","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nsub = pubsub.subscription \"my-topic-sub\"\nmessages = sub.pull\nsub.acknowledge messages"}],"params":[{"name":"messages","types":["ReceivedMessage","String"],"description":"One or more <a data-custom-type=\"gcloud/pubsub/receivedmessage\">ReceivedMessage</a>\nobjects or ack_id values.","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"delay-instance","type":"instance","name":"delay","title":["Gcloud","Pubsub","Subscription#delay"],"description":"<p>Modifies the acknowledge deadline for messages.</p>\n\n<p>This indicates that more time is needed to process the messages, or to\nmake the messages available for redelivery if the processing was\ninterrupted.</p>","source":"lib/gcloud/pubsub/subscription.rb#L391","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nsub = pubsub.subscription \"my-topic-sub\"\nmessages = sub.pull\nsub.delay 120, messages"}],"params":[{"name":"new_deadline","types":["Integer"],"description":"The new ack deadline in seconds from the\ntime this request is sent to the Pub/Sub system. Must be &gt;= 0. For\nexample, if the value is <code>10</code>, the new ack deadline will expire 10\nseconds after the call is made. Specifying <code>0</code> may immediately make\nthe message available for another pull request.","optional":false,"nullable":false},{"name":"messages","types":["ReceivedMessage","String"],"description":"One or more <a data-custom-type=\"gcloud/pubsub/receivedmessage\">ReceivedMessage</a>\nobjects or ack_id values.","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"policy-instance","type":"instance","name":"policy","title":["Gcloud","Pubsub","Subscription#policy"],"description":"<p>Gets the access control policy.</p>\n\n<p>By default, the policy values are memoized to reduce the number of API\ncalls to the Pub/Sub service.</p>","source":"lib/gcloud/pubsub/subscription.rb#L440","resources":[],"examples":[{"caption":"<p>Policy values are memoized to reduce the number of API calls:</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nsubscription = pubsub.subscription \"my-subscription\"\nputs subscription.policy[\"bindings\"]\nputs subscription.policy[\"rules\"]"},{"caption":"<p>Use <code>force</code> to retrieve the latest policy from the service:</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nsubscription = pubsub.subscription \"my-subscription\"\npolicy = subscription.policy force: true"}],"params":[{"name":"force","types":["Boolean"],"description":"Force the latest policy to be retrieved from the\nPub/Sub service when <code>true</code>. Otherwise the policy will be memoized to\nreduce the number of API calls made to the Pub/Sub service. The\ndefault is <code>false</code>.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["Hash"],"description":"Returns a hash that conforms to the following structure:</p>\n\n<p>{\n  “etag”=&gt;”CAE=”,\n  “bindings” =&gt; [{\n    “role” =&gt; “roles/viewer”,\n    “members” =&gt; [“serviceAccount:your-service-account”]\n  }]\n}"}]},{"id":"policy=-instance","type":"instance","name":"policy=","title":["Gcloud","Pubsub","Subscription#policy="],"description":"<p>Sets the access control policy.</p>","source":"lib/gcloud/pubsub/subscription.rb#L479","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nviewer_policy = {\n  \"bindings\" => [{\n    \"role\" => \"roles/viewer\",\n    \"members\" => [\"serviceAccount:your-service-account\"]\n  }]\n}\nsubscription = pubsub.subscription \"my-subscription\"\nsubscription.policy = viewer_policy"}],"params":[{"name":"new_policy","types":["String"],"description":"A hash that conforms to the following\nstructure:</p>\n\n<p>{\n    “bindings” =&gt; [{\n      “role” =&gt; “roles/viewer”,\n      “members” =&gt; [“serviceAccount:your-service-account”]\n    }]\n  }","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"test_permissions-instance","type":"instance","name":"test_permissions","title":["Gcloud","Pubsub","Subscription#test_permissions"],"description":"<p>Tests the specified permissions against the <a href=\"https://cloud.google.com/iam/\">Cloud\nIAM</a> access control policy.</p>","source":"lib/gcloud/pubsub/subscription.rb#L520","resources":[{"title":"Managing\nPolicies","link":"https://cloud.google.com/iam/docs/managing-policies"}],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\nsub = pubsub.subscription \"my-subscription\"\nperms = sub.test_permissions \"pubsub.subscriptions.get\",\n                             \"pubsub.subscriptions.consume\"\nperms.include? \"pubsub.subscriptions.get\" #=> true\nperms.include? \"pubsub.subscriptions.consume\" #=> false"}],"params":[{"name":"permissions","types":["String","Array<String>"],"description":"The set of permissions to\ncheck access for. Permissions with wildcards (such as <code>*</code> or\n<code>storage.*</code>) are not allowed.</p>\n\n<p>The permissions that can be checked on a subscription are:</p>\n\n<ul>\n  <li>pubsub.subscriptions.consume</li>\n  <li>pubsub.subscriptions.get</li>\n  <li>pubsub.subscriptions.delete</li>\n  <li>pubsub.subscriptions.update</li>\n  <li>pubsub.subscriptions.getIamPolicy</li>\n  <li>pubsub.subscriptions.setIamPolicy</li>\n</ul>","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["Array&lt;String&gt;"],"description":"The permissions that have access."}]}]}