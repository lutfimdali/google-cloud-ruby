{"id":"google/cloud/failedpreconditionerror","name":"FailedPreconditionError","title":["Google","Cloud","FailedPreconditionError"],"description":"<p>FailedPrecondition indicates operation was rejected because the\nsystem is not in a state required for the operation’s execution.\nFor example, directory to be deleted may be non-empty, an rmdir\noperation is applied to a non-directory, etc.</p>\n\n<p>A litmus test that may help a service implementor in deciding\nbetween FailedPrecondition, Aborted, and Unavailable:\n (a) Use Unavailable if the client can retry just the failing call.\n (b) Use Aborted if the client should retry at a higher-level\n     (e.g., restarting a read-modify-write sequence).\n (c) Use FailedPrecondition if the client should not retry until\n     the system state has been explicitly fixed.  E.g., if an “rmdir”\n     fails because the directory is non-empty, FailedPrecondition\n     should be returned since the client should not retry unless\n     they have first fixed up the directory by deleting files from it.\n (d) Use FailedPrecondition if the client performs conditional\n     REST Get/Update/Delete on a resource and the resource on the\n     server does not match the condition. E.g., conflicting\n     read-modify-write on the same resource.</p>","source":"lib/google/cloud/errors.rb#L148","resources":[],"examples":[],"methods":[]}