{"id":"project","metadata":{"name":"Project","description":"<h1 id=\"project\">Project</h1>\n\n<p>Represents the project that pubsub messages are pushed to and pulled from.\n{Topic} is a named resource to which messages are sent by publishers.\n{Subscription} is a named resource representing the stream of messages\nfrom a single, specific topic, to be delivered to the subscribing\napplication. {Message} is a combination of data and attributes that a\npublisher sends to a topic and is eventually delivered to subscribers.</p>\n\n<p>See {Gcloud#pubsub}</p>","source":"lib/gcloud/pubsub/project.rb#L45","resources":[],"examples":[{"caption":null,"code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\ntopic = pubsub.topic \"my-topic\"\ntopic.publish \"task completed\""}]},"methods":[{"metadata":{"name":"project","description":"<p>The Pub/Sub project connected to.</p>","source":"lib/gcloud/pubsub/project.rb#L69","resources":[],"examples":[{"caption":null,"code":"require \"gcloud\"\n\ngcloud = Gcloud.new \"my-todo-project\",\n                    \"/path/to/keyfile.json\"\npubsub = gcloud.pubsub\n\npubsub.project #=> \"my-todo-project\""}]},"params":[],"exceptions":[],"returns":[]},{"metadata":{"name":"topic","description":"<p>Retrieves topic by name.</p>\n\n<p>The topic will be created if the topic does not exist and the\n<code class=\"highlighter-rouge\">autocreate</code> option is set to true.</p>","source":"lib/gcloud/pubsub/project.rb#L139","resources":[],"examples":[{"caption":null,"code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\ntopic = pubsub.topic \"existing-topic\""},{"caption":"By default <code class=\"highlighter-rouge\">nil</code> will be returned if the topic does not exist.","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\ntopic = pubsub.topic \"non-existing-topic\" #=> nil"},{"caption":"With the <code class=\"highlighter-rouge\">autocreate</code> option set to <code class=\"highlighter-rouge\">true</code>.","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\ntopic = pubsub.topic \"non-existing-topic\", autocreate: true"},{"caption":"Create a topic in a different project with the <code class=\"highlighter-rouge\">project</code> flag.","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\ntopic = pubsub.topic \"another-topic\", project: \"another-project\""},{"caption":"Skip the lookup against the service with <code class=\"highlighter-rouge\">skip_lookup</code>:","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\ntopic = pubsub.topic \"another-topic\", skip_lookup: true"}]},"params":[{"name":"topic_name","types":["String"],"description":"Name of a topic.","optional":false,"nullable":false},{"name":"autocreate","types":["Boolean"],"description":"Flag to control whether the requested topic\nwill be created if it does not exist. Ignored if <code class=\"highlighter-rouge\">skip_lookup</code> is\n<code class=\"highlighter-rouge\">true</code>. The default value is <code class=\"highlighter-rouge\">false</code>.","optional":true,"default":"nil","nullable":true},{"name":"project","types":["String"],"description":"If the topic belongs to a project other than the\none currently connected to, the alternate project ID can be specified\nhere.","optional":true,"default":"nil","nullable":true},{"name":"skip_lookup","types":["Boolean"],"description":"Optionally create a {Topic} object without\nverifying the topic resource exists on the Pub/Sub service. Calls made\non this object will raise errors if the topic resource does not exist.\nDefault is <code class=\"highlighter-rouge\">false</code>.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["Gcloud::Pubsub::Topic","nil"],"description":"Returns <code class=\"highlighter-rouge\">nil</code> if topic does not\nexist. Will return a newly created{ Gcloud::Pubsub::Topic} if the\ntopic does not exist and <code class=\"highlighter-rouge\">autocreate</code> is set to <code class=\"highlighter-rouge\">true</code>."}]},{"metadata":{"name":"create_topic","description":"<p>Creates a new topic.</p>","source":"lib/gcloud/pubsub/project.rb#L168","resources":[],"examples":[{"caption":null,"code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\ntopic = pubsub.create_topic \"my-topic\""}]},"params":[{"name":"topic_name","types":["String"],"description":"Name of a topic.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["Gcloud::Pubsub::Topic"],"description":null}]},{"metadata":{"name":"topics","description":"<p>Retrieves a list of topics for the given project.</p>","source":"lib/gcloud/pubsub/project.rb#L219","resources":[],"examples":[{"caption":null,"code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\ntopics = pubsub.topics\ntopics.each do |topic|\n  puts topic.name\nend"},{"caption":"With pagination: (See {Topic::List#token})","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nall_topics = []\ntmp_topics = pubsub.topics\nwhile tmp_topics.any? do\n  tmp_topics.each do |topic|\n    all_topics << topic\n  end\n  # break loop if no more topics available\n  break if tmp_topics.token.nil?\n  # get the next group of topics\n  tmp_topics = pubsub.topics token: tmp_topics.token\nend"}]},"params":[{"name":"token","types":["String"],"description":"The <code class=\"highlighter-rouge\">token</code> value returned by the last call to\n<code class=\"highlighter-rouge\">topics</code>; indicates that this is a continuation of a call, and that\nthe system should return the next page of data.","optional":true,"default":"nil","nullable":true},{"name":"max","types":["Integer"],"description":"Maximum number of topics to return.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["Array<Gcloud::Pubsub::Topic>"],"description":"(See\n{Gcloud::Pubsub::Topic::List})"}]},{"metadata":{"name":"publish","description":"<p>Publishes one or more messages to the given topic. The topic will be\ncreated if the topic does previously not exist and the <code class=\"highlighter-rouge\">autocreate</code>\noption is provided.</p>\n\n<p>A note about auto-creating the topic: Any message published to a topic\nwithout a subscription will be lost.</p>","source":"lib/gcloud/pubsub/project.rb#L287","resources":[],"examples":[{"caption":null,"code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nmsg = pubsub.publish \"my-topic\", \"new-message\""},{"caption":"Additionally, a message can be published with attributes:","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nmsg = pubsub.publish \"my-topic\", \"new-message\", foo: :bar,\n                                                this: :that"},{"caption":"Multiple messages can be sent at the same time using a block:","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nmsgs = pubsub.publish \"my-topic\" do |batch|\n  batch.publish \"new-message-1\", foo: :bar\n  batch.publish \"new-message-2\", foo: :baz\n  batch.publish \"new-message-3\", foo: :bif\nend"},{"caption":"With <code class=\"highlighter-rouge\">autocreate</code>:","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nmsg = pubsub.publish \"new-topic\", \"new-message\", autocreate: true"}]},"params":[{"name":"topic_name","types":["String"],"description":"Name of a topic.","optional":false,"nullable":false},{"name":"data","types":["String"],"description":"The message data.","optional":true,"default":"nil","nullable":true},{"name":"attributes","types":["Hash"],"description":"Optional attributes for the message.","optional":true,"default":"{}","nullable":false},{"name":"attributes.autocreate","types":["Boolean"],"description":"Flag to control whether the\nprovided topic will be created if it does not exist.","optional":true,"nullable":false},{"name":"yield","types":["block"],"description":null,"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Message","Array<Message>"],"description":"Returns the published message when\ncalled without a block, or an array of messages when called with a\nblock."}]},{"metadata":{"name":"subscribe","description":"<p>Creates a new {Subscription} object for the provided topic. The topic\nwill be created if the topic does previously not exist and the\n<code class=\"highlighter-rouge\">autocreate</code> option is provided.</p>","source":"lib/gcloud/pubsub/project.rb#L359","resources":[],"examples":[{"caption":null,"code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nsub = pubsub.subscribe \"my-topic\", \"my-topic-sub\"\nputs sub.name # => \"my-topic-sub\""},{"caption":"The name is optional, and will be generated if not given.","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nsub = pubsub.subscribe \"my-topic\"\nputs sub.name # => \"generated-sub-name\""},{"caption":"Wait 2 minutes for acknowledgement and push all to an endpoint:","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nsub = pubsub.subscribe \"my-topic\", \"my-topic-sub\",\n                       deadline: 120,\n                       endpoint: \"https://example.com/push\""},{"caption":"With <code class=\"highlighter-rouge\">autocreate</code>:","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nsub = pubsub.subscribe \"new-topic\", \"new-topic-sub\", autocreate: true"}]},"params":[{"name":"topic_name","types":["String"],"description":"Name of a topic.","optional":false,"nullable":false},{"name":"subscription_name","types":["String"],"description":"Name of the new subscription. Must\nstart with a letter, and contain only letters ([A-Za-z]), numbers\n([0-9], dashes (-), underscores (_), periods (.), tildes (~), plus (+)\nor percent signs (%). It must be between 3 and 255 characters in\nlength, and it must not start with “goog”.","optional":false,"nullable":false},{"name":"deadline","types":["Integer"],"description":"The maximum number of seconds after a\nsubscriber receives a message before the subscriber should acknowledge\nthe message.","optional":true,"default":"nil","nullable":true},{"name":"endpoint","types":["String"],"description":"A URL locating the endpoint to which messages\nshould be pushed.","optional":true,"default":"nil","nullable":true},{"name":"autocreate","types":["String"],"description":"Flag to control whether the topic will be\ncreated if it does not exist.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["Gcloud::Pubsub::Subscription"],"description":null}]},{"metadata":{"name":"subscription","description":"<p>Retrieves subscription by name.</p>","source":"lib/gcloud/pubsub/project.rb#L411","resources":[],"examples":[{"caption":null,"code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nsubscription = pubsub.subscription \"my-sub\"\nputs subscription.name"},{"caption":"Skip the lookup against the service with <code class=\"highlighter-rouge\">skip_lookup</code>:","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\n# No API call is made to retrieve the subscription information.\nsubscription = pubsub.subscription \"my-sub\", skip_lookup: true\nputs subscription.name"}]},"params":[{"name":"subscription_name","types":["String"],"description":"Name of a subscription.","optional":false,"nullable":false},{"name":"project","types":["String"],"description":"If the subscription belongs to a project other\nthan the one currently connected to, the alternate project ID can be\nspecified here.","optional":true,"default":"nil","nullable":true},{"name":"skip_lookup","types":["Boolean"],"description":"Optionally create a {Subscription} object\nwithout verifying the subscription resource exists on the Pub/Sub\nservice. Calls made on this object will raise errors if the service\nresource does not exist. Default is <code class=\"highlighter-rouge\">false</code>.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["Gcloud::Pubsub::Subscription","nil"],"description":"Returns <code class=\"highlighter-rouge\">nil</code> if the\nsubscription does not exist"}]},{"metadata":{"name":"subscriptions","description":"<p>Retrieves a list of subscriptions for the given project.</p>","source":"lib/gcloud/pubsub/project.rb#L467","resources":[],"examples":[{"caption":null,"code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nsubscriptions = pubsub.subscriptions\nsubscriptions.each do |subscription|\n  puts subscription.name\nend"},{"caption":"With pagination: (See {Subscription::List#token})","code":"\nrequire \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nall_subs = []\ntmp_subs = pubsub.subscriptions\nwhile tmp_subs.any? do\n  tmp_subs.each do |subscription|\n    all_subs << subscription\n  end\n  # break loop if no more subscriptions available\n  break if tmp_subs.token.nil?\n  # get the next group of subscriptions\n  tmp_subs = pubsub.subscriptions token: tmp_subs.token\nend"}]},"params":[{"name":"prefix","types":["String"],"description":"Filter results to subscriptions whose names begin\nwith this prefix.","optional":true,"default":"nil","nullable":true},{"name":"token","types":["String"],"description":"A previously-returned page token representing part\nof the larger set of results to view.","optional":true,"default":"nil","nullable":true},{"name":"max","types":["Integer"],"description":"Maximum number of subscriptions to return.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["Array<Gcloud::Pubsub::Subscription>"],"description":"(See\n{Gcloud::Pubsub::Subscription::List})"}]},{"metadata":{"name":"ensure_connection!","description":"<p>Raise an error unless an active connection is available.</p>","source":"lib/gcloud/pubsub/project.rb#L484","resources":[],"examples":[]},"params":[],"exceptions":[],"returns":[]},{"metadata":{"name":"publish_batch_messages","description":"<p>Call the publish API with arrays of data data and attrs.</p>","source":"lib/gcloud/pubsub/project.rb#L490","resources":[],"examples":[]},"params":[],"exceptions":[],"returns":[]}]}