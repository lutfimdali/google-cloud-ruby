{"id":"subscription","metadata":{"name":"Subscription","description":"<h1 id=\"subscription\">Subscription</h1>\n\n<p>A named resource representing the stream of messages from a single,\nspecific {Topic}, to be delivered to the subscribing application.</p>","source":"lib/gcloud/pubsub/subscription.rb#L38","resources":[],"examples":[{"caption":null,"code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nsub = pubsub.subscription \"my-topic-sub\"\nmsgs = sub.pull\nmsgs.each { |msg| msg.acknowledge! }"}]},"methods":[{"metadata":{"name":"name","description":"<p>The name of the subscription.</p>","source":"lib/gcloud/pubsub/subscription.rb#L71","resources":[],"examples":[]},"params":[],"exceptions":[],"returns":[]},{"metadata":{"name":"topic","description":"<p>The {Topic} from which this subscription receives messages.</p>","source":"lib/gcloud/pubsub/subscription.rb#L89","resources":[],"examples":[{"caption":null,"code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nsub = pubsub.subscription \"my-topic-sub\"\nsub.topic.name #=> \"projects/my-project/topics/my-topic\""}]},"params":[],"exceptions":[],"returns":[{"types":["Topic"],"description":null}]},{"metadata":{"name":"deadline","description":"<p>This value is the maximum number of seconds after a subscriber receives\na message before the subscriber should acknowledge the message.</p>","source":"lib/gcloud/pubsub/subscription.rb#L97","resources":[],"examples":[]},"params":[],"exceptions":[],"returns":[]},{"metadata":{"name":"endpoint","description":"<p>Returns the URL locating the endpoint to which messages should be\npushed.</p>","source":"lib/gcloud/pubsub/subscription.rb#L105","resources":[],"examples":[]},"params":[],"exceptions":[],"returns":[]},{"metadata":{"name":"endpoint=","description":"<p>Sets the URL locating the endpoint to which messages should be pushed.</p>","source":"lib/gcloud/pubsub/subscription.rb#L112","resources":[],"examples":[]},"params":[],"exceptions":[],"returns":[]},{"metadata":{"name":"exists?","description":"<p>Determines whether the subscription exists in the Pub/Sub service.</p>","source":"lib/gcloud/pubsub/subscription.rb#L134","resources":[],"examples":[{"caption":null,"code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nsub = pubsub.subscription \"my-topic-sub\"\nsub.exists? #=> true"}]},"params":[],"exceptions":[],"returns":[{"types":["Boolean"],"description":null}]},{"metadata":{"name":"delete","description":"<p>Deletes an existing subscription.\nAll pending messages in the subscription are immediately dropped.</p>","source":"lib/gcloud/pubsub/subscription.rb#L178","resources":[],"examples":[{"caption":null,"code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nsub = pubsub.subscription \"my-topic-sub\"\nsub.delete"}]},"params":[],"exceptions":[],"returns":[{"types":["Boolean"],"description":"Returns <code class=\"highlighter-rouge\">true</code> if the subscription was deleted."}]},{"metadata":{"name":"pull","description":"<p>Pulls messages from the server. Returns an empty list if there are no\nmessages available in the backlog. Raises an ApiError with status\n<code class=\"highlighter-rouge\">UNAVAILABLE</code> if there are too many concurrent pull requests pending\nfor the given subscription.</p>","source":"lib/gcloud/pubsub/subscription.rb#L235","resources":[],"examples":[{"caption":null,"code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nsub = pubsub.subscription \"my-topic-sub\"\nsub.pull.each { |msg| msg.acknowledge! }"},{"caption":"A maximum number of messages returned can also be specified:","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nsub = pubsub.subscription \"my-topic-sub\", max: 10\nsub.pull.each { |msg| msg.acknowledge! }"},{"caption":"The call can block until messages are available:","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nsub = pubsub.subscription \"my-topic-sub\"\nmsgs = sub.pull immediate: false\nmsgs.each { |msg| msg.acknowledge! }"}]},"params":[{"name":"immediate","types":["Boolean"],"description":"When <code class=\"highlighter-rouge\">true</code> the system will respond\nimmediately even if it is not able to return messages. When <code class=\"highlighter-rouge\">false</code>\nthe system is allowed to wait until it can return least one message.\nNo messages are returned when a request times out. The default value\nis <code class=\"highlighter-rouge\">true</code>.","optional":true,"default":"true","nullable":false},{"name":"max","types":["Integer"],"description":"The maximum number of messages to return for this\nrequest. The Pub/Sub system may return fewer than the number\nspecified. The default value is <code class=\"highlighter-rouge\">100</code>, the maximum value is <code class=\"highlighter-rouge\">1000</code>.","optional":true,"default":"100","nullable":false},{"name":"autoack","types":["Boolean"],"description":"Automatically acknowledge the message as it is\npulled. The default value is <code class=\"highlighter-rouge\">false</code>.","optional":true,"default":"false","nullable":false}],"exceptions":[],"returns":[{"types":["Array<Gcloud::Pubsub::ReceivedMessage>"],"description":null}]},{"metadata":{"name":"wait_for_messages","description":"<p>Pulls from the server while waiting for messages to become available.\nThis is the same as:</p>\n\n<p>subscription.pull immediate: false</p>","source":"lib/gcloud/pubsub/subscription.rb#L276","resources":[],"examples":[{"caption":null,"code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nsub = pubsub.subscription \"my-topic-sub\"\nmsgs = sub.wait_for_messages\nmsgs.each { |msg| msg.acknowledge! }"}]},"params":[{"name":"max","types":["Integer"],"description":"The maximum number of messages to return for this\nrequest. The Pub/Sub system may return fewer than the number\nspecified. The default value is <code class=\"highlighter-rouge\">100</code>, the maximum value is <code class=\"highlighter-rouge\">1000</code>.","optional":true,"default":"100","nullable":false},{"name":"autoack","types":["Boolean"],"description":"Automatically acknowledge the message as it is\npulled. The default value is <code class=\"highlighter-rouge\">false</code>.","optional":true,"default":"false","nullable":false}],"exceptions":[],"returns":[{"types":["Array<Gcloud::Pubsub::ReceivedMessage>"],"description":null}]},{"metadata":{"name":"listen","description":"<p>Poll the backend for new messages. This runs a loop to ping the API,\nblocking indefinitely, yielding retrieved messages as they are received.</p>","source":"lib/gcloud/pubsub/subscription.rb#L326","resources":[],"examples":[{"caption":null,"code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nsub = pubsub.subscription \"my-topic-sub\"\nsub.listen do |msg|\n  # process msg\nend"},{"caption":"Limit the number of messages pulled per batch with <code class=\"highlighter-rouge\">max</code>:","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nsub = pubsub.subscription \"my-topic-sub\"\nsub.listen max: 20 do |msg|\n  # process msg\nend"},{"caption":"Automatically acknowledge messages with <code class=\"highlighter-rouge\">autoack</code>:","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nsub = pubsub.subscription \"my-topic-sub\"\nsub.listen autoack: true do |msg|\n  # process msg\nend"}]},"params":[{"name":"max","types":["Integer"],"description":"The maximum number of messages to return for this\nrequest. The Pub/Sub system may return fewer than the number\nspecified. The default value is <code class=\"highlighter-rouge\">100</code>, the maximum value is <code class=\"highlighter-rouge\">1000</code>.","optional":true,"default":"100","nullable":false},{"name":"autoack","types":["Boolean"],"description":"Automatically acknowledge the message as it is\npulled. The default value is <code class=\"highlighter-rouge\">false</code>.","optional":true,"default":"false","nullable":false},{"name":"delay","types":["Number"],"description":"The number of seconds to pause between requests\nwhen the Google Cloud service has no messages to return. The default\nvalue is <code class=\"highlighter-rouge\">1</code>.","optional":true,"default":"1","nullable":false}],"exceptions":[],"returns":[]},{"metadata":{"name":"acknowledge","description":"<p>Acknowledges receipt of a message. After an ack,\nthe Pub/Sub system can remove the message from the subscription.\nAcknowledging a message whose ack deadline has expired may succeed,\nalthough the message may have been sent again.\nAcknowledging a message more than once will not result in an error.\nThis is only used for messages received via pull.</p>","source":"lib/gcloud/pubsub/subscription.rb#L358","resources":[],"examples":[{"caption":null,"code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nsub = pubsub.subscription \"my-topic-sub\"\nmessages = sub.pull\nsub.acknowledge messages"}]},"params":[{"name":"*messages","types":["ReceivedMessage","String"],"description":"One or more {ReceivedMessage}\nobjects or ack_id values.","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"metadata":{"name":"delay","description":"<p>Modifies the acknowledge deadline for messages.</p>\n\n<p>This indicates that more time is needed to process the messages, or to\nmake the messages available for redelivery if the processing was\ninterrupted.</p>","source":"lib/gcloud/pubsub/subscription.rb#L395","resources":[],"examples":[{"caption":null,"code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nsub = pubsub.subscription \"my-topic-sub\"\nmessages = sub.pull\nsub.delay 120, messages"}]},"params":[{"name":"new_deadline","types":["Integer"],"description":"The new ack deadline in seconds from the\ntime this request is sent to the Pub/Sub system. Must be &gt;= 0. For\nexample, if the value is <code class=\"highlighter-rouge\">10</code>, the new ack deadline will expire 10\nseconds after the call is made. Specifying <code class=\"highlighter-rouge\">0</code> may immediately make\nthe message available for another pull request.","optional":false,"nullable":false},{"name":"*messages","types":["ReceivedMessage","String"],"description":"One or more {ReceivedMessage}\nobjects or ack_id values.","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"metadata":{"name":"policy","description":"<p>Gets the access control policy.</p>\n\n<p>By default, the policy values are memoized to reduce the number of API\ncalls to the Pub/Sub service.</p>","source":"lib/gcloud/pubsub/subscription.rb#L446","resources":[],"examples":[{"caption":"Policy values are memoized to reduce the number of API calls:","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nsubscription = pubsub.subscription \"my-subscription\"\nputs subscription.policy[\"bindings\"]\nputs subscription.policy[\"rules\"]"},{"caption":"Use <code class=\"highlighter-rouge\">force</code> to retrieve the latest policy from the service:","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nsubscription = pubsub.subscription \"my-subscription\"\npolicy = subscription.policy force: true"}]},"params":[{"name":"force","types":["Boolean"],"description":"Force the latest policy to be retrieved from the\nPub/Sub service when <code class=\"highlighter-rouge\">true</code>. Otherwise the policy will be memoized to\nreduce the number of API calls made to the Pub/Sub service. The\ndefault is <code class=\"highlighter-rouge\">false</code>.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["Hash"],"description":"Returns a hash that conforms to the following structure:</p>\n\n<p>{\n  “etag”=&gt;”CAE=”,\n  “bindings” =&gt; [{\n    “role” =&gt; “roles/viewer”,\n    “members” =&gt; [“serviceAccount:your-service-account”]\n  }]\n}"}]},{"metadata":{"name":"policy=","description":"<p>Sets the access control policy.</p>","source":"lib/gcloud/pubsub/subscription.rb#L485","resources":[],"examples":[{"caption":null,"code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nviewer_policy = {\n  \"bindings\" => [{\n    \"role\" => \"roles/viewer\",\n    \"members\" => [\"serviceAccount:your-service-account\"]\n  }]\n}\nsubscription = pubsub.subscription \"my-subscription\"\nsubscription.policy = viewer_policy"}]},"params":[{"name":"new_policy","types":["String"],"description":"A hash that conforms to the following\nstructure:</p>\n\n<p>{\n    “bindings” =&gt; [{\n      “role” =&gt; “roles/viewer”,\n      “members” =&gt; [“serviceAccount:your-service-account”]\n    }]\n  }","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"metadata":{"name":"test_permissions","description":"<p>Tests the specified permissions against the <a href=\"https://cloud.google.com/iam/\">Cloud\nIAM</a> access control policy.</p>","source":"lib/gcloud/pubsub/subscription.rb#L520","resources":[{"title":"Managing\nPolicies","link":"https://cloud.google.com/iam/docs/managing-policies"}],"examples":[{"caption":null,"code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\nsub = pubsub.subscription \"my-subscription\"\nperms = sub.test_permissions \"projects.subscriptions.list\",\n                             \"projects.subscriptions.pull\"\nperms.include? \"projects.subscriptions.list\" #=> true\nperms.include? \"projects.subscriptions.pull\" #=> false"}]},"params":[{"name":"*permissions","types":["String","Array<String>"],"description":"The set of permissions to\ncheck access for. Permissions with wildcards (such as <code class=\"highlighter-rouge\">*</code> or\n<code class=\"highlighter-rouge\">storage.*</code>) are not allowed.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["Array<String>"],"description":"The permissions that have access."}]},{"metadata":{"name":"ensure_connection!","description":"<p>Raise an error unless an active connection is available.</p>","source":"lib/gcloud/pubsub/subscription.rb#L544","resources":[],"examples":[]},"params":[],"exceptions":[],"returns":[]},{"metadata":{"name":"ensure_gapi!","description":"<p>Ensures a Google API object exists.</p>","source":"lib/gcloud/pubsub/subscription.rb#L550","resources":[],"examples":[]},"params":[],"exceptions":[],"returns":[]},{"metadata":{"name":"coerce_ack_ids","description":"<p>Makes sure the values are the <code class=\"highlighter-rouge\">ack_id</code>.\nIf given several {ReceivedMessage} objects extract the <code class=\"highlighter-rouge\">ack_id</code> values.</p>","source":"lib/gcloud/pubsub/subscription.rb#L564","resources":[],"examples":[]},"params":[],"exceptions":[],"returns":[]}]}