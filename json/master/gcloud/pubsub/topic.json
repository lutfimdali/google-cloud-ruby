{"id":"gcloud/pubsub/topic","name":"Topic","title":["Gcloud","Pubsub","Topic"],"description":"<h1 id=\"topic\">Topic</h1>\n\n<p>A named resource to which messages are published.</p>","source":"lib/gcloud/pubsub/topic.rb#L37","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\ntopic = pubsub.topic \"my-topic\"\ntopic.publish \"task completed\""}],"methods":[{"id":"gcloud/pubsub/topic#name","name":"name","title":["Gcloud","Pubsub","Topic#name"],"description":"<p>The name of the topic in the form of\n“/projects/project-identifier/topics/topic-name”.</p>","source":"lib/gcloud/pubsub/topic.rb#L70","type":"instance","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"gcloud/pubsub/topic#delete","name":"delete","title":["Gcloud","Pubsub","Topic#delete"],"description":"<p>Permanently deletes the topic.</p>","source":"lib/gcloud/pubsub/topic.rb#L88","type":"instance","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\ntopic = pubsub.topic \"my-topic\"\ntopic.delete"}],"params":[],"exceptions":[],"returns":[{"types":["Boolean"],"description":"Returns <code class=\"highlighter-rouge\">true</code> if the topic was deleted."}]},{"id":"gcloud/pubsub/topic#subscribe","name":"subscribe","title":["Gcloud","Pubsub","Topic#subscribe"],"description":"<p>Creates a new <a data-custom-type=\"gcloud/pubsub/subscription\">Subscription</a> object on the current Topic.</p>","source":"lib/gcloud/pubsub/topic.rb#L145","type":"instance","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\ntopic = pubsub.topic \"my-topic\"\nsub = topic.subscribe \"my-topic-sub\"\nputs sub.name # => \"my-topic-sub\""},{"caption":"<p>The name is optional, and will be generated if not given:</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\ntopic = pubsub.topic \"my-topic\"\nsub = topic.subscribe \"my-topic-sub\"\nputs sub.name # => \"generated-sub-name\""},{"caption":"<p>Wait 2 minutes for acknowledgement and push all to an endpoint:</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\ntopic = pubsub.topic \"my-topic\"\nsub = topic.subscribe \"my-topic-sub\",\n                      deadline: 120,\n                      endpoint: \"https://example.com/push\""}],"params":[{"name":"subscription_name","types":["String"],"description":"Name of the new subscription. Must\nstart with a letter, and contain only letters ([A-Za-z]), numbers\n([0-9], dashes (-), underscores (_), periods (.), tildes (~), plus (+)\nor percent signs (%). It must be between 3 and 255 characters in\nlength, and it must not start with “goog”.","optional":false,"nullable":false},{"name":"deadline","types":["Integer"],"description":"The maximum number of seconds after a\nsubscriber receives a message before the subscriber should acknowledge\nthe message.","optional":true,"default":"nil","nullable":true},{"name":"endpoint","types":["String"],"description":"A URL locating the endpoint to which messages\nshould be pushed.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"gcloud/pubsub/subscription\">Gcloud::Pubsub::Subscription</a>"],"description":null}]},{"id":"gcloud/pubsub/topic#subscription","name":"subscription","title":["Gcloud","Pubsub","Topic#subscription"],"description":"<p>Retrieves subscription by name.</p>","source":"lib/gcloud/pubsub/topic.rb#L190","type":"instance","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\ntopic = pubsub.topic \"my-topic\"\nsubscription = topic.subscription \"my-topic-subscription\"\nputs subscription.name"},{"caption":"<p>Skip the lookup against the service with <code class=\"highlighter-rouge\">skip_lookup</code>:</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\n# No API call is made to retrieve the subscription information.\nsubscription = pubsub.subscription \"my-sub\", skip_lookup: true\nputs subscription.name"}],"params":[{"name":"subscription_name","types":["String"],"description":"Name of a subscription.","optional":false,"nullable":false},{"name":"skip_lookup","types":["Boolean"],"description":"Optionally create a <a data-custom-type=\"gcloud/pubsub/subscription\">Subscription</a> object\nwithout verifying the subscription resource exists on the Pub/Sub\nservice. Calls made on this object will raise errors if the service\nresource does not exist. Default is <code class=\"highlighter-rouge\">false</code>.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"gcloud/pubsub/subscription\">Gcloud::Pubsub::Subscription</a>","nil"],"description":"Returns <code class=\"highlighter-rouge\">nil</code> if\nthe subscription does not exist."}]},{"id":"gcloud/pubsub/topic#subscriptions","name":"subscriptions","title":["Gcloud","Pubsub","Topic#subscriptions"],"description":"<p>Retrieves a list of subscription names for the given project.</p>","source":"lib/gcloud/pubsub/topic.rb#L244","type":"instance","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\ntopic = pubsub.topic \"my-topic\"\nsubscription = topic.subscriptions\nsubscriptions.each do |subscription|\n  puts subscription.name\nend"},{"caption":"<p>With pagination: (See <a data-custom-type=\"gcloud/pubsub/subscription/list#token\">Subscription::List#token</a>)</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\ntopic = pubsub.topic \"my-topic\"\nall_subs = []\ntmp_subs = topic.subscriptions\nwhile tmp_subs.any? do\n  tmp_subs.each do |subscription|\n    all_subs << subscription\n  end\n  # break loop if no more subscriptions available\n  break if tmp_subs.token.nil?\n  # get the next group of subscriptions\n  tmp_subs = topic.subscriptions token: tmp_subs.token\nend"}],"params":[{"name":"token","types":["String"],"description":"The <code class=\"highlighter-rouge\">token</code> value returned by the last call to\n<code class=\"highlighter-rouge\">subscriptions</code>; indicates that this is a continuation of a call, and\nthat the system should return the next page of data.","optional":true,"default":"nil","nullable":true},{"name":"max","types":["Integer"],"description":"Maximum number of subscriptions to return.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["Array&lt;<a data-custom-type=\"gcloud/pubsub/subscription\">Subscription</a>&gt;"],"description":"(See <a data-custom-type=\"gcloud/pubsub/subscription/list\">Subscription::List</a>)"}]},{"id":"gcloud/pubsub/topic#publish","name":"publish","title":["Gcloud","Pubsub","Topic#publish"],"description":"<p>Publishes one or more messages to the topic.</p>","source":"lib/gcloud/pubsub/topic.rb#L302","type":"instance","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\ntopic = pubsub.topic \"my-topic\"\nmsg = topic.publish \"new-message\""},{"caption":"<p>Additionally, a message can be published with attributes:</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\ntopic = pubsub.topic \"my-topic\"\nmsg = topic.publish \"new-message\",\n                    foo: :bar,\n                    this: :that"},{"caption":"<p>Multiple messages can be sent at the same time using a block:</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\ntopic = pubsub.topic \"my-topic\"\nmsgs = topic.publish do |batch|\n  batch.publish \"new-message-1\", foo: :bar\n  batch.publish \"new-message-2\", foo: :baz\n  batch.publish \"new-message-3\", foo: :bif\nend"}],"params":[{"name":"data","types":["String"],"description":"The message data.","optional":true,"default":"nil","nullable":true},{"name":"attributes","types":["Hash"],"description":"Optional attributes for the message.","optional":true,"default":"{}","nullable":false},{"name":"yield","types":["block"],"description":"a block for publishing multiple messages in one request","optional":true,"nullable":false},{"name":"yield.batch","types":["Topic::Batch"],"description":"the batch object","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"gcloud/pubsub/message\">Message</a>","Array&lt;<a data-custom-type=\"gcloud/pubsub/message\">Message</a>&gt;"],"description":"Returns the published message when\ncalled without a block, or an array of messages when called with a\nblock."}]},{"id":"gcloud/pubsub/topic#policy","name":"policy","title":["Gcloud","Pubsub","Topic#policy"],"description":"<p>Gets the access control policy.</p>","source":"lib/gcloud/pubsub/topic.rb#L347","type":"instance","resources":[],"examples":[{"caption":"<p>Policy values are memoized to reduce the number of API calls:</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\ntopic = pubsub.topic \"my-topic\"\nputs topic.policy[\"bindings\"]\nputs topic.policy[\"rules\"]"},{"caption":"<p>Use <code class=\"highlighter-rouge\">force</code> to retrieve the latest policy from the service:</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\ntopic = pubsub.topic \"my-topic\"\npolicy = topic.policy force: true"}],"params":[{"name":"force","types":["Boolean"],"description":"Force the latest policy to be retrieved from the\nPub/Sub service when <code class=\"highlighter-rouge\">true</code>. Otherwise the policy will be memoized to\nreduce the number of API calls made to the Pub/Sub service. The\ndefault is <code class=\"highlighter-rouge\">false</code>.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["Hash"],"description":"Returns a hash that conforms to the following structure:</p>\n\n<p>{\n  “etag”=&gt;”CAE=”,\n  “bindings” =&gt; [{\n    “role” =&gt; “roles/viewer”,\n    “members” =&gt; [“serviceAccount:your-service-account”]\n  }]\n}"}]},{"id":"gcloud/pubsub/topic#policy=","name":"policy=","title":["Gcloud","Pubsub","Topic#policy="],"description":"<p>Sets the access control policy.</p>","source":"lib/gcloud/pubsub/topic.rb#L387","type":"instance","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\nviewer_policy = {\n  \"bindings\" => [{\n    \"role\" => \"roles/viewer\",\n    \"members\" => [\"serviceAccount:your-service-account\"]\n  }]\n}\ntopic = pubsub.topic \"my-topic\"\ntopic.policy = viewer_policy"}],"params":[{"name":"new_policy","types":["String"],"description":"A hash that conforms to the following\nstructure:</p>\n\n<p>{\n    “bindings” =&gt; [{\n      “role” =&gt; “roles/viewer”,\n      “members” =&gt; [“serviceAccount:your-service-account”]\n    }]\n  }","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"gcloud/pubsub/topic#test_permissions","name":"test_permissions","title":["Gcloud","Pubsub","Topic#test_permissions"],"description":"<p>Tests the specified permissions against the <a href=\"https://cloud.google.com/iam/\">Cloud\nIAM</a> access control policy.</p>","source":"lib/gcloud/pubsub/topic.rb#L432","type":"instance","resources":[{"title":"Managing\nPolicies","link":"https://cloud.google.com/iam/docs/managing-policies"}],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\ntopic = pubsub.topic \"my-topic\"\nperms = topic.test_permissions \"pubsub.topics.get\",\n                               \"pubsub.topics.publish\"\nperms.include? \"pubsub.topics.get\" #=> true\nperms.include? \"pubsub.topics.publish\" #=> false"}],"params":[{"name":"permissions","types":["String","Array<String>"],"description":null,"optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["Array&lt;Strings&gt;"],"description":"The permissions that have access."}]},{"id":"gcloud/pubsub/topic#exists?","name":"exists?","title":["Gcloud","Pubsub","Topic#exists?"],"description":"<p>Determines whether the topic exists in the Pub/Sub service.</p>","source":"lib/gcloud/pubsub/topic.rb#L455","type":"instance","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\npubsub = gcloud.pubsub\n\ntopic = pubsub.topic \"my-topic\"\ntopic.exists? #=> true"}],"params":[],"exceptions":[],"returns":[{"types":["Boolean"],"description":null}]}]}