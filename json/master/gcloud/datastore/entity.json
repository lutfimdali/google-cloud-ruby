{"id":"gcloud/datastore/entity","name":"Entity","title":["Gcloud","Datastore","Entity"],"description":"<h1 id=\"entity\">Entity</h1>\n\n<p>Entity represents a Datastore record.\nEvery Entity has a <a data-custom-type=\"gcloud/datastore/key\">Key</a>, and a list of properties.</p>","source":"lib/gcloud/datastore/entity.rb#L33","resources":[],"examples":[{"caption":"","code":"entity = Gcloud::Datastore::Entity.new\nentity.key = Gcloud::Datastore::Key.new \"User\", \"heidi@example.com\"\nentity[\"name\"] = \"Heidi Henderson\""}],"methods":[{"id":"gcloud/datastore/entity#key","name":"key","title":["Gcloud","Datastore","Entity#key"],"description":"<p>The Key that identifies the entity.</p>","source":"lib/gcloud/datastore/entity.rb#L36","type":"instance","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"gcloud/datastore/entity#initialize","name":"initialize","title":["Gcloud","Datastore","Entity#initialize"],"description":"<p>Create a new Entity object.</p>","source":"lib/gcloud/datastore/entity.rb#L40","type":"constructor","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"gcloud/datastore/entity\">Entity</a>"],"description":"a new instance of Entity"}]},{"id":"gcloud/datastore/entity#[]","name":"[]","title":["Gcloud","Datastore","Entity#[]"],"description":"<p>Retrieve a property value by providing the name.</p>","source":"lib/gcloud/datastore/entity.rb#L69","type":"instance","resources":[],"examples":[{"caption":"<p>Properties can be retrieved with a string name:</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\ndataset = gcloud.datastore\nuser = dataset.find \"User\", \"heidi@example.com\"\nuser[\"name\"] #=> \"Heidi Henderson\""},{"caption":"<p>Or with a symbol name:</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\ndataset = gcloud.datastore\nuser = dataset.find \"User\", \"heidi@example.com\"\nuser[:name] #=> \"Heidi Henderson\""}],"params":[{"name":"prop_name","types":["String","Symbol"],"description":"The name of the property.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["Object","nil"],"description":"Returns <code class=\"highlighter-rouge\">nil</code> if the property doesn’t exist"}]},{"id":"gcloud/datastore/entity#[]=","name":"[]=","title":["Gcloud","Datastore","Entity#[]="],"description":"<p>Set a property value by name.</p>","source":"lib/gcloud/datastore/entity.rb#L95","type":"instance","resources":[],"examples":[{"caption":"<p>Properties can be set with a string name:</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\ndataset = gcloud.datastore\nuser = dataset.find \"User\", \"heidi@example.com\"\nuser[\"name\"] = \"Heidi H. Henderson\""},{"caption":"<p>Or with a symbol name:</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\ndataset = gcloud.datastore\nuser = dataset.find \"User\", \"heidi@example.com\"\nuser[:name] = \"Heidi H. Henderson\""}],"params":[{"name":"prop_name","types":["String","Symbol"],"description":"The name of the property.","optional":false,"nullable":false},{"name":"prop_value","types":["Object"],"description":"The value of the property.","optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"gcloud/datastore/entity#properties","name":"properties","title":["Gcloud","Datastore","Entity#properties"],"description":"<p>Retrieve properties in a hash-like structure.\nProperties can be accessed or set by string or symbol.</p>","source":"lib/gcloud/datastore/entity.rb#L125","type":"instance","resources":[],"examples":[{"caption":"","code":"entity.properties[:name] = \"Heidi H. Henderson\"\nentity.properties[\"name\"] #=> \"Heidi H. Henderson\"\n\nentity.properties.each do |name, value|\n  puts \"property #{name} has a value of #{value}\"\nend"},{"caption":"<p>A property’s existence can be determined by calling <code class=\"highlighter-rouge\">exist?</code>:</p>","code":"entity.properties.exist? :name #=> true\nentity.properties.exist? \"name\" #=> true\nentity.properties.exist? :expiration #=> false"},{"caption":"<p>A property can be removed from the entity:</p>","code":"entity.properties.delete :name\nentity.save"},{"caption":"<p>The properties can be converted to a hash:</p>","code":"prop_hash = entity.properties.to_h"}],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"gcloud/datastore/properties\">Gcloud::Datastore::Properties</a>"],"description":null}]},{"id":"gcloud/datastore/entity#key=","name":"key=","title":["Gcloud","Datastore","Entity#key="],"description":"<p>Sets the Key that identifies the entity.</p>\n\n<p>Once the entity is saved, the key is frozen and immutable. Trying to set\na key when immutable will raise a <code class=\"highlighter-rouge\">RuntimeError</code>.</p>","source":"lib/gcloud/datastore/entity.rb#L153","type":"instance","resources":[],"examples":[{"caption":"<p>The Key can be set before the entity is saved:</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\ndataset = gcloud.datastore\nentity = Gcloud::Datastore::Entity.new\nentity.key = Gcloud::Datastore::Key.new \"User\"\ndataset.save entity"},{"caption":"<p>Once the entity is saved, the key is frozen and immutable:</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\ndataset = gcloud.datastore\nentity = dataset.find \"User\", \"heidi@example.com\"\nentity.persisted? #=> true\nentity.key = Gcloud::Datastore::Key.new \"User\" #=> RuntimeError\nentity.key.frozen? #=> true\nentity.key.id = 9876543221 #=> RuntimeError"}],"params":[],"exceptions":[],"returns":[]},{"id":"gcloud/datastore/entity#persisted?","name":"persisted?","title":["Gcloud","Datastore","Entity#persisted?"],"description":"<p>Indicates if the record is persisted. Default is false.</p>","source":"lib/gcloud/datastore/entity.rb#L173","type":"instance","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\ndataset = gcloud.datastore\n\nnew_entity = Gcloud::Datastore::Entity.new\nnew_entity.persisted? #=> false\n\nfound_entity = dataset.find \"User\", \"heidi@example.com\"\nfound_entity.persisted? #=> true"}],"params":[],"exceptions":[],"returns":[{"types":["Boolean"],"description":null}]},{"id":"gcloud/datastore/entity#exclude_from_indexes?","name":"exclude_from_indexes?","title":["Gcloud","Datastore","Entity#exclude_from_indexes?"],"description":"<p>Indicates if a property is flagged to be excluded from the\nDatastore indexes. The default value is <code class=\"highlighter-rouge\">false</code>. This is another way of\nsaying that values are indexed by default.</p>\n\n<p>If the property is multi-valued, each value in the list can be managed\nseparately for exclusion from indexing. Calling this method for a\nmulti-valued property will return an array that contains the <code class=\"highlighter-rouge\">excluded</code>\nboolean value for each corresponding value in the property. For example,\nif a multi-valued property contains <code class=\"highlighter-rouge\">[\"a\", \"b\"]</code>, and only the value\n<code class=\"highlighter-rouge\">\"b\"</code> is indexed (meaning that <code class=\"highlighter-rouge\">\"a\"</code>’ is excluded), the return value for\nthis method will be <code class=\"highlighter-rouge\">[true, false]</code>.</p>","source":"lib/gcloud/datastore/entity.rb#L203","type":"instance","resources":[{"title":"Unindexed properties","link":"https://cloud.google.com/datastore/docs/concepts/indexes#Datastore_Unindexed_properties"}],"examples":[{"caption":"<p>Single property values will return a single flag setting:</p>","code":"entity[\"age\"] = 21\nentity.exclude_from_indexes? \"age\" #=> false"},{"caption":"<p>A multi-valued property will return an array of flag settings:</p>","code":"entity[\"tags\"] = [\"ruby\", \"code\"]\nentity.exclude_from_indexes! \"tags\", [true, false]\n\nentity.exclude_from_indexes? \"tags\" #=> [true, false]"}],"params":[],"exceptions":[],"returns":[{"types":["Boolean"],"description":null}]},{"id":"gcloud/datastore/entity#exclude_from_indexes!","name":"exclude_from_indexes!","title":["Gcloud","Datastore","Entity#exclude_from_indexes!"],"description":"<p>Sets whether a property should be excluded from the Datastore indexes.\nSetting <code class=\"highlighter-rouge\">true</code> will exclude the property from the indexes.\nSetting <code class=\"highlighter-rouge\">false</code> will include the property on any applicable indexes.\nThe default value is <code class=\"highlighter-rouge\">false</code>. This is another way of saying that values\nare indexed by default.</p>\n\n<p>If the property is multi-valued, each value in the list can be managed\nseparately for exclusion from indexing. When you call this method for a\nmulti-valued property, you can pass either a single boolean argument to\nbe applied to all of the values, or an array that contains the boolean\nargument for each corresponding value in the property. For example,\nif a multi-valued property contains <code class=\"highlighter-rouge\">[\"a\", \"b\"]</code>, and only the value\n<code class=\"highlighter-rouge\">\"b\"</code> should be indexed (meaning that <code class=\"highlighter-rouge\">\"a\"</code>’ should be excluded), you\nshould pass the array: <code class=\"highlighter-rouge\">[true, false]</code>.</p>","source":"lib/gcloud/datastore/entity.rb#L254","type":"instance","resources":[{"title":"Unindexed properties","link":"https://cloud.google.com/datastore/docs/concepts/indexes#Datastore_Unindexed_properties"}],"examples":[{"caption":"","code":"entity[\"age\"] = 21\nentity.exclude_from_indexes! \"age\", true"},{"caption":"<p>Multi-valued properties can be given multiple exclude flags:</p>","code":"entity[\"tags\"] = [\"ruby\", \"code\"]\nentity.exclude_from_indexes! \"tags\", [true, false]"},{"caption":"<p>Or, a single flag can be applied to all values in a property:</p>","code":"entity[\"tags\"] = [\"ruby\", \"code\"]\nentity.exclude_from_indexes! \"tags\", true"},{"caption":"<p>Flags can also be set with a block:</p>","code":"entity[\"age\"] = 21\nentity.exclude_from_indexes! \"age\" do |age|\n  age > 18\nend"}],"params":[{"name":"name","types":["String"],"description":"the property name","optional":false,"nullable":false},{"name":"flag","types":["Boolean","Array<Boolean>","nil"],"description":"whether the value or values\nshould be excluded from indexing","optional":true,"default":"nil","nullable":true},{"name":"yield","types":["block"],"description":"a block yielding each value of the property","optional":true,"nullable":false},{"name":"yield.value","types":["Object"],"description":"a value of the property","optional":false,"nullable":false}],"exceptions":[],"returns":[]}]}