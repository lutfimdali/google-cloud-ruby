{"id":"project","metadata":{"name":"Project","description":"<h1 id=\"project\">Project</h1>  <p>Google Cloud Logging collects and stores logs from applications and services on the Google Cloud Platform.</p>  <p>See Gcloud#logging</p>","source":"lib/gcloud/logging/project.rb#L42","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\nlogging = gcloud.logging\n# ..."}]},"methods":[{"metadata":{"name":"project","description":"<p>The Logging project connected to.</p>","source":"lib/gcloud/logging/project.rb#L66","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new \"my-todo-project\",\n                    \"/path/to/keyfile.json\"\nlogging = gcloud.logging\n\nlogging.project #=> \"my-todo-project\""}]},"params":[],"exceptions":[],"returns":[]},{"metadata":{"name":"entries","description":"<p>Lists log entries. Use this method to retrieve log entries from Cloud Logging.</p>","source":"lib/gcloud/logging/project.rb#L123","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\nlogging = gcloud.logging\nentries = logging.entries\nentries.each do |entry|\n  puts entry.name\nend"},{"caption":"<p>With pagination: (See <a data-custom-type=\"logging/entry/list\">Gcloud::Logging::Entry::List</a>)</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\nlogging = gcloud.logging\nentries = logging.entries\nloop do\n  entries.each do |entry|\n    puts entry.name\n  end\n  break unless entries.next?\n  entries = entries.next\nend"}]},"params":[{"name":"projects","types":["String","Array"],"description":"One or more project IDs or project numbers from which to retrieve log entries.","optional":true,"default":"nil","nullable":true},{"name":"filter","types":["String"],"description":"An <a href=\"https://cloud.google.com/logging/docs/view/advanced_filters\">advanced logs filter</a>. The filter is compared against all log entries in the projects specified by projectIds. Only entries that match the filter are retrieved. An empty filter matches all log entries.","optional":true,"default":"nil","nullable":true},{"name":"order","types":["String"],"description":"How the results should be sorted. Presently, the only permitted values are “timestamp” (default) and “timestamp desc”.","optional":true,"default":"nil","nullable":true},{"name":"token","types":["String"],"description":"A previously-returned page token representing part of the larger set of results to view.","optional":true,"default":"nil","nullable":true},{"name":"max","types":["Integer"],"description":"Maximum number of entries to return.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["Array<Gcloud::Logging::Entry>"],"description":"(See <a data-custom-type=\"logging/entry/list\">Gcloud::Logging::Entry::List</a>)"}]},{"metadata":{"name":"entry","description":"<p>Creates an new Entry object to be populated.</p>","source":"lib/gcloud/logging/project.rb#L156","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\nlogging = gcloud.logging\n\nnew_entry = logging.entry.tap do |e|\n  e.log_name = \"syslog\"\n  e.resource.type = \"cloudsql_database\"\n  e.timestamp = Time.now\n  e.severity = \"INFO\"\n  e.payload = \"Export completed\"\nend\n\nlogging.write_entries entry"}]},"params":[],"exceptions":[],"returns":[{"types":["Gcloud::Logging::Entry"],"description":null}]},{"metadata":{"name":"write_entries","description":"<p>Lists log entries. Use this method to retrieve log entries from Cloud Logging.</p>","source":"lib/gcloud/logging/project.rb#L194","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\nlogging = gcloud.logging\n\nnew_entry = logging.entry.tap do |e|\n  e.log_name = \"syslog\"\n  e.resource.type = \"cloudsql_database\"\n  e.timestamp = Time.now\n  e.severity = \"INFO\"\n  e.payload = \"Export completed\"\nend\n\nlogging.write_entries new_entry"},{"caption":"<p>You can provide log name for all entries.</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\nlogging = gcloud.logging\n\nlogging.write_entries [entry1, entry2], log_name: \"syslog\""}]},"params":[{"name":"entries","types":["Gcloud::Logging::Entry","Array"],"description":"One or more entry objects to write. The log entries must have values for all required fields.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["Boolean"],"description":"Returns <code class=\"highlighter-rouge\">true</code> if the entries were written."}]},{"metadata":{"name":"logger","description":"<p>Creates a logger object that is API compatible with ruby’s standard library Logger.</p>","source":"lib/gcloud/logging/project.rb#L229","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\nlogging = gcloud.logging\n\nresource = logging.resource \"gae_app\",\n                            module_id: \"1\",\n                            version_id: \"20150925t173233\"\n\nlogger = logging.logger \"syslog\", resource, env: :production"}]},"params":[{"name":"log_name","types":["String"],"description":"A log resource name to be associated with the written log entries.","optional":false,"nullable":false},{"name":"resource","types":["Gcloud::Logging::Resource"],"description":"The monitored resource to be associated with written log entries.","optional":false,"nullable":false},{"name":"labels","types":["Hash"],"description":"A set of user-defined data to be associated with written log entries.","optional":true,"default":"{}","nullable":false}],"exceptions":[],"returns":[{"types":["Gcloud::Logging::Logger"],"description":"Logger object that can be used in place of a ruby standard library logger object."}]},{"metadata":{"name":"delete_log","description":"<p>Deletes a log and all its log entries. The log will reappear if it receives new entries.</p>","source":"lib/gcloud/logging/project.rb#L253","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\nlogging = gcloud.logging\nlogging.delete_log \"my-log\""}]},"params":[{"name":"name","types":["String"],"description":"The name of the log, which may be the full path including the project ID (<code class=\"highlighter-rouge\">projects/&lt;project-id&gt;/logs/&lt;log-id&gt;</code>), or just the short name (<code class=\"highlighter-rouge\">&lt;log-id&gt;</code>), in which case the beginning of the path will be automatically prepended, using the ID of the current project.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["Boolean"],"description":"Returns <code class=\"highlighter-rouge\">true</code> if the log and all its log entries were deleted."}]},{"metadata":{"name":"resource_descriptors","description":"<p>Retrieves the list of monitored resource descriptors that are used by Google Cloud Logging.</p>","source":"lib/gcloud/logging/project.rb#L298","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\nlogging = gcloud.logging\nresource_descriptors = logging.resource_descriptors\nresource_descriptors.each do |resource_descriptor|\n  puts resource_descriptor.name\nend"},{"caption":"<p>Pagination: (See <a data-custom-type=\"logging/resourcedescriptor/list\">Gcloud::Logging::ResourceDescriptor::List</a>)</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\nlogging = gcloud.logging\nresource_descriptors = logging.resource_descriptors\nloop do\n  resource_descriptors.each do |resource_descriptor|\n    puts resource_descriptor.name\n  end\n  break unless resource_descriptors.next?\n  resource_descriptors = resource_descriptors.next\nend"}]},"params":[{"name":"token","types":["String"],"description":"A previously-returned page token representing part of the larger set of results to view.","optional":true,"default":"nil","nullable":true},{"name":"max","types":["Integer"],"description":"Maximum number of resource descriptors to return.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["Array<Gcloud::Logging::ResourceDescriptor>"],"description":"(See <a data-custom-type=\"logging/resourcedescriptor/list\">Gcloud::Logging::ResourceDescriptor::List</a>)"}]},{"metadata":{"name":"resource","description":"<p>Creates a new Resource object.</p>","source":"lib/gcloud/logging/project.rb#L324","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\nlogging = gcloud.logging\n\nresource = logging.resource \"gae_app\",\n                            \"module_id\" => \"1\",\n                            \"version_id\" => \"20150925t173233\""}]},"params":[],"exceptions":[],"returns":[{"types":["Gcloud::Logging::Resource"],"description":null}]},{"metadata":{"name":"sinks","description":"<p>Retrieves the list of sinks belonging to the project.</p>","source":"lib/gcloud/logging/project.rb#L366","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\nlogging = gcloud.logging\nsinks = logging.sinks\nsinks.each do |sink|\n  puts sink.name\nend"},{"caption":"<p>With pagination: (See <a data-custom-type=\"logging/sink/list\">Gcloud::Logging::Sink::List</a>)</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\nlogging = gcloud.logging\nsinks = logging.sinks\nloop do\n  sinks.each do |sink|\n    puts sink.name\n  end\n  break unless sinks.next?\n  sinks = sinks.next\nend"}]},"params":[{"name":"token","types":["String"],"description":"A previously-returned page token representing part of the larger set of results to view.","optional":true,"default":"nil","nullable":true},{"name":"max","types":["Integer"],"description":"Maximum number of sinks to return.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["Array<Gcloud::Logging::Sink>"],"description":"(See <a data-custom-type=\"logging/sink/list\">Gcloud::Logging::Sink::List</a>)"}]},{"metadata":{"name":"create_sink","description":"<p>Creates a new sink.</p>","source":"lib/gcloud/logging/project.rb#L407","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\nlogging = gcloud.logging\nsink = logging.create_sink \"my-sink\""}]},"params":[{"name":"name","types":["String"],"description":"The client-assigned sink identifier. Sink identifiers are limited to 1000 characters and can include only the following characters: <code class=\"highlighter-rouge\">A-Z</code>, <code class=\"highlighter-rouge\">a-z</code>, <code class=\"highlighter-rouge\">0-9</code>, and the special characters <code class=\"highlighter-rouge\">_-.</code>.","optional":false,"nullable":false},{"name":"destination","types":["String"],"description":"The export destination. See <a href=\"https://cloud.google.com/logging/docs/api/tasks/exporting-logs\">Exporting Logs With Sinks</a>.","optional":true,"default":"nil","nullable":true},{"name":"filter","types":["String"],"description":"An <a href=\"https://cloud.google.com/logging/docs/view/advanced_filters\">advanced logs filter</a> that defines the log entries to be exported. The filter must be consistent with the log entry format designed by the <code class=\"highlighter-rouge\">version</code> parameter, regardless of the format of the log entry that was originally written to Cloud Logging.","optional":true,"default":"nil","nullable":true},{"name":"version","types":["Symbol"],"description":"The log entry version used when exporting log entries from this sink. This version does not have to correspond to the version of the log entry when it was written to Cloud Logging. Accepted values are <code class=\"highlighter-rouge\">:unspecified</code>, <code class=\"highlighter-rouge\">:v2</code>, and <code class=\"highlighter-rouge\">:v1</code>.","optional":true,"default":":unspecified","nullable":false}],"exceptions":[],"returns":[{"types":["Gcloud::Logging::Sink"],"description":null}]},{"metadata":{"name":"sink","description":"<p>Retrieves sink by name.</p>","source":"lib/gcloud/logging/project.rb#L441","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\nlogging = gcloud.logging\nsink = logging.sink \"existing-sink\""},{"caption":"<p>By default <code class=\"highlighter-rouge\">nil</code> will be returned if the sink does not exist.</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\nlogging = gcloud.logging\nsink = logging.sink \"non-existing-sink\" #=> nil"}]},"params":[{"name":"sink_name","types":["String"],"description":"Name of a sink.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["Gcloud::Logging::Sink","nil"],"description":"Returns <code class=\"highlighter-rouge\">nil</code> if sink does not exist."}]},{"metadata":{"name":"metrics","description":"<p>Retrieves the list of metrics belonging to the project.</p>","source":"lib/gcloud/logging/project.rb#L485","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\nlogging = gcloud.logging\nmetrics = logging.metrics\nmetrics.each do |metric|\n  puts metric.name\nend"},{"caption":"<p>With pagination: (See <a data-custom-type=\"logging/metric/list\">Gcloud::Logging::Metric::List</a>)</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\nlogging = gcloud.logging\nmetrics = logging.metrics\nloop do\n  metrics.each do |metric|\n    puts metric.name\n  end\n  break unless metrics.next?\n  metrics = metrics.next\nend"}]},"params":[{"name":"token","types":["String"],"description":"A previously-returned page token representing part of the larger set of results to view.","optional":true,"default":"nil","nullable":true},{"name":"max","types":["Integer"],"description":"Maximum number of metrics to return.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["Array<Gcloud::Logging::Metric>"],"description":"(See <a data-custom-type=\"logging/metric/list\">Gcloud::Logging::Metric::List</a>)"}]},{"metadata":{"name":"create_metric","description":"<p>Creates a new metric.</p>","source":"lib/gcloud/logging/project.rb#L519","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\nlogging = gcloud.logging\nmetric = logging.create_metric \"my-metric\""}]},"params":[{"name":"name","types":["String"],"description":"The client-assigned metric identifier. Metric identifiers are limited to 1000 characters and can include only the following characters: <code class=\"highlighter-rouge\">A-Z</code>, <code class=\"highlighter-rouge\">a-z</code>, <code class=\"highlighter-rouge\">0-9</code>, and the special characters <code class=\"highlighter-rouge\">_-.,+!*',()%/\\</code>. The forward-slash character (<code class=\"highlighter-rouge\">/</code>) denotes a hierarchy of name pieces, and it cannot be the first character of the name.","optional":false,"nullable":false},{"name":"description","types":["String"],"description":"A description of this metric, which is used in documentation.","optional":true,"default":"nil","nullable":true},{"name":"filter","types":["String"],"description":"An <a href=\"https://cloud.google.com/logging/docs/view/advanced_filters\">advanced logs filter</a>.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["Gcloud::Logging::Metric"],"description":null}]},{"metadata":{"name":"metric","description":"<p>Retrieves metric by name.</p>","source":"lib/gcloud/logging/project.rb#L552","resources":[],"examples":[{"caption":"","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\nlogging = gcloud.logging\nmetric = logging.metric \"existing-metric\""},{"caption":"<p>By default <code class=\"highlighter-rouge\">nil</code> will be returned if the metric does not exist.</p>","code":"require \"gcloud\"\n\ngcloud = Gcloud.new\nlogging = gcloud.logging\nmetric = logging.metric \"non-existing-metric\" #=> nil"}]},"params":[{"name":"name","types":["String"],"description":"Name of a metric.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["Gcloud::Logging::Metric","nil"],"description":"Returns <code class=\"highlighter-rouge\">nil</code> if metric does not exist."}]},{"metadata":{"name":"ensure_connection!","description":"<p>Raise an error unless an active connection is available.</p>","source":"lib/gcloud/logging/project.rb#L566","resources":[],"examples":[]},"params":[],"exceptions":[],"returns":[]}]}