{"id":"google/cloud/pubsub/project","name":"Project","title":["Google","Cloud","Pubsub","Project"],"description":"<h1 id=\"project\">Project</h1>\n\n<p>Represents the project that pubsub messages are pushed to and pulled\nfrom. <a data-custom-type=\"google/cloud/pubsub/topic\">Topic</a> is a named resource to which messages are sent by\npublishers. <a data-custom-type=\"google/cloud/pubsub/subscription\">Subscription</a> is a named resource representing the stream\nof messages from a single, specific topic, to be delivered to the\nsubscribing application. <a data-custom-type=\"google/cloud/pubsub/message\">Message</a> is a combination of data and\nattributes that a publisher sends to a topic and is eventually delivered\nto subscribers.</p>\n\n<p>See <a data-custom-type=\"google/cloud\" data-method=\"pubsub-instance\">Google::Cloud#pubsub</a></p>","source":"lib/google/cloud/pubsub/project.rb#L47","resources":[],"examples":[{"caption":"","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\npubsub = gcloud.pubsub\n\ntopic = pubsub.topic \"my-topic\"\ntopic.publish \"task completed\""}],"methods":[{"id":"project-instance","type":"instance","name":"project","title":["Google","Cloud","Pubsub","Project#project"],"description":"<p>The Pub/Sub project connected to.</p>","source":"lib/google/cloud/pubsub/project.rb#L69","resources":[],"examples":[{"caption":"","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new \"my-todo-project\",\n                    \"/path/to/keyfile.json\"\npubsub = gcloud.pubsub\n\npubsub.project #=> \"my-todo-project\""}],"params":[],"exceptions":[],"returns":[]},{"id":"topic-instance","type":"instance","name":"topic","title":["Google","Cloud","Pubsub","Project#topic"],"description":"<p>Retrieves topic by name.</p>\n\n<p>The topic will be created if the topic does not exist and the\n<code>autocreate</code> option is set to true.</p>","source":"lib/google/cloud/pubsub/project.rb#L140","resources":[],"examples":[{"caption":"","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\npubsub = gcloud.pubsub\ntopic = pubsub.topic \"existing-topic\""},{"caption":"<p>By default <code>nil</code> will be returned if topic does not exist.</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\npubsub = gcloud.pubsub\ntopic = pubsub.topic \"non-existing-topic\" #=> nil"},{"caption":"<p>With the <code>autocreate</code> option set to <code>true</code>.</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\npubsub = gcloud.pubsub\ntopic = pubsub.topic \"non-existing-topic\", autocreate: true"},{"caption":"<p>Create topic in a different project with the <code>project</code> flag.</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\npubsub = gcloud.pubsub\ntopic = pubsub.topic \"another-topic\", project: \"another-project\""},{"caption":"<p>Skip the lookup against the service with <code>skip_lookup</code>:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\npubsub = gcloud.pubsub\ntopic = pubsub.topic \"another-topic\", skip_lookup: true"}],"params":[{"name":"topic_name","types":["String"],"description":"Name of a topic.","optional":false,"nullable":false},{"name":"autocreate","types":["Boolean"],"description":"Flag to control whether the requested\ntopic will be created if it does not exist. Ignored if <code>skip_lookup</code>\nis <code>true</code>. The default value is <code>false</code>.","optional":true,"default":"nil","nullable":true},{"name":"project","types":["String"],"description":"If the topic belongs to a project other than\nthe one currently connected to, the alternate project ID can be\nspecified here.","optional":true,"default":"nil","nullable":true},{"name":"skip_lookup","types":["Boolean"],"description":"Optionally create a <a data-custom-type=\"google/cloud/pubsub/topic\">Topic</a> object\nwithout verifying the topic resource exists on the Pub/Sub service.\nCalls made on this object will raise errors if the topic resource\ndoes not exist. Default is <code>false</code>.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/pubsub/topic\">Google::Cloud::Pubsub::Topic</a>","nil"],"description":"Returns <code>nil</code> if topic\ndoes not exist. Will return a newly created{\nGoogle::Cloud::Pubsub::Topic} if the topic does not exist and\n<code>autocreate</code> is set to <code>true</code>."}]},{"id":"create_topic-instance","type":"instance","name":"create_topic","title":["Google","Cloud","Pubsub","Project#create_topic"],"description":"<p>Creates a new topic.</p>","source":"lib/google/cloud/pubsub/project.rb#L167","resources":[],"examples":[{"caption":"","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\npubsub = gcloud.pubsub\ntopic = pubsub.create_topic \"my-topic\""}],"params":[{"name":"topic_name","types":["String"],"description":"Name of a topic.","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/pubsub/topic\">Google::Cloud::Pubsub::Topic</a>"],"description":""}]},{"id":"topics-instance","type":"instance","name":"topics","title":["Google","Cloud","Pubsub","Project#topics"],"description":"<p>Retrieves a list of topics for the given project.</p>","source":"lib/google/cloud/pubsub/project.rb#L207","resources":[],"examples":[{"caption":"","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\npubsub = gcloud.pubsub\n\ntopics = pubsub.topics\ntopics.each do |topic|\n  puts topic.name\nend"},{"caption":"<p>Retrieve all topics: (See <a data-custom-type=\"google/cloud/pubsub/topic/list\" data-method=\"all-instance\">Topic::List#all</a>)</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\npubsub = gcloud.pubsub\n\ntopics = pubsub.topics\ntopics.all do |topic|\n  puts topic.name\nend"}],"params":[{"name":"token","types":["String"],"description":"The <code>token</code> value returned by the last call to\n<code>topics</code>; indicates that this is a continuation of a call, and that\nthe system should return the next page of data.","optional":true,"default":"nil","nullable":true},{"name":"max","types":["Integer"],"description":"Maximum number of topics to return.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["Array&lt;<a data-custom-type=\"google/cloud/pubsub/topic\">Google::Cloud::Pubsub::Topic</a>&gt;"],"description":"(See\n<a data-custom-type=\"google/cloud/pubsub/topic/list\">Google::Cloud::Pubsub::Topic::List</a>)"}]},{"id":"publish-instance","type":"instance","name":"publish","title":["Google","Cloud","Pubsub","Project#publish"],"description":"<p>Publishes one or more messages to the given topic. The topic will be\ncreated if the topic does previously not exist and the <code>autocreate</code>\noption is provided.</p>\n\n<p>A note about auto-creating the topic: Any message published to a topic\nwithout a subscription will be lost.</p>","source":"lib/google/cloud/pubsub/project.rb#L282","resources":[],"examples":[{"caption":"","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\npubsub = gcloud.pubsub\n\nmsg = pubsub.publish \"my-topic\", \"new-message\""},{"caption":"<p>A message can be published using a File object:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\npubsub = gcloud.pubsub\n\nmsg = pubsub.publish \"my-topic\", File.open(\"message.txt\")"},{"caption":"<p>Additionally, a message can be published with attributes:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\npubsub = gcloud.pubsub\n\nmsg = pubsub.publish \"my-topic\", \"new-message\", foo: :bar,\n                                                this: :that"},{"caption":"<p>Multiple messages can be sent at the same time using a block:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\npubsub = gcloud.pubsub\n\nmsgs = pubsub.publish \"my-topic\" do |p|\n  p.publish \"new-message-1\", foo: :bar\n  p.publish \"new-message-2\", foo: :baz\n  p.publish \"new-message-3\", foo: :bif\nend"},{"caption":"<p>With <code>autocreate</code>:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\npubsub = gcloud.pubsub\n\nmsg = pubsub.publish \"new-topic\", \"new-message\", autocreate: true"}],"params":[{"name":"topic_name","types":["String"],"description":"Name of a topic.","optional":false,"nullable":false},{"name":"data","types":["String","File"],"description":"The message data.","optional":true,"default":"nil","nullable":true},{"name":"attributes","types":["Hash"],"description":"Optional attributes for the message.","optional":true,"default":"{}","nullable":false},{"name":"attributes.autocreate","types":["Boolean"],"description":"Flag to control whether the\nprovided topic will be created if it does not exist.","optional":true,"nullable":false},{"name":"yield","types":["block"],"description":"a block for publishing multiple messages in one\nrequest","optional":true,"nullable":false},{"name":"yield.publisher","types":["Topic::Publisher"],"description":"the topic publisher object","optional":false,"nullable":false}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/pubsub/message\">Message</a>","Array&lt;<a data-custom-type=\"google/cloud/pubsub/message\">Message</a>&gt;"],"description":"Returns the published message when\ncalled without a block, or an array of messages when called with a\nblock."}]},{"id":"subscribe-instance","type":"instance","name":"subscribe","title":["Google","Cloud","Pubsub","Project#subscribe"],"description":"<p>Creates a new <a data-custom-type=\"google/cloud/pubsub/subscription\">Subscription</a> object for the provided topic. The topic\nwill be created if the topic does previously not exist and the\n<code>autocreate</code> option is provided.</p>","source":"lib/google/cloud/pubsub/project.rb#L355","resources":[],"examples":[{"caption":"","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\npubsub = gcloud.pubsub\n\nsub = pubsub.subscribe \"my-topic\", \"my-topic-sub\"\nputs sub.name # => \"my-topic-sub\""},{"caption":"<p>The name is optional, and will be generated if not given.</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\npubsub = gcloud.pubsub\n\nsub = pubsub.subscribe \"my-topic\"\nputs sub.name # => \"generated-sub-name\""},{"caption":"<p>Wait 2 minutes for acknowledgement and push all to endpoint:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\npubsub = gcloud.pubsub\n\nsub = pubsub.subscribe \"my-topic\", \"my-topic-sub\",\n                       deadline: 120,\n                       endpoint: \"https://example.com/push\""},{"caption":"<p>With <code>autocreate</code>:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\npubsub = gcloud.pubsub\n\nsub = pubsub.subscribe \"new-topic\", \"new-topic-sub\",\n                       autocreate: true"}],"params":[{"name":"topic_name","types":["String"],"description":"Name of a topic.","optional":false,"nullable":false},{"name":"subscription_name","types":["String"],"description":"Name of the new subscription. Must\nstart with a letter, and contain only letters ([A-Za-z]), numbers\n([0-9], dashes (-), underscores (_), periods (.), tildes (~), plus\n(+) or percent signs (%). It must be between 3 and 255 characters in\nlength, and it must not start with “goog”.","optional":false,"nullable":false},{"name":"deadline","types":["Integer"],"description":"The maximum number of seconds after a\nsubscriber receives a message before the subscriber should\nacknowledge the message.","optional":true,"default":"nil","nullable":true},{"name":"endpoint","types":["String"],"description":"A URL locating the endpoint to which messages\nshould be pushed.","optional":true,"default":"nil","nullable":true},{"name":"autocreate","types":["String"],"description":"Flag to control whether the topic will be\ncreated if it does not exist.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/pubsub/subscription\">Google::Cloud::Pubsub::Subscription</a>"],"description":""}]},{"id":"subscription-instance","type":"instance","name":"subscription","title":["Google","Cloud","Pubsub","Project#subscription"],"description":"<p>Retrieves subscription by name.</p>","source":"lib/google/cloud/pubsub/project.rb#L408","resources":[],"examples":[{"caption":"","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\npubsub = gcloud.pubsub\n\nsubscription = pubsub.subscription \"my-sub\"\nputs subscription.name"},{"caption":"<p>Skip the lookup against the service with <code>skip_lookup</code>:</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\npubsub = gcloud.pubsub\n\n# No API call is made to retrieve the subscription information.\nsubscription = pubsub.subscription \"my-sub\", skip_lookup: true\nputs subscription.name"}],"params":[{"name":"subscription_name","types":["String"],"description":"Name of a subscription.","optional":false,"nullable":false},{"name":"project","types":["String"],"description":"If the subscription belongs to a project other\nthan the one currently connected to, the alternate project ID can be\nspecified here.","optional":true,"default":"nil","nullable":true},{"name":"skip_lookup","types":["Boolean"],"description":"Optionally create a <a data-custom-type=\"google/cloud/pubsub/subscription\">Subscription</a> object\nwithout verifying the subscription resource exists on the Pub/Sub\nservice. Calls made on this object will raise errors if the service\nresource does not exist. Default is <code>false</code>.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"google/cloud/pubsub/subscription\">Google::Cloud::Pubsub::Subscription</a>","nil"],"description":"Returns <code>nil</code> if\nthe subscription does not exist"}]},{"id":"subscriptions-instance","type":"instance","name":"subscriptions","title":["Google","Cloud","Pubsub","Project#subscriptions"],"description":"<p>Retrieves a list of subscriptions for the given project.</p>","source":"lib/google/cloud/pubsub/project.rb#L454","resources":[],"examples":[{"caption":"","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\npubsub = gcloud.pubsub\n\nsubscriptions = pubsub.subscriptions\nsubscriptions.each do |subscription|\n  puts subscription.name\nend"},{"caption":"<p>Retrieve all subscriptions: (See <a data-custom-type=\"google/cloud/pubsub/subscription/list\" data-method=\"all-instance\">Subscription::List#all</a>)</p>","code":"require \"google/cloud\"\n\ngcloud = Google::Cloud.new\npubsub = gcloud.pubsub\n\nsubscriptions = pubsub.subscriptions\nsubscriptions.all do |subscription|\n  puts subscription.name\nend"}],"params":[{"name":"token","types":["String"],"description":"A previously-returned page token representing\npart of the larger set of results to view.","optional":true,"default":"nil","nullable":true},{"name":"max","types":["Integer"],"description":"Maximum number of subscriptions to return.","optional":true,"default":"nil","nullable":true}],"exceptions":[],"returns":[{"types":["Array&lt;<a data-custom-type=\"google/cloud/pubsub/subscription\">Google::Cloud::Pubsub::Subscription</a>&gt;"],"description":"(See\n<a data-custom-type=\"google/cloud/pubsub/subscription/list\">Google::Cloud::Pubsub::Subscription::List</a>)"}]}]}